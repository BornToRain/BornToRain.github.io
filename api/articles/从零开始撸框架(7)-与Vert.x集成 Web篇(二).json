{"title":"从零开始撸框架(7)-与Vert.x集成 Web篇(二)","uid":"79e2d64077da00e234baec47e24c2859","slug":"从零开始撸框架(7)-与Vert.x集成 Web篇(二)","date":"2021-05-12T06:33:24.000Z","updated":"2021-06-08T10:18:33.464Z","comments":true,"path":"api/articles/从零开始撸框架(7)-与Vert.x集成 Web篇(二).json","keywords":["Coder","Scalaer","Javaer"],"cover":"/images/vertxlogo.png","content":"<p>上一篇讲完了全局配置,这一篇我们来讲每个路由的集成.</p>\n<h2 id=\"Vert-x原始使用方式\"><a href=\"#Vert-x原始使用方式\" class=\"headerlink\" title=\"Vert.x原始使用方式\"></a>Vert.x原始使用方式</h2><p>样例来自于<a href=\"https://vertx.io/\">Vert.x官网</a></p>\n<h3 id=\"Vert-x配置api接口\"><a href=\"#Vert-x配置api接口\" class=\"headerlink\" title=\"Vert.x配置api接口\"></a>Vert.x配置api接口</h3><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestVerticle</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">AbstractVerticle</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">Router</span> router <span class=\"token operator\">=</span> <span class=\"token class-name\">Router</span><span class=\"token punctuation\">.</span><span class=\"token function\">router</span><span class=\"token punctuation\">(</span>vertx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">route</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">method</span><span class=\"token punctuation\">(</span>GET<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">path</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/api1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">consumes</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"app/json\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">produces</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"app/json\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">handler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">failureHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">route</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">method</span><span class=\"token punctuation\">(</span>GET<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">path</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/api2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">consumes</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"app/json\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">produces</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"app/json\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">handler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">failureHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>原始使用方式链式编程写起来是很方便,但是全部路由都得写在一起集中管理,对于习惯了传统模式的人很不友好,下面我们来加以改造让它更符合我们更习惯的使用方式.</p>\n<p>改造的话分为以下几个方面:</p>\n<ol>\n<li>请求路径</li>\n<li>请求方式</li>\n<li>媒体类型</li>\n<li>响应状态</li>\n<li>请求参数</li>\n<li>http工作流</li>\n</ol>\n<p>其中1-4为静态解析,即代码编译期我们就能确定值.5-6为动态解析,每次请求它的参数,工作流都不相同,需要我们动态解析去确定.</p>\n<p>下面我们先完成静态解析部分.</p>\n<h2 id=\"静态解析\"><a href=\"#静态解析\" class=\"headerlink\" title=\"静态解析\"></a>静态解析</h2><h3 id=\"请求路径\"><a href=\"#请求路径\" class=\"headerlink\" title=\"请求路径\"></a>请求路径</h3><p>首先是第一步,api请求路径解析.</p>\n<p>上文说到了我们会用到jsr311注解,jsr311中是使用 <em>@Path</em>来获取路径的,这里我们写一个工具类来解析@Path注解.<br><strong>Paths.java</strong></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>kit</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">lombok<span class=\"token punctuation\">.</span>extern<span class=\"token punctuation\">.</span>log4j<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Log4j2</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">lombok<span class=\"token punctuation\">.</span>val</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>kit<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Fn</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>ws<span class=\"token punctuation\">.</span>rs<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Path</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Objects</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * 解析@Path获取请求路径\n * @author &lt;a href=\"mailto:1159930219@qq.com\">BornToRain&lt;/a>\n */</span>\n<span class=\"token annotation punctuation\">@Log4j2</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Paths</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Path</span> path<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Path</span> path<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> root<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token class-name\">Fn</span><span class=\"token punctuation\">.</span><span class=\"token function\">ensureRun</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Objects</span><span class=\"token punctuation\">.</span><span class=\"token function\">isNull</span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// 顶级路径</span>\n      <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token function\">adjust</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">.</span><span class=\"token function\">value</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// 先取上级路径</span>\n        val rootPath <span class=\"token operator\">=</span> <span class=\"token function\">adjust</span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 当前路径</span>\n        val subPath <span class=\"token operator\">=</span> <span class=\"token function\">adjust</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">.</span><span class=\"token function\">value</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 1 == /</span>\n        <span class=\"token keyword\">return</span> <span class=\"token number\">1</span> <span class=\"token operator\">==</span> rootPath<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> subPath <span class=\"token operator\">:</span> rootPath <span class=\"token operator\">+</span> subPath<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token comment\">/**\n   * uri必须是/开头无/结尾,无多//形式.\n   * ex: / -> /\n   * ex: /hello -> /hello\n   * ex: /hello/ -> /hello\n   * ex: /hello// -> /hello\n   */</span>\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token function\">adjust</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> path<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 多//转单/</span>\n    <span class=\"token keyword\">var</span> uri <span class=\"token operator\">=</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\\\/+\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 去尾斜杠</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>uri<span class=\"token punctuation\">.</span><span class=\"token function\">endsWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> uri <span class=\"token operator\">=</span> uri<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> uri<span class=\"token punctuation\">.</span><span class=\"token function\">lastIndexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// /开头</span>\n    <span class=\"token keyword\">return</span>  uri<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token string\">'/'</span> <span class=\"token operator\">?</span> uri <span class=\"token operator\">:</span> <span class=\"token string\">'/'</span> <span class=\"token operator\">+</span> uri<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"请求方式\"><a href=\"#请求方式\" class=\"headerlink\" title=\"请求方式\"></a>请求方式</h3><p>解析完请求路径开始解析请求方式.jsr311请求方式注解:</p>\n<ul>\n<li>GET </li>\n<li>POST</li>\n<li>PUT</li>\n<li>DELTE</li>\n<li>..</li>\n</ul>\n<p>在<strong>Trunk.java</strong>中追加</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Trunk</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// 存放的是每个请求方式对应的请求路径集合.</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">HttpMethod</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Set</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> METHOD_URIS <span class=\"token operator\">=</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span>\n    <span class=\"token class-name\">HttpMethod</span><span class=\"token punctuation\">.</span>GET<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashSet</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token class-name\">HttpMethod</span><span class=\"token punctuation\">.</span>POST<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashSet</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token class-name\">HttpMethod</span><span class=\"token punctuation\">.</span>PUT<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashSet</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token class-name\">HttpMethod</span><span class=\"token punctuation\">.</span>DELETE<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashSet</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token class-name\">HttpMethod</span><span class=\"token punctuation\">.</span>PATCH<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashSet</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>HttpMehotds.java</strong></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>kit</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">io<span class=\"token punctuation\">.</span>vertx<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HttpMethod</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">lombok<span class=\"token punctuation\">.</span>extern<span class=\"token punctuation\">.</span>log4j<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Log4j2</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">lombok<span class=\"token punctuation\">.</span>val</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>kit<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Fn</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>kit<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Trunk</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>scan<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Request</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>ws<span class=\"token punctuation\">.</span>rs<span class=\"token punctuation\">.</span></span>DELETE<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>ws<span class=\"token punctuation\">.</span>rs<span class=\"token punctuation\">.</span></span>GET<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>ws<span class=\"token punctuation\">.</span>rs<span class=\"token punctuation\">.</span></span>HEAD<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>ws<span class=\"token punctuation\">.</span>rs<span class=\"token punctuation\">.</span></span>OPTIONS<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>ws<span class=\"token punctuation\">.</span>rs<span class=\"token punctuation\">.</span></span>PATCH<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>ws<span class=\"token punctuation\">.</span>rs<span class=\"token punctuation\">.</span></span>POST<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>ws<span class=\"token punctuation\">.</span>rs<span class=\"token punctuation\">.</span></span>PUT<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Annotation</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span>reflect<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Method</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Map</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * 解析@GET..注解获取请求方式\n * @author &lt;a href=\"mailto:1159930219@qq.com\">BornToRain&lt;/a>\n */</span>\n<span class=\"token annotation punctuation\">@Log4j2</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HttpMethods</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// jsr311与Vert.x映射关系</span>\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Class</span><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpMethod</span><span class=\"token punctuation\">></span></span> METHODS <span class=\"token operator\">=</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span>\n    GET<span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpMethod</span><span class=\"token punctuation\">.</span>GET<span class=\"token punctuation\">,</span>\n    POST<span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpMethod</span><span class=\"token punctuation\">.</span>POST<span class=\"token punctuation\">,</span>\n    PUT<span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpMethod</span><span class=\"token punctuation\">.</span>PUT<span class=\"token punctuation\">,</span>\n    DELETE<span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpMethod</span><span class=\"token punctuation\">.</span>DELETE<span class=\"token punctuation\">,</span>\n    OPTIONS<span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpMethod</span><span class=\"token punctuation\">.</span>OPTIONS<span class=\"token punctuation\">,</span>\n    PATCH<span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpMethod</span><span class=\"token punctuation\">.</span>PATCH<span class=\"token punctuation\">,</span>\n    HEAD<span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpMethod</span><span class=\"token punctuation\">.</span>HEAD\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Request</span> req<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">Fn</span><span class=\"token punctuation\">.</span><span class=\"token function\">ensureExec</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span>\n      val value <span class=\"token operator\">=</span> <span class=\"token class-name\">Trunk</span><span class=\"token punctuation\">.</span>METHOD_URIS<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span><span class=\"token function\">getHttpMethod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      value<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span><span class=\"token function\">getPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> req<span class=\"token punctuation\">.</span><span class=\"token function\">getHttpMethod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">HttpMethod</span> <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Method</span> method<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    val annos <span class=\"token operator\">=</span> method<span class=\"token punctuation\">.</span><span class=\"token function\">getDeclaredAnnotations</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">HttpMethod</span> ret <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Annotation</span> annotation <span class=\"token operator\">:</span> annos<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      val key <span class=\"token operator\">=</span> annotation<span class=\"token punctuation\">.</span><span class=\"token function\">annotationType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>METHODS<span class=\"token punctuation\">.</span><span class=\"token function\">containsKey</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        ret <span class=\"token operator\">=</span> METHODS<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> ret<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"媒体类型\"><a href=\"#媒体类型\" class=\"headerlink\" title=\"媒体类型\"></a>媒体类型</h3><p>媒体类型同理,jsr311中:</p>\n<ul>\n<li>@Consumes 指定请求内容类型(Content-Type). ex: application/json;</li>\n<li>@Produces 指定响应内容类型(Accept),不过只有当请求头中Accept包含指定类型才返回.</li>\n</ul>\n<p><strong>MediaTypes.java</strong></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>kit</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">lombok<span class=\"token punctuation\">.</span>val</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>ws<span class=\"token punctuation\">.</span>rs<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Consumes</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>ws<span class=\"token punctuation\">.</span>rs<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Produces</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span>reflect<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Method</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Objects</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Set</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>stream<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * @author &lt;a href=\"mailto:1159930219@qq.com\">BornToRain&lt;/a>\n */</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MediaTypes</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// 默认类型 wildcard</span>\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> DEFAULT <span class=\"token operator\">=</span> <span class=\"token class-name\">Set</span><span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"*/*\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">resolveConsumes</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Method</span> method<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    val anno <span class=\"token operator\">=</span> method<span class=\"token punctuation\">.</span><span class=\"token function\">getAnnotation</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Consumes</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token class-name\">Fn</span><span class=\"token punctuation\">.</span><span class=\"token function\">ensureRun</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Objects</span><span class=\"token punctuation\">.</span><span class=\"token function\">isNull</span><span class=\"token punctuation\">(</span>anno<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> DEFAULT<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span>anno<span class=\"token punctuation\">.</span><span class=\"token function\">value</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">toSet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">resolveProduces</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Method</span> method<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    val anno <span class=\"token operator\">=</span> method<span class=\"token punctuation\">.</span><span class=\"token function\">getAnnotation</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Produces</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token class-name\">Fn</span><span class=\"token punctuation\">.</span><span class=\"token function\">ensureRun</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Objects</span><span class=\"token punctuation\">.</span><span class=\"token function\">isNull</span><span class=\"token punctuation\">(</span>anno<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> DEFAULT<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span>anno<span class=\"token punctuation\">.</span><span class=\"token function\">value</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">toSet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"响应状态\"><a href=\"#响应状态\" class=\"headerlink\" title=\"响应状态\"></a>响应状态</h3><p>响应状态解析于我们自定义注解<em>ResponstStatus.java</em>.</p>\n<p><strong>ResponstStatuses.java</strong></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>kit</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">lombok<span class=\"token punctuation\">.</span>val</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>kit<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Fn</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>annotations<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ResponseStatus</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>constant<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span>reflect<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Method</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Objects</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * @author &lt;a href=\"mailto:1159930219@qq.com\">BornToRain&lt;/a>\n */</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ResponstStatuses</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// 这里默认状态返回200 Ok</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">HttpStatus</span> <span class=\"token function\">resolveConsumes</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Method</span> method<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    val anno <span class=\"token operator\">=</span> method<span class=\"token punctuation\">.</span><span class=\"token function\">getAnnotation</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ResponseStatus</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token class-name\">Fn</span><span class=\"token punctuation\">.</span><span class=\"token function\">ensureRun</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Objects</span><span class=\"token punctuation\">.</span><span class=\"token function\">isNull</span><span class=\"token punctuation\">(</span>anno<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">.</span>OK<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> anno<span class=\"token punctuation\">.</span><span class=\"token function\">value</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"请求扫描器\"><a href=\"#请求扫描器\" class=\"headerlink\" title=\"请求扫描器\"></a>请求扫描器</h3><p>继承<em>IScanner.java</em>实现上述静态参数扫描.</p>\n<p><strong>RequestScanner.java</strong></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>scan</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">lombok<span class=\"token punctuation\">.</span>extern<span class=\"token punctuation\">.</span>log4j<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Log4j2</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">lombok<span class=\"token punctuation\">.</span>val</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>annotations<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Addr</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>constant<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Console</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>constant<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Const</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>kit<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Fn</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>kit<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Methods</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>kit<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Trunk</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>scan<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">IScanner</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>annotations<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ResponseStatus</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>constant<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>kit<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HttpMethods</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>kit<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">MediaTypes</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>kit<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Paths</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>ws<span class=\"token punctuation\">.</span>rs<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Path</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span>reflect<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Method</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">List</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Objects</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Set</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>stream<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>stream<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Stream</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * @author &lt;a href=\"mailto:1159930219@qq.com\">BornToRain&lt;/a>\n */</span>\n<span class=\"token annotation punctuation\">@Log4j2</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">RequestScanner</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">IScanner</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">List</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Request</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token annotation punctuation\">@Override</span>\n  <span class=\"token keyword\">public</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Request</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">scan</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Class</span><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> classes<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    val ret <span class=\"token operator\">=</span> classes<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">flatMap</span><span class=\"token punctuation\">(</span>d <span class=\"token operator\">-></span> <span class=\"token class-name\">Fn</span><span class=\"token punctuation\">.</span><span class=\"token function\">ensureRun</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>d<span class=\"token punctuation\">.</span><span class=\"token function\">isAnnotationPresent</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Path</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// 顶级uri路径</span>\n      <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token function\">extract</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// 非顶级uri路径</span>\n      <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token function\">extract</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Paths</span><span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">.</span><span class=\"token function\">getAnnotation</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Path</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">sorted</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token operator\">::</span><span class=\"token function\">sort</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">toList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Console</span><span class=\"token punctuation\">.</span>SCANNED<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Request\"</span><span class=\"token punctuation\">,</span> ret<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> ret<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token comment\">/**\n   * vert.x路由顺序会影响到接口\n   * 1. path参数放最后\n   * 2. 长的放最前面\n   * ex: /users/:id\n   *     /users/abc\n   *     /users\n   * ret: /users/abc\n   *      /users\n   *      /users/:id\n   */</span>\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> <span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Request</span> x<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Request</span> y<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    val xPath <span class=\"token operator\">=</span> x<span class=\"token punctuation\">.</span><span class=\"token function\">getPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    val yPath <span class=\"token operator\">=</span> y<span class=\"token punctuation\">.</span><span class=\"token function\">getPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>xPath<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Const</span><span class=\"token punctuation\">.</span>COLON<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> b <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>xPath<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> yPath<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> b <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> b<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">private</span> <span class=\"token class-name\">Stream</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Request</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">extract</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Class</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span></span> cls<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> root<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span>cls<span class=\"token punctuation\">.</span><span class=\"token function\">getDeclaredMethods</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Methods</span><span class=\"token operator\">::</span><span class=\"token function\">validateMethod</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>d <span class=\"token operator\">-></span> <span class=\"token function\">extract</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">,</span> root<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">private</span> <span class=\"token class-name\">Request</span> <span class=\"token function\">extract</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Method</span> method<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> root<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    val data <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Request</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setMethod</span><span class=\"token punctuation\">(</span>method<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setHttpMethod</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpMethods</span><span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>method<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">setConsumes</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MediaTypes</span><span class=\"token punctuation\">.</span><span class=\"token function\">resolveConsumes</span><span class=\"token punctuation\">(</span>method<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">setProduces</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MediaTypes</span><span class=\"token punctuation\">.</span><span class=\"token function\">resolveProduces</span><span class=\"token punctuation\">(</span>method<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    val anno <span class=\"token operator\">=</span> method<span class=\"token punctuation\">.</span><span class=\"token function\">getAnnotation</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Path</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    val path <span class=\"token operator\">=</span> <span class=\"token class-name\">Fn</span><span class=\"token punctuation\">.</span><span class=\"token function\">ensureRun</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Objects</span><span class=\"token punctuation\">.</span><span class=\"token function\">isNull</span><span class=\"token punctuation\">(</span>anno<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> root<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">Paths</span><span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>anno<span class=\"token punctuation\">,</span> root<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    data<span class=\"token punctuation\">.</span><span class=\"token function\">setPath</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    data<span class=\"token punctuation\">.</span><span class=\"token function\">setAddr</span><span class=\"token punctuation\">(</span>method<span class=\"token punctuation\">.</span><span class=\"token function\">getAnnotation</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Addr</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">value</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    data<span class=\"token punctuation\">.</span><span class=\"token function\">setProxy</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Trunk</span><span class=\"token punctuation\">.</span><span class=\"token function\">getProxy</span><span class=\"token punctuation\">(</span>method<span class=\"token punctuation\">.</span><span class=\"token function\">getDeclaringClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    val httpStatus <span class=\"token operator\">=</span> method<span class=\"token punctuation\">.</span><span class=\"token function\">getAnnotation</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ResponseStatus</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// () -> httpStatus.value()不能缩写成httpStatus::value,这里必须lazy.</span>\n    data<span class=\"token punctuation\">.</span><span class=\"token function\">setHttpStatus</span><span class=\"token punctuation\">(</span>\n      <span class=\"token class-name\">Fn</span><span class=\"token punctuation\">.</span><span class=\"token function\">ensureRun</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Objects</span><span class=\"token punctuation\">.</span><span class=\"token function\">isNull</span><span class=\"token punctuation\">(</span>httpStatus<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">.</span>OK<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> httpStatus<span class=\"token punctuation\">.</span><span class=\"token function\">value</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> data<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<hr>\n<h2 id=\"动态解析\"><a href=\"#动态解析\" class=\"headerlink\" title=\"动态解析\"></a>动态解析</h2><h3 id=\"请求参数\"><a href=\"#请求参数\" class=\"headerlink\" title=\"请求参数\"></a>请求参数</h3><p>请求参数解析分为两步.</p>\n<ol>\n<li>注解解析: 根据注解决定调用何种解析方式,最典型的例子就是分别带有*@PathParam<em>、</em>@BodyParam*注解的参数.</li>\n<li>类型解析: 根据类型决定调用何种类型转换方式.</li>\n</ol>\n<p>根据上面我们可以抽象出两个接口.</p>\n<h4 id=\"基类\"><a href=\"#基类\" class=\"headerlink\" title=\"基类\"></a>基类</h4><p><strong>IParamParser.java</strong></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>parse</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">io<span class=\"token punctuation\">.</span>vertx<span class=\"token punctuation\">.</span>ext<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RoutingContext</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>kit<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Trunk</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>annotations<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">BodyParam</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span>reflect<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Parameter</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HashMap</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Map</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * @author &lt;a href=\"mailto:1159930219@qq.com\">BornToRain&lt;/a>\n */</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">IParamParser</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// 表驱动模式</span>\n  <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Class</span><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">IParamParser</span><span class=\"token punctuation\">></span></span> MAP <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 根据请求参数上的注解选用对应的参数解析器</span>\n    <span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BodyParam</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Trunk</span><span class=\"token punctuation\">.</span><span class=\"token function\">singleton</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BodyParamParser</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">static</span> <span class=\"token class-name\">IParamParser</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Class</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span></span> key<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 找不到解析器默认采用Body解析器</span>\n    <span class=\"token keyword\">return</span> MAP<span class=\"token punctuation\">.</span><span class=\"token function\">getOrDefault</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Trunk</span><span class=\"token punctuation\">.</span><span class=\"token function\">singleton</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BodyParamParser</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token class-name\">Object</span> <span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RoutingContext</span> context<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Parameter</span> param<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>IConvert.java</strong></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>convert</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">io<span class=\"token punctuation\">.</span>vertx<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>json<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">JsonObject</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>kit<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Trunk</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HashMap</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">List</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Map</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * @author &lt;a href=\"mailto:1159930219@qq.com\">BornToRain&lt;/a>\n */</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">IConvert</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// 表驱动模式</span>\n  <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Class</span><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">IConvert</span><span class=\"token punctuation\">></span></span> MAP <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 根据key选用对应的转换器实现</span>\n    <span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Trunk</span><span class=\"token punctuation\">.</span><span class=\"token function\">singleton</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IntConvert</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Trunk</span><span class=\"token punctuation\">.</span><span class=\"token function\">singleton</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IntConvert</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">static</span> <span class=\"token class-name\">IConvert</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Class</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span></span> key<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 找不到可用转换器,默认调用字符串转换器.</span>\n    <span class=\"token keyword\">return</span> MAP<span class=\"token punctuation\">.</span><span class=\"token function\">getOrDefault</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Trunk</span><span class=\"token punctuation\">.</span><span class=\"token function\">singleton</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">StringConvert</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token class-name\">Object</span> <span class=\"token function\">convert</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"具体实现\"><a href=\"#具体实现\" class=\"headerlink\" title=\"具体实现\"></a>具体实现</h4><p>挨个实现比较长,这里我仅以解析 <em>@BodyParam</em>注解和参数类型为<em>Int</em>的代码为例.</p>\n<p><strong>IntConvert.java</strong></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>convert</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>kit<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Fn</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * @author &lt;a href=\"mailto:1159930219@qq.com\">BornToRain&lt;/a>\n */</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">IntConvert</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">IConvert</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token annotation punctuation\">@Override</span>\n  <span class=\"token keyword\">public</span> <span class=\"token class-name\">Object</span> <span class=\"token function\">convert</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> str<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token class-name\">Fn</span><span class=\"token punctuation\">.</span><span class=\"token function\">ensureRun</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>BodyParamParser.java</strong></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>parse</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">io<span class=\"token punctuation\">.</span>vertx<span class=\"token punctuation\">.</span>ext<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RoutingContext</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>convert<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">IConvert</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span>reflect<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Parameter</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * @author &lt;a href=\"mailto:1159930219@qq.com\">BornToRain&lt;/a>\n */</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BodyParamParser</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">IParamParser</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token annotation punctuation\">@Override</span>\n  <span class=\"token keyword\">public</span> <span class=\"token class-name\">Object</span> <span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RoutingContext</span> context<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Parameter</span> param<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 通过字段类型找到转换器开始转换请求参数值.</span>\n    <span class=\"token keyword\">return</span> <span class=\"token class-name\">IConvert</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>param<span class=\"token punctuation\">.</span><span class=\"token function\">getType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">convert</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">.</span><span class=\"token function\">getBodyAsString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>多种注解以及类型解析只需挨个继承实现<em>IParamParser.java</em>和<em>IConvert.java</em>即可.</p>\n<h3 id=\"http工作流\"><a href=\"#http工作流\" class=\"headerlink\" title=\"http工作流\"></a>http工作流</h3><p>一次http请求响应过程如下:</p>\n<ol>\n<li>接收请求 </li>\n<li>解析请求路径、方式、媒体类型等…各个参数(静态解析部分)</li>\n<li>调用函数处理(Async、Sync、Rx…等反射调用)</li>\n<li>Reactor结构请求(Vert.x中用EventBus实现)</li>\n<li>根据请求头返回对应数据结构数据(Json、Xml、Text、二进制…不同响应策略)</li>\n</ol>\n<p>根据上述写出接口.</p>\n<h4 id=\"基类-1\"><a href=\"#基类-1\" class=\"headerlink\" title=\"基类\"></a>基类</h4><p>响应工具类.</p>\n<p><strong>Responds.java</strong></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>kit</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">io<span class=\"token punctuation\">.</span>vertx<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HttpServerResponse</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">io<span class=\"token punctuation\">.</span>vertx<span class=\"token punctuation\">.</span>ext<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RoutingContext</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">lombok<span class=\"token punctuation\">.</span>val</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>kit<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Fn</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>constant<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>scan<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Request</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Objects</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * @author &lt;a href=\"mailto:1159930219@qq.com\">BornToRain&lt;/a>\n */</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Responds</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">failed</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RoutingContext</span> context<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Throwable</span> ex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Objects</span><span class=\"token punctuation\">.</span><span class=\"token function\">nonNull</span><span class=\"token punctuation\">(</span>ex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> ex<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    val rep <span class=\"token operator\">=</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">response</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>rep<span class=\"token punctuation\">.</span><span class=\"token function\">closed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> rep<span class=\"token punctuation\">.</span><span class=\"token function\">setStatusCode</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">.</span>INTERNAL_SERVER_ERROR<span class=\"token punctuation\">.</span>code<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">setStatusMessage</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">.</span>INTERNAL_SERVER_ERROR<span class=\"token punctuation\">.</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">HttpServerResponse</span> <span class=\"token function\">succeed</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RoutingContext</span> context<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Request</span> req<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    val rep <span class=\"token operator\">=</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">response</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token class-name\">Fn</span><span class=\"token punctuation\">.</span><span class=\"token function\">ensureRun</span><span class=\"token punctuation\">(</span>rep<span class=\"token punctuation\">.</span><span class=\"token function\">closed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> rep<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span>\n        val httpStatus <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span><span class=\"token function\">getHttpStatus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> rep<span class=\"token punctuation\">.</span><span class=\"token function\">setStatusCode</span><span class=\"token punctuation\">(</span>httpStatus<span class=\"token punctuation\">.</span>code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setStatusMessage</span><span class=\"token punctuation\">(</span>httpStatus<span class=\"token punctuation\">.</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>响应数据结构接口,根据不同结构实现不同子类.</p>\n<p><strong>IRepStruct.java</strong></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>struct</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">io<span class=\"token punctuation\">.</span>vertx<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HttpServerResponse</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>kit<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Trunk</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>ws<span class=\"token punctuation\">.</span>rs<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">MediaType</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HashMap</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Map</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * 响应数据结构\n * 1. Json\n * 2. Xml\n * 3. Text\n * 4. 二进制\n * ...\n * @author &lt;a href=\"mailto:1159930219@qq.com\">BornToRain&lt;/a>\n */</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">RepStruct</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">RepStruct</span><span class=\"token punctuation\">></span></span> MAP <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MediaType</span><span class=\"token punctuation\">.</span>APPLICATION_JSON<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Trunk</span><span class=\"token punctuation\">.</span><span class=\"token function\">singleton</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">JsonRepStruct</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MediaType</span><span class=\"token punctuation\">.</span>TEXT_HTML<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Trunk</span><span class=\"token punctuation\">.</span><span class=\"token function\">singleton</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TextRepStruct</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">static</span> <span class=\"token class-name\">RepStruct</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> key<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> MAP<span class=\"token punctuation\">.</span><span class=\"token function\">getOrDefault</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Trunk</span><span class=\"token punctuation\">.</span><span class=\"token function\">singleton</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">JsonRepStruct</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">void</span> <span class=\"token function\">respond</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpServerResponse</span> rep<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span> ret<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>http流接口,子类实现不同http工作流程.</p>\n<p><strong>IHttpFlow.java</strong></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>web</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">io<span class=\"token punctuation\">.</span>vertx<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Future</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">io<span class=\"token punctuation\">.</span>vertx<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Handler</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">io<span class=\"token punctuation\">.</span>vertx<span class=\"token punctuation\">.</span>ext<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RoutingContext</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>kit<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Trunk</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>scan<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Request</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HashMap</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Map</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * http工作流\n * 1. 接收请求\n * 2. 解析请求路径、方式、媒体类型等...各个参数\n * 3. 调用函数处理(Async、Sync、Rx...)\n * 4. Reactor结构请求(Vert.x中用EventBus实现)\n * 5. 根据请求头返回对应数据结构数据(Json、Xml、Text、二进制...)\n * @author &lt;a href=\"mailto:1159930219@qq.com\">BornToRain&lt;/a>\n */</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">IFlow</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Class</span><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">IFlow</span><span class=\"token punctuation\">></span></span> MAP <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Future</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Trunk</span><span class=\"token punctuation\">.</span><span class=\"token function\">singleton</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">FutureFlow</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">static</span> <span class=\"token class-name\">IFlow</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Class</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span></span> key<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> MAP<span class=\"token punctuation\">.</span><span class=\"token function\">getOrDefault</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Trunk</span><span class=\"token punctuation\">.</span><span class=\"token function\">singleton</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">FutureFlow</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token class-name\">Handler</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">RoutingContext</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">handle</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Request</span> req<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"具体实现-1\"><a href=\"#具体实现-1\" class=\"headerlink\" title=\"具体实现\"></a>具体实现</h4><p>这里仅实现Vert.x中的Future响应流与Json数据机构.</p>\n<p><strong>JsonRepStruct.java</strong></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>struct</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">io<span class=\"token punctuation\">.</span>vertx<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HttpServerResponse</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">io<span class=\"token punctuation\">.</span>vertx<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>json<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Json</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>kit<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Fn</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Objects</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * @author &lt;a href=\"mailto:1159930219@qq.com\">BornToRain&lt;/a>\n */</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">JsonRepStruct</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">RepStruct</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token annotation punctuation\">@Override</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">respond</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpServerResponse</span> rep<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span> ret<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">Fn</span><span class=\"token punctuation\">.</span><span class=\"token function\">ensureRun</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Objects</span><span class=\"token punctuation\">.</span><span class=\"token function\">nonNull</span><span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> rep<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Json</span><span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> rep<span class=\"token operator\">::</span><span class=\"token function\">end</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>FutureHttpFlow.java</strong></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>flow</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">io<span class=\"token punctuation\">.</span>vertx<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Handler</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">io<span class=\"token punctuation\">.</span>vertx<span class=\"token punctuation\">.</span>ext<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RoutingContext</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">lombok<span class=\"token punctuation\">.</span>extern<span class=\"token punctuation\">.</span>log4j<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Log4j2</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">lombok<span class=\"token punctuation\">.</span>val</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>constant<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Console</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>constant<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Const</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>kit<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Fn</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>kit<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Reflect</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>kit<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Verticles</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>kit<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Responds</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>parse<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">IParamParser</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>scan<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Request</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>struct<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RepStruct</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * @author &lt;a href=\"mailto:1159930219@qq.com\">BornToRain&lt;/a>\n */</span>\n<span class=\"token annotation punctuation\">@Log4j2</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">FutureFlow</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">IFlow</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token annotation punctuation\">@Override</span>\n  <span class=\"token keyword\">public</span> <span class=\"token class-name\">Handler</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">RoutingContext</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">handle</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Request</span> req<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> context <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">// 1. 解析参数</span>\n      val args <span class=\"token operator\">=</span> <span class=\"token class-name\">IParamParser</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseArgs</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">,</span> req<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// 2. 调用函数(Async,Sync,Rx...)</span>\n      val method <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span><span class=\"token function\">getMethod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      val methodName <span class=\"token operator\">=</span> method<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      val ret <span class=\"token operator\">=</span> <span class=\"token class-name\">Reflect</span><span class=\"token punctuation\">.</span><span class=\"token function\">invokeMethod</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span><span class=\"token function\">getProxy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> methodName<span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Console</span><span class=\"token punctuation\">.</span>INVOKE<span class=\"token punctuation\">,</span> method<span class=\"token punctuation\">.</span><span class=\"token function\">getDeclaringClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> methodName<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Fn</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Const</span><span class=\"token punctuation\">.</span>COMMA<span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// 3. event-bus请求(reactor结构)</span>\n      val future <span class=\"token operator\">=</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">vertx</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">eventBus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">request</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span><span class=\"token function\">getAddr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ret<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Verticles</span><span class=\"token punctuation\">.</span><span class=\"token function\">delivery</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      future<span class=\"token punctuation\">.</span><span class=\"token function\">onComplete</span><span class=\"token punctuation\">(</span>ar <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ar<span class=\"token punctuation\">.</span><span class=\"token function\">failed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">Responds</span><span class=\"token punctuation\">.</span><span class=\"token function\">failed</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">,</span> ar<span class=\"token punctuation\">.</span><span class=\"token function\">cause</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token comment\">// 4. 响应数据结构(Json,Xml,Text...)</span>\n          val struct <span class=\"token operator\">=</span> <span class=\"token class-name\">RepStruct</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">.</span><span class=\"token function\">getAcceptableContentType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          struct<span class=\"token punctuation\">.</span><span class=\"token function\">respond</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Responds</span><span class=\"token punctuation\">.</span><span class=\"token function\">succeed</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">,</span> req<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ar<span class=\"token punctuation\">.</span><span class=\"token function\">result</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">body</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>","feature":null,"text":"上一篇讲完了全局配置,这一篇我们来讲每个路由的集成. Vert.x原始使用方式样例来自于Vert.x官网 Vert.x配置api接口public class TestVerticle extends AbstractVerticle &#123; public void star...","link":"","photos":[],"count_time":{"symbolsCount":"16k","symbolsTime":"15 mins."},"categories":[{"name":"从零开始","slug":"从零开始","count":8,"path":"api/categories/从零开始.json"}],"tags":[{"name":"Vert.x","slug":"Vert-x","count":8,"path":"api/tags/Vert-x.json"},{"name":"Actor","slug":"Actor","count":8,"path":"api/tags/Actor.json"},{"name":"设计模式","slug":"设计模式","count":8,"path":"api/tags/设计模式.json"},{"name":"Java","slug":"Java","count":9,"path":"api/tags/Java.json"},{"name":"代理模式","slug":"代理模式","count":4,"path":"api/tags/代理模式.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Vert-x%E5%8E%9F%E5%A7%8B%E4%BD%BF%E7%94%A8%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">Vert.x原始使用方式</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Vert-x%E9%85%8D%E7%BD%AEapi%E6%8E%A5%E5%8F%A3\"><span class=\"toc-text\">Vert.x配置api接口</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%9D%99%E6%80%81%E8%A7%A3%E6%9E%90\"><span class=\"toc-text\">静态解析</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%AF%B7%E6%B1%82%E8%B7%AF%E5%BE%84\"><span class=\"toc-text\">请求路径</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%AF%B7%E6%B1%82%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">请求方式</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AA%92%E4%BD%93%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">媒体类型</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%93%8D%E5%BA%94%E7%8A%B6%E6%80%81\"><span class=\"toc-text\">响应状态</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%AF%B7%E6%B1%82%E6%89%AB%E6%8F%8F%E5%99%A8\"><span class=\"toc-text\">请求扫描器</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8A%A8%E6%80%81%E8%A7%A3%E6%9E%90\"><span class=\"toc-text\">动态解析</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%AF%B7%E6%B1%82%E5%8F%82%E6%95%B0\"><span class=\"toc-text\">请求参数</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E7%B1%BB\"><span class=\"toc-text\">基类</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%85%B7%E4%BD%93%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\">具体实现</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#http%E5%B7%A5%E4%BD%9C%E6%B5%81\"><span class=\"toc-text\">http工作流</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E7%B1%BB-1\"><span class=\"toc-text\">基类</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%85%B7%E4%BD%93%E5%AE%9E%E7%8E%B0-1\"><span class=\"toc-text\">具体实现</span></a></li></ol></li></ol></li></ol>","author":{"name":"因雨而生","slug":"blog-author","avatar":"/images/avatar.jpg","link":"/","description":"一直没脱离低级趣味的Coder","socials":{"github":"https://github.com/BornToRain","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{},"next_post":{"title":"从零开始撸框架(7)-与Vert.x集成 Web篇(一)","uid":"c38b17588d251cd9846139dacf4f50ed","slug":"从零开始撸框架(7)-与Vert.x集成 Web篇(一)","date":"2021-05-10T06:50:32.000Z","updated":"2021-06-09T08:46:02.182Z","comments":true,"path":"api/articles/从零开始撸框架(7)-与Vert.x集成 Web篇(一).json","keywords":["Coder","Scalaer","Javaer"],"cover":"/images/vertxlogo.png","text":"上一篇讲完了与Vert.x集成的整体情况,这一篇开始与vertx-web集成. 这些内容我们主要在web模块中进行开发. Web全局集成web组件下的build.gradlebuild.gradle dependencies &#123; &#x2F;&#x2F; 核心组件 co...","link":"","photos":[],"count_time":{"symbolsCount":"7.6k","symbolsTime":"7 mins."},"categories":[{"name":"从零开始","slug":"从零开始","count":8,"path":"api/categories/从零开始.json"}],"tags":[{"name":"Vert.x","slug":"Vert-x","count":8,"path":"api/tags/Vert-x.json"},{"name":"Actor","slug":"Actor","count":8,"path":"api/tags/Actor.json"},{"name":"设计模式","slug":"设计模式","count":8,"path":"api/tags/设计模式.json"},{"name":"Java","slug":"Java","count":9,"path":"api/tags/Java.json"},{"name":"代理模式","slug":"代理模式","count":4,"path":"api/tags/代理模式.json"}],"author":{"name":"因雨而生","slug":"blog-author","avatar":"/images/avatar.jpg","link":"/","description":"一直没脱离低级趣味的Coder","socials":{"github":"https://github.com/BornToRain","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}