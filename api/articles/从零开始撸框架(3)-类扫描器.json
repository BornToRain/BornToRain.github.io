{"title":"从零开始撸框架(3)-类扫描器","uid":"bf9123d57d7a0fda9f11ed154298fba1","slug":"从零开始撸框架(3)-类扫描器","date":"2021-05-01T16:01:49.000Z","updated":"2021-05-02T00:03:01.318Z","comments":true,"path":"api/articles/从零开始撸框架(3)-类扫描器.json","keywords":["Coder","Scalaer","Javaer"],"cover":"/images/vertxlogo.png","content":"<p>上一章我们已经把每个包中的类都统一加载到一个Set中了,以后凡是需要用到类的场景我们都可以从Set集合中取出,但是光这样还不够好.<br>往后所有操作都依赖于这一个集合,这也意味着我们对集合元素有改动都会影响到所有组件使用.<br>所以这一章我们来进一步细化,根据不同的需求把这个大Set集合拆分成小的集合.</p>\n<h2 id=\"扫描基类\"><a href=\"#扫描基类\" class=\"headerlink\" title=\"扫描基类\"></a>扫描基类</h2><p>这里我们定义一个扫描接口,接收类集合得出我们想要的结果,方便子类根据不同需求进行扩展.</p>\n<p><strong>IScanner.java</strong></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>scan</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Set</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * @author &lt;a href=\"mailto:1159930219@qq.com\">BornToRain&lt;/a>\n */</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">IScanner</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token class-name\">T</span> <span class=\"token function\">scan</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Class</span><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> classes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>下面根据需求实现不同的子类,这里采用的是<a href=\"https://zhuanlan.zhihu.com/p/93612337\">Reactor</a>架构模型.</p>\n<hr>\n<h2 id=\"事件循环线程-Eventloop-扫描器\"><a href=\"#事件循环线程-Eventloop-扫描器\" class=\"headerlink\" title=\"事件循环线程(Eventloop)扫描器\"></a>事件循环线程(Eventloop)扫描器</h2><p>首先我们把所有事件循环的类从Set集合中独立出来,这块是框架调度分发的核心,完全有独立出来的意义.</p>\n<h3 id=\"辅助类\"><a href=\"#辅助类\" class=\"headerlink\" title=\"辅助类\"></a>辅助类</h3><p>这里定义几种类型,分别对应http、tcp、sock服务.<br><strong>EventloopType.java</strong></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>constant</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">List</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * @author &lt;a href=\"mailto:1159930219@qq.com\">BornToRain&lt;/a>\n */</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">enum</span> <span class=\"token class-name\">EventloopType</span> <span class=\"token punctuation\">&#123;</span>\n  HTTP<span class=\"token punctuation\">,</span> TCP<span class=\"token punctuation\">,</span> SOCK<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> HTTP_TYPE <span class=\"token operator\">=</span>\n    <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span>HTTP<span class=\"token punctuation\">.</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toLowerCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> SOCK<span class=\"token punctuation\">.</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toLowerCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">isHttp</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> type<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> HTTP_TYPE<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">isNet</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> type<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> TCP<span class=\"token punctuation\">.</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">equalsIgnoreCase</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>注解式开发,用注解把类标识出来.<br><strong>Eventloop.java</strong></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>annotations</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>constant<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">EventloopType</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Documented</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ElementType</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Inherited</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Retention</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RetentionPolicy</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Target</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * @author &lt;a href=\"mailto:1159930219@qq.com\">BornToRain&lt;/a>\n */</span>\n<span class=\"token annotation punctuation\">@Inherited</span>\n<span class=\"token annotation punctuation\">@Documented</span>\n<span class=\"token annotation punctuation\">@Retention</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RetentionPolicy</span><span class=\"token punctuation\">.</span>RUNTIME<span class=\"token punctuation\">)</span>\n<span class=\"token annotation punctuation\">@Target</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token class-name\">ElementType</span><span class=\"token punctuation\">.</span>TYPE<span class=\"token punctuation\">,</span><span class=\"token class-name\">ElementType</span><span class=\"token punctuation\">.</span>ANNOTATION_TYPE<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token annotation punctuation\">@interface</span> <span class=\"token class-name\">Eventloop</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">boolean</span> <span class=\"token function\">ha</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">default</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">int</span> <span class=\"token function\">instances</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">default</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n  <span class=\"token class-name\">EventloopType</span> <span class=\"token function\">type</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">default</span> <span class=\"token class-name\">EventloopType</span><span class=\"token punctuation\">.</span>HTTP<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"本体\"><a href=\"#本体\" class=\"headerlink\" title=\"本体\"></a>本体</h3><p>具体的事件循环扫描实现,通过扫描包含@Eventloop注解的类.</p>\n<p><strong>EventloopScanner.java</strong></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>scan</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">lombok<span class=\"token punctuation\">.</span>extern<span class=\"token punctuation\">.</span>log4j<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Log4j2</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">lombok<span class=\"token punctuation\">.</span>val</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>annotations<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Eventloop</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>constant<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Console</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Set</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>stream<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * @author &lt;a href=\"mailto:1159930219@qq.com\">BornToRain&lt;/a>\n */</span>\n<span class=\"token annotation punctuation\">@Log4j2</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">EventloopScanner</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">IScanner</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Set</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Class</span><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token annotation punctuation\">@Override</span>\n  <span class=\"token keyword\">public</span> <span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Class</span><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> <span class=\"token function\">scan</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Class</span><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> classes<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    val ret <span class=\"token operator\">=</span>\n      classes<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>d <span class=\"token operator\">-></span> d<span class=\"token punctuation\">.</span><span class=\"token function\">isAnnotationPresent</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Eventloop</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">toSet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Console</span><span class=\"token punctuation\">.</span>SCANNED<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Eventloop\"</span><span class=\"token punctuation\">,</span> ret<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> ret<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h3><p><strong>IScannerTest.java</strong></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>scan</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">lombok<span class=\"token punctuation\">.</span>extern<span class=\"token punctuation\">.</span>log4j<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Log4j2</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">lombok<span class=\"token punctuation\">.</span>val</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>annotations<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Eventloop</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>kit<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Packages</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>kit<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Trunk</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>hamcrest<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">CoreMatchers</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>junit<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Assert</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>junit<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Test</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * @author &lt;a href=\"mailto:1159930219@qq.com\">BornToRain&lt;/a>\n */</span>\n<span class=\"token annotation punctuation\">@Log4j2</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">IScannerTest</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token annotation punctuation\">@Eventloop</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestEventloop</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token annotation punctuation\">@Test</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testEventloop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    val classes <span class=\"token operator\">=</span> <span class=\"token class-name\">Packages</span><span class=\"token punctuation\">.</span><span class=\"token function\">scan</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    val scanner <span class=\"token operator\">=</span> <span class=\"token class-name\">Trunk</span><span class=\"token punctuation\">.</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">EventloopScanner</span><span class=\"token punctuation\">></span></span><span class=\"token function\">singleton</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">EventloopScanner</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    val ret <span class=\"token operator\">=</span> scanner<span class=\"token punctuation\">.</span><span class=\"token function\">scan</span><span class=\"token punctuation\">(</span>classes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">Assert</span><span class=\"token punctuation\">.</span><span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">,</span> <span class=\"token class-name\">CoreMatchers</span><span class=\"token punctuation\">.</span><span class=\"token function\">hasItem</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TestEventloop</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>测试结果<br><img src=\"/images/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%92%B8%E6%A1%86%E6%9E%B6/3/testret1.png\" alt=\"运行结果\"></p>\n<hr>\n<h2 id=\"工作线程-Worker-扫描器\"><a href=\"#工作线程-Worker-扫描器\" class=\"headerlink\" title=\"工作线程(Worker)扫描器\"></a>工作线程(Worker)扫描器</h2><p>工作类负责框架各种任务的执行,具体实现同Eventloop.</p>\n<h3 id=\"辅助类-1\"><a href=\"#辅助类-1\" class=\"headerlink\" title=\"辅助类\"></a>辅助类</h3><p><strong>Worker.java</strong></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>annotations</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Documented</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ElementType</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Inherited</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Retention</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RetentionPolicy</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Target</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * @author &lt;a href=\"mailto:1159930219@qq.com\">BornToRain&lt;/a>\n */</span>\n<span class=\"token annotation punctuation\">@Inherited</span>\n<span class=\"token annotation punctuation\">@Documented</span>\n<span class=\"token annotation punctuation\">@Target</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token class-name\">ElementType</span><span class=\"token punctuation\">.</span>TYPE<span class=\"token punctuation\">,</span><span class=\"token class-name\">ElementType</span><span class=\"token punctuation\">.</span>ANNOTATION_TYPE<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token annotation punctuation\">@Retention</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RetentionPolicy</span><span class=\"token punctuation\">.</span>RUNTIME<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token annotation punctuation\">@interface</span> <span class=\"token class-name\">Worker</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">boolean</span> <span class=\"token function\">ha</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">default</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">int</span> <span class=\"token function\">instances</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">default</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"本体-1\"><a href=\"#本体-1\" class=\"headerlink\" title=\"本体\"></a>本体</h3><p><strong>WorkerScanner.java</strong></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>scan</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">lombok<span class=\"token punctuation\">.</span>extern<span class=\"token punctuation\">.</span>log4j<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Log4j2</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">lombok<span class=\"token punctuation\">.</span>val</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>annotations<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Worker</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>constant<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Console</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Set</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>stream<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * @author &lt;a href=\"mailto:1159930219@qq.com\">BornToRain&lt;/a>\n */</span>\n<span class=\"token annotation punctuation\">@Log4j2</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">WorkerScanner</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">IScanner</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Set</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Class</span><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token annotation punctuation\">@Override</span>\n  <span class=\"token keyword\">public</span> <span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Class</span><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> <span class=\"token function\">scan</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Class</span><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> classes<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    val ret <span class=\"token operator\">=</span>\n      classes<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>d <span class=\"token operator\">-></span> d<span class=\"token punctuation\">.</span><span class=\"token function\">isAnnotationPresent</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Worker</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">toSet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Console</span><span class=\"token punctuation\">.</span>SCANNED<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Worker\"</span><span class=\"token punctuation\">,</span> ret<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> ret<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"测试-1\"><a href=\"#测试-1\" class=\"headerlink\" title=\"测试\"></a>测试</h3><p>在<strong>IScannerTest.java</strong>中追加一例测试.</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">IScannerTest</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n  <span class=\"token annotation punctuation\">@Worker</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestWorker</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token annotation punctuation\">@Test</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testWorker</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    val classes <span class=\"token operator\">=</span> <span class=\"token class-name\">Packages</span><span class=\"token punctuation\">.</span><span class=\"token function\">scan</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    val scanner <span class=\"token operator\">=</span> <span class=\"token class-name\">Trunk</span><span class=\"token punctuation\">.</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">WorkerScanner</span><span class=\"token punctuation\">></span></span><span class=\"token function\">singleton</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">WorkerScanner</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    val ret <span class=\"token operator\">=</span> scanner<span class=\"token punctuation\">.</span><span class=\"token function\">scan</span><span class=\"token punctuation\">(</span>classes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">Assert</span><span class=\"token punctuation\">.</span><span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">,</span> <span class=\"token class-name\">CoreMatchers</span><span class=\"token punctuation\">.</span><span class=\"token function\">hasItem</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TestWorker</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>测试结果<br><img src=\"/images/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%92%B8%E6%A1%86%E6%9E%B6/3/testret2.png\" alt=\"运行结果\"></p>\n<hr>\n<h2 id=\"Vert-x消息扫描器\"><a href=\"#Vert-x消息扫描器\" class=\"headerlink\" title=\"Vert.x消息扫描器\"></a>Vert.x消息扫描器</h2><p>在<a href=\"https://vertx.io/\">Vert.x</a>官网示例中,我们可以看到它<em>Eventloop</em>与<em>Worker</em>交互是通过vertx.eventBus()来实现的.<br>因此我们把交互消息也定义成一个类,把它也从类集合中独立出来.</p>\n<h3 id=\"辅助类-2\"><a href=\"#辅助类-2\" class=\"headerlink\" title=\"辅助类\"></a>辅助类</h3><p><strong>Receipt.java</strong></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>scan</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">lombok<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">AccessLevel</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">lombok<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Data</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">lombok<span class=\"token punctuation\">.</span>experimental<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Accessors</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">lombok<span class=\"token punctuation\">.</span>experimental<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">FieldDefaults</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span>reflect<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Method</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * @author &lt;a href=\"mailto:1159930219@qq.com\">BornToRain&lt;/a>\n */</span>\n<span class=\"token annotation punctuation\">@Data</span>\n<span class=\"token annotation punctuation\">@Accessors</span><span class=\"token punctuation\">(</span>chain <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n<span class=\"token annotation punctuation\">@FieldDefaults</span><span class=\"token punctuation\">(</span>level <span class=\"token operator\">=</span> <span class=\"token class-name\">AccessLevel</span><span class=\"token punctuation\">.</span>PRIVATE<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Receipt</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// 承载消息的类.</span>\n  <span class=\"token class-name\">Object</span> proxy<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 发布在Vert.x上的消息地址.</span>\n  <span class=\"token class-name\">String</span> addr<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 具体执行的方法.</span>\n  <span class=\"token class-name\">Method</span> method<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>分别定义<em>EventBus</em>和<em>Addr</em>两个注解,用来标识类是否要处于Vert.x的消息队列中和类在队列上的地址.<br><strong>EventBus.java</strong></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>annotations</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Documented</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ElementType</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Inherited</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Retention</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RetentionPolicy</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Target</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * @author &lt;a href=\"mailto:1159930219@qq.com\">BornToRain&lt;/a>\n */</span>\n<span class=\"token annotation punctuation\">@Inherited</span>\n<span class=\"token annotation punctuation\">@Documented</span>\n<span class=\"token annotation punctuation\">@Retention</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RetentionPolicy</span><span class=\"token punctuation\">.</span>RUNTIME<span class=\"token punctuation\">)</span>\n<span class=\"token annotation punctuation\">@Target</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token class-name\">ElementType</span><span class=\"token punctuation\">.</span>TYPE<span class=\"token punctuation\">,</span><span class=\"token class-name\">ElementType</span><span class=\"token punctuation\">.</span>ANNOTATION_TYPE<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token annotation punctuation\">@interface</span> <span class=\"token class-name\">EventBus</span> <span class=\"token punctuation\">&#123;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>Addr.java</strong></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>annotations</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Documented</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ElementType</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Inherited</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Retention</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RetentionPolicy</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Target</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * @author &lt;a href=\"mailto:1159930219@qq.com\">BornToRain&lt;/a>\n */</span>\n<span class=\"token annotation punctuation\">@Inherited</span>\n<span class=\"token annotation punctuation\">@Documented</span>\n<span class=\"token annotation punctuation\">@Retention</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RetentionPolicy</span><span class=\"token punctuation\">.</span>RUNTIME<span class=\"token punctuation\">)</span>\n<span class=\"token annotation punctuation\">@Target</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token class-name\">ElementType</span><span class=\"token punctuation\">.</span>METHOD<span class=\"token punctuation\">,</span><span class=\"token class-name\">ElementType</span><span class=\"token punctuation\">.</span>ANNOTATION_TYPE<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token annotation punctuation\">@interface</span> <span class=\"token class-name\">Addr</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token class-name\">String</span> <span class=\"token function\">value</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>我们在之前的<em>Trunk.java</em>工厂类中添加新的方法,分别实现获取实现类和代理类的功能.<br><strong>Trunk.java</strong></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Trunk</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Class</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">getImpl</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Class</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span></span> cls<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token class-name\">Fn</span><span class=\"token punctuation\">.</span><span class=\"token function\">ensureRun</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">// 搜索全部包下的类得到所有cls实现的类,必须是单实现.</span>\n      val classes <span class=\"token operator\">=</span> <span class=\"token class-name\">Packages</span><span class=\"token punctuation\">.</span><span class=\"token function\">scan</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">// 过滤掉自身以及子类</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>d <span class=\"token operator\">-></span> cls<span class=\"token punctuation\">.</span><span class=\"token function\">isAssignableFrom</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> d <span class=\"token operator\">!=</span> cls<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">toList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token number\">1</span> <span class=\"token operator\">==</span> classes<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> classes<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> cls<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Object</span> <span class=\"token function\">getProxy</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Class</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span></span> cls<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token class-name\">Fn</span><span class=\"token punctuation\">.</span><span class=\"token function\">ensureRun</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>cls<span class=\"token punctuation\">.</span><span class=\"token function\">isInterface</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// 非接口直接单例对象</span>\n      <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">Trunk</span><span class=\"token punctuation\">.</span><span class=\"token function\">singleton</span><span class=\"token punctuation\">(</span>cls<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// 接口获取其实现类</span>\n        val implCls <span class=\"token operator\">=</span> <span class=\"token class-name\">Trunk</span><span class=\"token punctuation\">.</span><span class=\"token function\">getImpl</span><span class=\"token punctuation\">(</span>cls<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 实现类不为空获取其单例对象</span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">Fn</span><span class=\"token punctuation\">.</span><span class=\"token function\">ensureRun</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">Trunk</span><span class=\"token punctuation\">.</span><span class=\"token function\">singleton</span><span class=\"token punctuation\">(</span>implCls<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> implCls<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"本体-2\"><a href=\"#本体-2\" class=\"headerlink\" title=\"本体\"></a>本体</h3><p><strong>ReceiptScanner.java</strong></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>scan</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">lombok<span class=\"token punctuation\">.</span>extern<span class=\"token punctuation\">.</span>log4j<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Log4j2</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">lombok<span class=\"token punctuation\">.</span>val</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>annotations<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Addr</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>annotations<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">EventBus</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>constant<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Console</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>kit<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Methods</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>kit<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Trunk</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span>reflect<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Method</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Set</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>stream<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * @author &lt;a href=\"mailto:1159930219@qq.com\">BornToRain&lt;/a>\n */</span>\n<span class=\"token annotation punctuation\">@Log4j2</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ReceiptScanner</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">IScanner</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Set</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Receipt</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token annotation punctuation\">@Override</span>\n  <span class=\"token keyword\">public</span> <span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Receipt</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">scan</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Class</span><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> classes<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 所有@EventBus注解的类</span>\n    val eventBuses <span class=\"token operator\">=</span> classes<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>d <span class=\"token operator\">-></span> d<span class=\"token punctuation\">.</span><span class=\"token function\">isAnnotationPresent</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">EventBus</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">toSet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Console</span><span class=\"token punctuation\">.</span>SCANNED<span class=\"token punctuation\">,</span> <span class=\"token string\">\"EventBus\"</span><span class=\"token punctuation\">,</span> eventBuses<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    val receipts <span class=\"token operator\">=</span> eventBuses<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token comment\">// 根据类下所有的方法,将其转成为Receipt对象.</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">flatMap</span><span class=\"token punctuation\">(</span>d <span class=\"token operator\">-></span> <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">.</span><span class=\"token function\">getDeclaredMethods</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Methods</span><span class=\"token operator\">::</span><span class=\"token function\">validateMethod</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token operator\">::</span><span class=\"token function\">scan</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">toSet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Console</span><span class=\"token punctuation\">.</span>SCANNED<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Address\"</span><span class=\"token punctuation\">,</span> receipts<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> receipts<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">private</span> <span class=\"token class-name\">Receipt</span> <span class=\"token function\">scan</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Method</span> method<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    val cls <span class=\"token operator\">=</span> method<span class=\"token punctuation\">.</span><span class=\"token function\">getDeclaringClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    val proxy <span class=\"token operator\">=</span> <span class=\"token class-name\">Trunk</span><span class=\"token punctuation\">.</span><span class=\"token function\">getProxy</span><span class=\"token punctuation\">(</span>cls<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    val addr <span class=\"token operator\">=</span> method<span class=\"token punctuation\">.</span><span class=\"token function\">getAnnotation</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Addr</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">value</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    val data <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Receipt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setAddr</span><span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setMethod</span><span class=\"token punctuation\">(</span>method<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">setProxy</span><span class=\"token punctuation\">(</span>proxy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Address: &#123;&#125;\"</span><span class=\"token punctuation\">,</span> addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> data<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"测试-2\"><a href=\"#测试-2\" class=\"headerlink\" title=\"测试\"></a>测试</h3><p>继续在<strong>IScannerTest.java</strong>追加测试</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">IScannerTest</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n  <span class=\"token annotation punctuation\">@EventBus</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestEventBus</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token annotation punctuation\">@Addr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"test\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token annotation punctuation\">@Test</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testReceipt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    val classes <span class=\"token operator\">=</span> <span class=\"token class-name\">Packages</span><span class=\"token punctuation\">.</span><span class=\"token function\">scan</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    val scanner <span class=\"token operator\">=</span> <span class=\"token class-name\">Trunk</span><span class=\"token punctuation\">.</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ReceiptScanner</span><span class=\"token punctuation\">></span></span><span class=\"token function\">singleton</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ReceiptScanner</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    val data <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Receipt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setAddr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"test\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    val xs <span class=\"token operator\">=</span> scanner<span class=\"token punctuation\">.</span><span class=\"token function\">scan</span><span class=\"token punctuation\">(</span>classes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    val ret <span class=\"token operator\">=</span> xs<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>d <span class=\"token operator\">-></span> data<span class=\"token punctuation\">.</span><span class=\"token function\">getAddr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">.</span><span class=\"token function\">getAddr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">findAny</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">Assert</span><span class=\"token punctuation\">.</span><span class=\"token function\">assertTrue</span><span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">.</span><span class=\"token function\">isPresent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>测试结果<br><img src=\"/images/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%92%B8%E6%A1%86%E6%9E%B6/3/testret3.png\" alt=\"运行结果\"></p>\n<hr>\n<h2 id=\"依赖注入-Dependency-Injection-扫描器\"><a href=\"#依赖注入-Dependency-Injection-扫描器\" class=\"headerlink\" title=\"依赖注入(Dependency Injection)扫描器\"></a>依赖注入(Dependency Injection)扫描器</h2><p>用过spring的都知道 <em>@Resource</em> 、 <em>@Autowire</em> 注入,其中前者是jsr250的,后者是spring封装的.</p>\n<p>这里我们也可以封装一套类似于Spring的,也可以基于现有的注解开发,在这我选择基于jsr330注解开发.</p>\n<p>在core模块<strong>build.gradle</strong>中追加</p>\n<pre class=\"line-numbers language-gradle\" data-language=\"gradle\"><code class=\"language-gradle\">dependencies &#123;\n  ...\n  &#x2F;&#x2F; jsr330\n  compile &quot;javax.inject:javax.inject:1&quot;\n  ...\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"辅助类-3\"><a href=\"#辅助类-3\" class=\"headerlink\" title=\"辅助类\"></a>辅助类</h3><p>在<strong>Trunk.java</strong>追加一个新的方法</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Trunk</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n  <span class=\"token comment\">// 递归查询是否有实现类</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">hasMatchImpl</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Class</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span></span> cls<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Class</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span></span> interfaceCls<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span>cls<span class=\"token punctuation\">.</span><span class=\"token function\">getInterfaces</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span>interfaceCls<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>b <span class=\"token operator\">&amp;&amp;</span> <span class=\"token class-name\">Objects</span><span class=\"token punctuation\">.</span><span class=\"token function\">nonNull</span><span class=\"token punctuation\">(</span>cls<span class=\"token punctuation\">.</span><span class=\"token function\">getSuperclass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      b <span class=\"token operator\">=</span> <span class=\"token function\">hasMatchImpl</span><span class=\"token punctuation\">(</span>cls<span class=\"token punctuation\">.</span><span class=\"token function\">getSuperclass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> interfaceCls<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> b<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>这里和Package扫描一样,类比较多,我们一个类创建一个线程来加快注入的扫描.<br><strong>DiThread.java</strong></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>scan</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">io<span class=\"token punctuation\">.</span>netty<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>internal<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">StringUtil</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">lombok<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">AccessLevel</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">lombok<span class=\"token punctuation\">.</span>experimental<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">FieldDefaults</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">lombok<span class=\"token punctuation\">.</span>extern<span class=\"token punctuation\">.</span>log4j<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Log4j2</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">lombok<span class=\"token punctuation\">.</span>val</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>constant<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Console</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>kit<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Trunk</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>inject<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Inject</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>inject<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Named</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span>reflect<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Field</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HashMap</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">List</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Map</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Set</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>function<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Supplier</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>stream<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * @author &lt;a href=\"mailto:1159930219@qq.com\">BornToRain&lt;/a>\n */</span>\n<span class=\"token annotation punctuation\">@Log4j2</span>\n<span class=\"token annotation punctuation\">@FieldDefaults</span><span class=\"token punctuation\">(</span>level <span class=\"token operator\">=</span> <span class=\"token class-name\">AccessLevel</span><span class=\"token punctuation\">.</span>PUBLIC<span class=\"token punctuation\">,</span> makeFinal <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DiThread</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Thread</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// 当前类</span>\n  <span class=\"token class-name\">Class</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span></span> cls<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 所有类,需要在这里面找到当前类所有字段类型实现来注入.</span>\n  <span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Class</span><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> classes<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 当前类所有字段的对应类型</span>\n  <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Class</span><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> FIELD_INJECTS <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">public</span> <span class=\"token class-name\">DiThread</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Class</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span></span> cls<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Class</span><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> classes<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ygo-di-scanner-\"</span> <span class=\"token operator\">+</span> <span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>cls <span class=\"token operator\">=</span> cls<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>classes <span class=\"token operator\">=</span> classes<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token annotation punctuation\">@Override</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 类转换成类字段数组</span>\n    val fields <span class=\"token operator\">=</span> <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span>cls<span class=\"token punctuation\">.</span><span class=\"token function\">getDeclaredFields</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token comment\">// 过滤掉没有@Inject注解的字段</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>field <span class=\"token operator\">-></span> field<span class=\"token punctuation\">.</span><span class=\"token function\">isAnnotationPresent</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Inject</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token comment\">// 转成 key -> 类字段名 value -> 字段类型的map格式 </span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Supplier</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">HashMap</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Class</span><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">HashMap</span><span class=\"token operator\">::</span><span class=\"token keyword\">new</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">(</span>map<span class=\"token punctuation\">,</span> field<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> map<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>field<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">standard</span><span class=\"token punctuation\">(</span>field<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">HashMap</span><span class=\"token operator\">::</span><span class=\"token function\">putAll</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    FIELD_INJECTS<span class=\"token punctuation\">.</span><span class=\"token function\">putAll</span><span class=\"token punctuation\">(</span>fields<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token comment\">// 标准注入</span>\n  <span class=\"token keyword\">private</span> <span class=\"token class-name\">Class</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">standard</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Field</span> field<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    val type <span class=\"token operator\">=</span> field<span class=\"token punctuation\">.</span><span class=\"token function\">getType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>type<span class=\"token punctuation\">.</span><span class=\"token function\">isInterface</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> type<span class=\"token punctuation\">;</span>\n    val name <span class=\"token operator\">=</span> field<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 字段的实现列表</span>\n    val impls <span class=\"token operator\">=</span>\n      classes<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>cls <span class=\"token operator\">-></span> <span class=\"token class-name\">Trunk</span><span class=\"token punctuation\">.</span><span class=\"token function\">hasMatchImpl</span><span class=\"token punctuation\">(</span>cls<span class=\"token punctuation\">,</span> type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">toList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 空实现</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>impls<span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      val typeName <span class=\"token operator\">=</span> field<span class=\"token punctuation\">.</span><span class=\"token function\">getDeclaringClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      log<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Console</span><span class=\"token punctuation\">.</span>JSR330<span class=\"token punctuation\">,</span> typeName<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> type<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IllegalArgumentException</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n      val size <span class=\"token operator\">=</span> impls<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// 多实现</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">!=</span> size<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token function\">qualifier</span><span class=\"token punctuation\">(</span>field<span class=\"token punctuation\">,</span> impls<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 只有一个实现</span>\n      <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n        val implCls <span class=\"token operator\">=</span> impls<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Console</span><span class=\"token punctuation\">.</span>DI<span class=\"token punctuation\">,</span> cls<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> implCls<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Inject</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> implCls<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token comment\">// 多实现,通过value指定实例.</span>\n  <span class=\"token keyword\">private</span> <span class=\"token class-name\">Class</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">qualifier</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Field</span> field<span class=\"token punctuation\">,</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Class</span><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> implClasses<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    val names <span class=\"token operator\">=</span> implClasses<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Class</span><span class=\"token operator\">::</span><span class=\"token function\">getName</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">toList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Console</span><span class=\"token punctuation\">.</span>SCANNED<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Instance\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">,</span> names<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    val qualifier <span class=\"token operator\">=</span> field<span class=\"token punctuation\">.</span><span class=\"token function\">getAnnotation</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Named</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">value</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    val cls <span class=\"token operator\">=</span> implClasses<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>item <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span>\n        val named <span class=\"token operator\">=</span> item<span class=\"token punctuation\">.</span><span class=\"token function\">getAnnotation</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Named</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">value</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> qualifier<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>named<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span><span class=\"token class-name\">StringUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">isNullOrEmpty</span><span class=\"token punctuation\">(</span>named<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">findAny</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> cls<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"本体-3\"><a href=\"#本体-3\" class=\"headerlink\" title=\"本体\"></a>本体</h3><p><strong>DiScanner.java</strong></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>scan</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">lombok<span class=\"token punctuation\">.</span>extern<span class=\"token punctuation\">.</span>log4j<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Log4j2</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">lombok<span class=\"token punctuation\">.</span>val</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>constant<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Console</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>inject<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Inject</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HashMap</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Map</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Set</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>stream<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * @author &lt;a href=\"mailto:1159930219@qq.com\">BornToRain&lt;/a>\n */</span>\n<span class=\"token annotation punctuation\">@Log4j2</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DiScanner</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">IScanner</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Map</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Class</span><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Class</span><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token annotation punctuation\">@Override</span>\n  <span class=\"token keyword\">public</span> <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Class</span><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Class</span><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> <span class=\"token function\">scan</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Class</span><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> classes<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 所有包含@Inject注解字段的类</span>\n    val xs <span class=\"token operator\">=</span> classes<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>cls <span class=\"token operator\">-></span> <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span>cls<span class=\"token punctuation\">.</span><span class=\"token function\">getDeclaredFields</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">anyMatch</span><span class=\"token punctuation\">(</span>field <span class=\"token operator\">-></span> field<span class=\"token punctuation\">.</span><span class=\"token function\">isAnnotationPresent</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Inject</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">toSet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 一个类一个线程</span>\n    val threads <span class=\"token operator\">=</span> xs<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>cls <span class=\"token operator\">-></span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiThread</span><span class=\"token punctuation\">(</span>cls<span class=\"token punctuation\">,</span> classes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">toSet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 线程启动</span>\n    threads<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Thread</span><span class=\"token operator\">::</span><span class=\"token function\">start</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 最终返回数据结构 key -> 类类型, value -> (key -> 字段名, value -> 字段类型).</span>\n    val ret <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Class</span><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Class</span><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">// 主线程等待子线程全部扫描完毕</span>\n      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">DiThread</span> thread <span class=\"token operator\">:</span> threads<span class=\"token punctuation\">)</span> thread<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">DiThread</span> thread <span class=\"token operator\">:</span> threads<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        val key <span class=\"token operator\">=</span> thread<span class=\"token punctuation\">.</span>cls<span class=\"token punctuation\">;</span>\n        val value <span class=\"token operator\">=</span> thread<span class=\"token punctuation\">.</span>FIELD_INJECTS<span class=\"token punctuation\">;</span>\n        ret<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Console</span><span class=\"token punctuation\">.</span>INJECT<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> ex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      ex<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> ret<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"测试-3\"><a href=\"#测试-3\" class=\"headerlink\" title=\"测试\"></a>测试</h3><p><strong>IScannerTest.java</strong>追加</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">IScannerTest</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">TestQualifier</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n  <span class=\"token annotation punctuation\">@Named</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"testQualifierA\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestQualifierA</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">TestQualifier</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n  <span class=\"token annotation punctuation\">@Named</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"testQualifierB\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestQualifierB</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">TestQualifier</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestDi</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token annotation punctuation\">@Inject</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">TestEventBus</span> testEventBus<span class=\"token punctuation\">;</span>\n    <span class=\"token annotation punctuation\">@Inject</span>\n    <span class=\"token annotation punctuation\">@Named</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"testQualifierB\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">TestQualifier</span> testQualifier<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token annotation punctuation\">@Test</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testDi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    val classes <span class=\"token operator\">=</span> <span class=\"token class-name\">Packages</span><span class=\"token punctuation\">.</span><span class=\"token function\">scan</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    val scanner <span class=\"token operator\">=</span> <span class=\"token class-name\">Trunk</span><span class=\"token punctuation\">.</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">DiScanner</span><span class=\"token punctuation\">></span></span><span class=\"token function\">singleton</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DiScanner</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    val ret <span class=\"token operator\">=</span> scanner<span class=\"token punctuation\">.</span><span class=\"token function\">scan</span><span class=\"token punctuation\">(</span>classes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    val data <span class=\"token operator\">=</span> ret<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TestDi</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    val type1 <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"testEventBus\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">Assert</span><span class=\"token punctuation\">.</span><span class=\"token function\">assertEquals</span><span class=\"token punctuation\">(</span>type1<span class=\"token punctuation\">,</span> <span class=\"token class-name\">TestEventBus</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    val type2 <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"testQualifier\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">Assert</span><span class=\"token punctuation\">.</span><span class=\"token function\">assertNotEquals</span><span class=\"token punctuation\">(</span>type2<span class=\"token punctuation\">,</span> <span class=\"token class-name\">TestQualifierA</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">Assert</span><span class=\"token punctuation\">.</span><span class=\"token function\">assertEquals</span><span class=\"token punctuation\">(</span>type2<span class=\"token punctuation\">,</span> <span class=\"token class-name\">TestQualifierB</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>测试结果<br><img src=\"/images/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%92%B8%E6%A1%86%E6%9E%B6/3/testret4.png\" alt=\"运行结果\"></p>\n<hr>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>这一章我们基于一个扫描基类实现了各个核心组件的解耦扫描,以后有新的组件只需要自行扩展实现<em>IScanner.java</em>即可.</p>\n<p>在往后几章我们肯定还会基于这个基类继续扩展功能实现.</p>\n","feature":null,"text":"上一章我们已经把每个包中的类都统一加载到一个Set中了,以后凡是需要用到类的场景我们都可以从Set集合中取出,但是光这样还不够好.往后所有操作都依赖于这一个集合,这也意味着我们对集合元素有改动都会影响到所有组件使用.所以这一章我们来进一步细化,根据不同的需求把这个大Set集合拆分...","link":"","photos":[],"count_time":{"symbolsCount":"16k","symbolsTime":"15 mins."},"categories":[{"name":"从零开始","slug":"从零开始","count":5,"path":"api/categories/从零开始.json"}],"tags":[{"name":"Vert.x","slug":"Vert-x","count":5,"path":"api/tags/Vert-x.json"},{"name":"Actor","slug":"Actor","count":5,"path":"api/tags/Actor.json"},{"name":"设计模式","slug":"设计模式","count":5,"path":"api/tags/设计模式.json"},{"name":"Java","slug":"Java","count":6,"path":"api/tags/Java.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%89%AB%E6%8F%8F%E5%9F%BA%E7%B1%BB\"><span class=\"toc-text\">扫描基类</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF%E7%BA%BF%E7%A8%8B-Eventloop-%E6%89%AB%E6%8F%8F%E5%99%A8\"><span class=\"toc-text\">事件循环线程(Eventloop)扫描器</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%BE%85%E5%8A%A9%E7%B1%BB\"><span class=\"toc-text\">辅助类</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9C%AC%E4%BD%93\"><span class=\"toc-text\">本体</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B5%8B%E8%AF%95\"><span class=\"toc-text\">测试</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%B7%A5%E4%BD%9C%E7%BA%BF%E7%A8%8B-Worker-%E6%89%AB%E6%8F%8F%E5%99%A8\"><span class=\"toc-text\">工作线程(Worker)扫描器</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%BE%85%E5%8A%A9%E7%B1%BB-1\"><span class=\"toc-text\">辅助类</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9C%AC%E4%BD%93-1\"><span class=\"toc-text\">本体</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B5%8B%E8%AF%95-1\"><span class=\"toc-text\">测试</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Vert-x%E6%B6%88%E6%81%AF%E6%89%AB%E6%8F%8F%E5%99%A8\"><span class=\"toc-text\">Vert.x消息扫描器</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%BE%85%E5%8A%A9%E7%B1%BB-2\"><span class=\"toc-text\">辅助类</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9C%AC%E4%BD%93-2\"><span class=\"toc-text\">本体</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B5%8B%E8%AF%95-2\"><span class=\"toc-text\">测试</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5-Dependency-Injection-%E6%89%AB%E6%8F%8F%E5%99%A8\"><span class=\"toc-text\">依赖注入(Dependency Injection)扫描器</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%BE%85%E5%8A%A9%E7%B1%BB-3\"><span class=\"toc-text\">辅助类</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9C%AC%E4%BD%93-3\"><span class=\"toc-text\">本体</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B5%8B%E8%AF%95-3\"><span class=\"toc-text\">测试</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">总结</span></a></li></ol>","author":{"name":"因雨而生","slug":"blog-author","avatar":"/images/avatar.jpg","link":"/","description":"一直没脱离低级趣味的Coder","socials":{"github":"https://github.com/BornToRain","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"从零开始撸框架(4)-配置读取器","uid":"45dcae5ccfe9e8f63cc7cbe584bb9d7a","slug":"从零开始撸框架(4)-配置读取器","date":"2021-05-01T22:43:37.000Z","updated":"2021-05-07T01:21:36.962Z","comments":true,"path":"api/articles/从零开始撸框架(4)-配置读取器.json","keywords":["Coder","Scalaer","Javaer"],"cover":"/images/vertxlogo.png","text":"到目前为止,框架已经支持了 工厂 、 Bean分组 、 依赖注入 ,这一章我们来实现框架配置的读取. 配置读取基类老样子,我们还是先定义一个读取基类,方便后续子类扩展. IConfig.java package org.btr.ygo.core.config; /** * 读取配...","link":"","photos":[],"count_time":{"symbolsCount":"7.5k","symbolsTime":"7 mins."},"categories":[{"name":"从零开始","slug":"从零开始","count":5,"path":"api/categories/从零开始.json"}],"tags":[{"name":"Vert.x","slug":"Vert-x","count":5,"path":"api/tags/Vert-x.json"},{"name":"Actor","slug":"Actor","count":5,"path":"api/tags/Actor.json"},{"name":"设计模式","slug":"设计模式","count":5,"path":"api/tags/设计模式.json"},{"name":"Java","slug":"Java","count":6,"path":"api/tags/Java.json"}],"author":{"name":"因雨而生","slug":"blog-author","avatar":"/images/avatar.jpg","link":"/","description":"一直没脱离低级趣味的Coder","socials":{"github":"https://github.com/BornToRain","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"从零开始撸框架(2)-项目龙骨","uid":"1f961444d2b8322d4f975faeb98fbea1","slug":"从零开始撸框架(2)-项目龙骨","date":"2021-04-29T02:03:09.000Z","updated":"2021-05-02T00:03:06.842Z","comments":true,"path":"api/articles/从零开始撸框架(2)-项目龙骨.json","keywords":["Coder","Scalaer","Javaer"],"cover":"/images/vertxlogo.png","text":"项目结构上文说到框架包含Ioc、Di、Orm、Cache等功能,其中只有前两者为核心功能.那么结构上可以采用分包结构开发,即分为核心、组件等功能包,如下. org.btr.ygo.core 核心包,包含了框架ioc、di功能,为其他组件提供支持. org.btr.ygo.tp t...","link":"","photos":[],"count_time":{"symbolsCount":"13k","symbolsTime":"12 mins."},"categories":[{"name":"从零开始","slug":"从零开始","count":5,"path":"api/categories/从零开始.json"}],"tags":[{"name":"Vert.x","slug":"Vert-x","count":5,"path":"api/tags/Vert-x.json"},{"name":"Actor","slug":"Actor","count":5,"path":"api/tags/Actor.json"},{"name":"设计模式","slug":"设计模式","count":5,"path":"api/tags/设计模式.json"},{"name":"Java","slug":"Java","count":6,"path":"api/tags/Java.json"}],"author":{"name":"因雨而生","slug":"blog-author","avatar":"/images/avatar.jpg","link":"/","description":"一直没脱离低级趣味的Coder","socials":{"github":"https://github.com/BornToRain","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}