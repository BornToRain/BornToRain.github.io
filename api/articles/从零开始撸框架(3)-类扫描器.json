{"title":"从零开始撸框架(3)-类扫描器","uid":"bf9123d57d7a0fda9f11ed154298fba1","slug":"从零开始撸框架(3)-类扫描器","date":"2021-05-01T16:01:49.000Z","updated":"2021-05-02T00:03:01.318Z","comments":true,"path":"api/articles/从零开始撸框架(3)-类扫描器.json","keywords":["Coder","Scalaer","Javaer"],"cover":"/images/vertxlogo.png","content":"<p>上一章我们已经把每个包中的类都统一加载到一个Set中了,以后凡是需要用到类的场景我们都可以从Set集合中取出,但是光这样还不够好.<br>往后所有操作都依赖于这一个集合,这也意味着我们对集合元素有改动都会影响到所有组件使用.<br>所以这一章我们来进一步细化,根据不同的需求把这个大Set集合拆分成小的集合.</p>\n<h2 id=\"扫描基类\"><a href=\"#扫描基类\" class=\"headerlink\" title=\"扫描基类\"></a>扫描基类</h2><p>这里我们定义一个扫描接口,接收类集合得出我们想要的结果,方便子类根据不同需求进行扩展.</p>\n<p><strong>IScanner.java</strong></p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki solarized-light\" style=\"background-color: #FDF6E3\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #859900\">package</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">org.btr.ygo.core.scan</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">java.util.Set</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #93A1A1; font-style: italic\">/**</span></span>\n<span class=\"line\"><span style=\"color: #93A1A1; font-style: italic\"> * </span><span style=\"color: #859900; font-style: italic\">@author</span><span style=\"color: #93A1A1; font-style: italic\"> &lt;a href=&quot;mailto:1159930219@qq.com&quot;&gt;BornToRain&lt;/a&gt;</span></span>\n<span class=\"line\"><span style=\"color: #93A1A1; font-style: italic\"> */</span></span>\n<span class=\"line\"><span style=\"color: #586E75; font-weight: bold\">public</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">interface</span><span style=\"color: #657B83\"> </span><span style=\"color: #CB4B16\">IScanner</span><span style=\"color: #657B83\">&lt;</span><span style=\"color: #586E75; font-weight: bold\">T</span><span style=\"color: #657B83\">&gt; &#123;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  </span><span style=\"color: #586E75; font-weight: bold\">T</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">scan</span><span style=\"color: #657B83\">(</span><span style=\"color: #586E75; font-weight: bold\">Set</span><span style=\"color: #657B83\">&lt;</span><span style=\"color: #586E75; font-weight: bold\">Class</span><span style=\"color: #657B83\">&lt;</span><span style=\"color: #586E75; font-weight: bold\">?</span><span style=\"color: #657B83\">&gt;&gt; classes);</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">&#125;</span></span></code></pre></div><p>下面根据需求实现不同的子类,这里采用的是<a href=\"https://zhuanlan.zhihu.com/p/93612337\">Reactor</a>架构模型.</p>\n<hr>\n<h2 id=\"事件循环线程-Eventloop-扫描器\"><a href=\"#事件循环线程-Eventloop-扫描器\" class=\"headerlink\" title=\"事件循环线程(Eventloop)扫描器\"></a>事件循环线程(Eventloop)扫描器</h2><p>首先我们把所有事件循环的类从Set集合中独立出来,这块是框架调度分发的核心,完全有独立出来的意义.</p>\n<h3 id=\"辅助类\"><a href=\"#辅助类\" class=\"headerlink\" title=\"辅助类\"></a>辅助类</h3><p>这里定义几种类型,分别对应http、tcp、sock服务.<br><strong>EventloopType.java</strong></p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki solarized-light\" style=\"background-color: #FDF6E3\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #859900\">package</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">org.btr.ygo.constant</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">java.util.Arrays</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">java.util.List</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #93A1A1; font-style: italic\">/**</span></span>\n<span class=\"line\"><span style=\"color: #93A1A1; font-style: italic\"> * </span><span style=\"color: #859900; font-style: italic\">@author</span><span style=\"color: #93A1A1; font-style: italic\"> &lt;a href=&quot;mailto:1159930219@qq.com&quot;&gt;BornToRain&lt;/a&gt;</span></span>\n<span class=\"line\"><span style=\"color: #93A1A1; font-style: italic\"> */</span></span>\n<span class=\"line\"><span style=\"color: #586E75; font-weight: bold\">public</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">enum</span><span style=\"color: #657B83\"> </span><span style=\"color: #CB4B16\">EventloopType</span><span style=\"color: #657B83\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  </span><span style=\"color: #CB4B16\">HTTP</span><span style=\"color: #657B83\">, </span><span style=\"color: #CB4B16\">TCP</span><span style=\"color: #657B83\">, </span><span style=\"color: #CB4B16\">SOCK</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  </span><span style=\"color: #586E75; font-weight: bold\">private</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">static</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">final</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">List</span><span style=\"color: #657B83\">&lt;</span><span style=\"color: #586E75; font-weight: bold\">String</span><span style=\"color: #657B83\">&gt; </span><span style=\"color: #268BD2\">HTTP_TYPE</span><span style=\"color: #657B83\"> </span><span style=\"color: #859900\">=</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    </span><span style=\"color: #268BD2\">Arrays</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">asList</span><span style=\"color: #657B83\">(</span><span style=\"color: #268BD2\">HTTP</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">name</span><span style=\"color: #657B83\">().</span><span style=\"color: #268BD2\">toLowerCase</span><span style=\"color: #657B83\">(), </span><span style=\"color: #268BD2\">SOCK</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">name</span><span style=\"color: #657B83\">().</span><span style=\"color: #268BD2\">toLowerCase</span><span style=\"color: #657B83\">());</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  </span><span style=\"color: #586E75; font-weight: bold\">public</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">static</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">boolean</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">isHttp</span><span style=\"color: #657B83\">(</span><span style=\"color: #586E75; font-weight: bold\">String</span><span style=\"color: #657B83\"> type) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    </span><span style=\"color: #859900\">return</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">HTTP_TYPE</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">contains</span><span style=\"color: #657B83\">(type);</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  &#125;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  </span><span style=\"color: #586E75; font-weight: bold\">public</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">static</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">boolean</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">isNet</span><span style=\"color: #657B83\">(</span><span style=\"color: #586E75; font-weight: bold\">String</span><span style=\"color: #657B83\"> type) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    </span><span style=\"color: #859900\">return</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">TCP</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">name</span><span style=\"color: #657B83\">().</span><span style=\"color: #268BD2\">equalsIgnoreCase</span><span style=\"color: #657B83\">(type);</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  &#125;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">&#125;</span></span></code></pre></div><p>注解式开发,用注解把类标识出来.<br><strong>Eventloop.java</strong></p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki solarized-light\" style=\"background-color: #FDF6E3\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #859900\">package</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">org.btr.ygo.annotations</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">org.btr.ygo.constant.EventloopType</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">java.lang.annotation.Documented</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">java.lang.annotation.ElementType</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">java.lang.annotation.Inherited</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">java.lang.annotation.Retention</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">java.lang.annotation.RetentionPolicy</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">java.lang.annotation.Target</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #93A1A1; font-style: italic\">/**</span></span>\n<span class=\"line\"><span style=\"color: #93A1A1; font-style: italic\"> * </span><span style=\"color: #859900; font-style: italic\">@author</span><span style=\"color: #93A1A1; font-style: italic\"> &lt;a href=&quot;mailto:1159930219@qq.com&quot;&gt;BornToRain&lt;/a&gt;</span></span>\n<span class=\"line\"><span style=\"color: #93A1A1; font-style: italic\"> */</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">@</span><span style=\"color: #586E75; font-weight: bold\">Inherited</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">@</span><span style=\"color: #586E75; font-weight: bold\">Documented</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">@</span><span style=\"color: #586E75; font-weight: bold\">Retention</span><span style=\"color: #657B83\">(</span><span style=\"color: #268BD2\">RetentionPolicy</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">RUNTIME</span><span style=\"color: #657B83\">)</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">@</span><span style=\"color: #586E75; font-weight: bold\">Target</span><span style=\"color: #657B83\">(&#123;</span><span style=\"color: #268BD2\">ElementType</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">TYPE</span><span style=\"color: #657B83\">,</span><span style=\"color: #268BD2\">ElementType</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">ANNOTATION_TYPE</span><span style=\"color: #657B83\">&#125;)</span></span>\n<span class=\"line\"><span style=\"color: #586E75; font-weight: bold\">public</span><span style=\"color: #657B83\"> @</span><span style=\"color: #586E75; font-weight: bold\">interface</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">Eventloop</span><span style=\"color: #657B83\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  </span><span style=\"color: #586E75; font-weight: bold\">boolean</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">ha</span><span style=\"color: #657B83\">() </span><span style=\"color: #859900\">default</span><span style=\"color: #657B83\"> </span><span style=\"color: #B58900\">false</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  </span><span style=\"color: #586E75; font-weight: bold\">int</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">instances</span><span style=\"color: #657B83\">() </span><span style=\"color: #859900\">default</span><span style=\"color: #657B83\"> </span><span style=\"color: #D33682\">1</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  </span><span style=\"color: #586E75; font-weight: bold\">EventloopType</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">type</span><span style=\"color: #657B83\">() </span><span style=\"color: #859900\">default</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">EventloopType</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">HTTP</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">&#125;</span></span></code></pre></div><h3 id=\"本体\"><a href=\"#本体\" class=\"headerlink\" title=\"本体\"></a>本体</h3><p>具体的事件循环扫描实现,通过扫描包含@Eventloop注解的类.</p>\n<p><strong>EventloopScanner.java</strong></p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki solarized-light\" style=\"background-color: #FDF6E3\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #859900\">package</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">org.btr.ygo.core.scan</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">lombok.extern.log4j.Log4j2</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">lombok.val</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">org.btr.ygo.core.annotations.Eventloop</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">org.btr.ygo.core.constant.Console</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">java.util.Set</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">java.util.stream.Collectors</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #93A1A1; font-style: italic\">/**</span></span>\n<span class=\"line\"><span style=\"color: #93A1A1; font-style: italic\"> * </span><span style=\"color: #859900; font-style: italic\">@author</span><span style=\"color: #93A1A1; font-style: italic\"> &lt;a href=&quot;mailto:1159930219@qq.com&quot;&gt;BornToRain&lt;/a&gt;</span></span>\n<span class=\"line\"><span style=\"color: #93A1A1; font-style: italic\"> */</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">@</span><span style=\"color: #586E75; font-weight: bold\">Log4j2</span></span>\n<span class=\"line\"><span style=\"color: #586E75; font-weight: bold\">public</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">final</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">class</span><span style=\"color: #657B83\"> </span><span style=\"color: #CB4B16\">EventloopScanner</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">implements</span><span style=\"color: #657B83\"> </span><span style=\"color: #6C71C4\">IScanner</span><span style=\"color: #657B83\">&lt;</span><span style=\"color: #586E75; font-weight: bold\">Set</span><span style=\"color: #657B83\">&lt;</span><span style=\"color: #586E75; font-weight: bold\">Class</span><span style=\"color: #657B83\">&lt;</span><span style=\"color: #586E75; font-weight: bold\">?</span><span style=\"color: #657B83\">&gt;&gt;&gt; &#123;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  @</span><span style=\"color: #586E75; font-weight: bold\">Override</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  </span><span style=\"color: #586E75; font-weight: bold\">public</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">Set</span><span style=\"color: #657B83\">&lt;</span><span style=\"color: #586E75; font-weight: bold\">Class</span><span style=\"color: #657B83\">&lt;</span><span style=\"color: #586E75; font-weight: bold\">?</span><span style=\"color: #657B83\">&gt;&gt; </span><span style=\"color: #268BD2\">scan</span><span style=\"color: #657B83\">(</span><span style=\"color: #586E75; font-weight: bold\">Set</span><span style=\"color: #657B83\">&lt;</span><span style=\"color: #586E75; font-weight: bold\">Class</span><span style=\"color: #657B83\">&lt;</span><span style=\"color: #586E75; font-weight: bold\">?</span><span style=\"color: #657B83\">&gt;&gt; classes) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    val ret </span><span style=\"color: #859900\">=</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">      </span><span style=\"color: #268BD2\">classes</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">stream</span><span style=\"color: #657B83\">().</span><span style=\"color: #268BD2\">filter</span><span style=\"color: #657B83\">(d </span><span style=\"color: #586E75; font-weight: bold\">-&gt;</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">d</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">isAnnotationPresent</span><span style=\"color: #657B83\">(</span><span style=\"color: #268BD2\">Eventloop</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">class</span><span style=\"color: #657B83\">)).</span><span style=\"color: #268BD2\">collect</span><span style=\"color: #657B83\">(</span><span style=\"color: #268BD2\">Collectors</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">toSet</span><span style=\"color: #657B83\">());</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    </span><span style=\"color: #268BD2\">log</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">info</span><span style=\"color: #657B83\">(</span><span style=\"color: #268BD2\">Console</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">SCANNED</span><span style=\"color: #657B83\">, </span><span style=\"color: #2AA198\">&quot;Eventloop&quot;</span><span style=\"color: #657B83\">, </span><span style=\"color: #268BD2\">ret</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">size</span><span style=\"color: #657B83\">());</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    </span><span style=\"color: #859900\">return</span><span style=\"color: #657B83\"> ret;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  &#125;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">&#125;</span></span></code></pre></div><h3 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h3><p><strong>IScannerTest.java</strong></p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki solarized-light\" style=\"background-color: #FDF6E3\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #859900\">package</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">org.btr.ygo.core.scan</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">lombok.extern.log4j.Log4j2</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">lombok.val</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">org.btr.ygo.core.annotations.Eventloop</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">org.btr.ygo.core.kit.Packages</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">org.btr.ygo.core.kit.Trunk</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">org.hamcrest.CoreMatchers</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">org.junit.Assert</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">org.junit.Test</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #93A1A1; font-style: italic\">/**</span></span>\n<span class=\"line\"><span style=\"color: #93A1A1; font-style: italic\"> * </span><span style=\"color: #859900; font-style: italic\">@author</span><span style=\"color: #93A1A1; font-style: italic\"> &lt;a href=&quot;mailto:1159930219@qq.com&quot;&gt;BornToRain&lt;/a&gt;</span></span>\n<span class=\"line\"><span style=\"color: #93A1A1; font-style: italic\"> */</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">@</span><span style=\"color: #586E75; font-weight: bold\">Log4j2</span></span>\n<span class=\"line\"><span style=\"color: #586E75; font-weight: bold\">public</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">class</span><span style=\"color: #657B83\"> </span><span style=\"color: #CB4B16\">IScannerTest</span><span style=\"color: #657B83\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  @</span><span style=\"color: #586E75; font-weight: bold\">Eventloop</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  </span><span style=\"color: #586E75; font-weight: bold\">public</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">static</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">class</span><span style=\"color: #657B83\"> </span><span style=\"color: #CB4B16\">TestEventloop</span><span style=\"color: #657B83\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  &#125;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  @</span><span style=\"color: #586E75; font-weight: bold\">Test</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  </span><span style=\"color: #586E75; font-weight: bold\">public</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">void</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">testEventloop</span><span style=\"color: #657B83\">() &#123;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    val classes </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">Packages</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">scan</span><span style=\"color: #657B83\">();</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    val scanner </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> Trunk.</span><span style=\"color: #859900\">&lt;</span><span style=\"color: #657B83\">EventloopScanner</span><span style=\"color: #859900\">&gt;</span><span style=\"color: #268BD2\">singleton</span><span style=\"color: #657B83\">(</span><span style=\"color: #268BD2\">EventloopScanner</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">class</span><span style=\"color: #657B83\">);</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    val ret </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">scanner</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">scan</span><span style=\"color: #657B83\">(classes);</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    </span><span style=\"color: #268BD2\">Assert</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">assertThat</span><span style=\"color: #657B83\">(ret, </span><span style=\"color: #268BD2\">CoreMatchers</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">hasItem</span><span style=\"color: #657B83\">(</span><span style=\"color: #268BD2\">TestEventloop</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">class</span><span style=\"color: #657B83\">));</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  &#125;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">&#125;</span></span></code></pre></div><h2 id=\"测试结果\"><a href=\"#测试结果\" class=\"headerlink\" title=\"测试结果\"></a>测试结果<br><img src=\"/images/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%92%B8%E6%A1%86%E6%9E%B6/3/testret1.png\" alt=\"运行结果\"></h2><h2 id=\"工作线程-Worker-扫描器\"><a href=\"#工作线程-Worker-扫描器\" class=\"headerlink\" title=\"工作线程(Worker)扫描器\"></a>工作线程(Worker)扫描器</h2><p>工作类负责框架各种任务的执行,具体实现同Eventloop.</p>\n<h3 id=\"辅助类-1\"><a href=\"#辅助类-1\" class=\"headerlink\" title=\"辅助类\"></a>辅助类</h3><p><strong>Worker.java</strong></p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki solarized-light\" style=\"background-color: #FDF6E3\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #859900\">package</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">org.btr.ygo.core.annotations</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">java.lang.annotation.Documented</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">java.lang.annotation.ElementType</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">java.lang.annotation.Inherited</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">java.lang.annotation.Retention</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">java.lang.annotation.RetentionPolicy</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">java.lang.annotation.Target</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #93A1A1; font-style: italic\">/**</span></span>\n<span class=\"line\"><span style=\"color: #93A1A1; font-style: italic\"> * </span><span style=\"color: #859900; font-style: italic\">@author</span><span style=\"color: #93A1A1; font-style: italic\"> &lt;a href=&quot;mailto:1159930219@qq.com&quot;&gt;BornToRain&lt;/a&gt;</span></span>\n<span class=\"line\"><span style=\"color: #93A1A1; font-style: italic\"> */</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">@</span><span style=\"color: #586E75; font-weight: bold\">Inherited</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">@</span><span style=\"color: #586E75; font-weight: bold\">Documented</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">@</span><span style=\"color: #586E75; font-weight: bold\">Target</span><span style=\"color: #657B83\">(&#123;</span><span style=\"color: #268BD2\">ElementType</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">TYPE</span><span style=\"color: #657B83\">,</span><span style=\"color: #268BD2\">ElementType</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">ANNOTATION_TYPE</span><span style=\"color: #657B83\">&#125;)</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">@</span><span style=\"color: #586E75; font-weight: bold\">Retention</span><span style=\"color: #657B83\">(</span><span style=\"color: #268BD2\">RetentionPolicy</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">RUNTIME</span><span style=\"color: #657B83\">)</span></span>\n<span class=\"line\"><span style=\"color: #586E75; font-weight: bold\">public</span><span style=\"color: #657B83\"> @</span><span style=\"color: #586E75; font-weight: bold\">interface</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">Worker</span><span style=\"color: #657B83\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  </span><span style=\"color: #586E75; font-weight: bold\">boolean</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">ha</span><span style=\"color: #657B83\">() </span><span style=\"color: #859900\">default</span><span style=\"color: #657B83\"> </span><span style=\"color: #B58900\">false</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  </span><span style=\"color: #586E75; font-weight: bold\">int</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">instances</span><span style=\"color: #657B83\">() </span><span style=\"color: #859900\">default</span><span style=\"color: #657B83\"> </span><span style=\"color: #D33682\">1</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">&#125;</span></span></code></pre></div><h3 id=\"本体-1\"><a href=\"#本体-1\" class=\"headerlink\" title=\"本体\"></a>本体</h3><p><strong>WorkerScanner.java</strong></p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki solarized-light\" style=\"background-color: #FDF6E3\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #859900\">package</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">org.btr.ygo.core.scan</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">lombok.extern.log4j.Log4j2</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">lombok.val</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">org.btr.ygo.core.annotations.Worker</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">org.btr.ygo.core.constant.Console</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">java.util.Set</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">java.util.stream.Collectors</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #93A1A1; font-style: italic\">/**</span></span>\n<span class=\"line\"><span style=\"color: #93A1A1; font-style: italic\"> * </span><span style=\"color: #859900; font-style: italic\">@author</span><span style=\"color: #93A1A1; font-style: italic\"> &lt;a href=&quot;mailto:1159930219@qq.com&quot;&gt;BornToRain&lt;/a&gt;</span></span>\n<span class=\"line\"><span style=\"color: #93A1A1; font-style: italic\"> */</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">@</span><span style=\"color: #586E75; font-weight: bold\">Log4j2</span></span>\n<span class=\"line\"><span style=\"color: #586E75; font-weight: bold\">public</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">final</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">class</span><span style=\"color: #657B83\"> </span><span style=\"color: #CB4B16\">WorkerScanner</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">implements</span><span style=\"color: #657B83\"> </span><span style=\"color: #6C71C4\">IScanner</span><span style=\"color: #657B83\">&lt;</span><span style=\"color: #586E75; font-weight: bold\">Set</span><span style=\"color: #657B83\">&lt;</span><span style=\"color: #586E75; font-weight: bold\">Class</span><span style=\"color: #657B83\">&lt;</span><span style=\"color: #586E75; font-weight: bold\">?</span><span style=\"color: #657B83\">&gt;&gt;&gt; &#123;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  @</span><span style=\"color: #586E75; font-weight: bold\">Override</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  </span><span style=\"color: #586E75; font-weight: bold\">public</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">Set</span><span style=\"color: #657B83\">&lt;</span><span style=\"color: #586E75; font-weight: bold\">Class</span><span style=\"color: #657B83\">&lt;</span><span style=\"color: #586E75; font-weight: bold\">?</span><span style=\"color: #657B83\">&gt;&gt; </span><span style=\"color: #268BD2\">scan</span><span style=\"color: #657B83\">(</span><span style=\"color: #586E75; font-weight: bold\">Set</span><span style=\"color: #657B83\">&lt;</span><span style=\"color: #586E75; font-weight: bold\">Class</span><span style=\"color: #657B83\">&lt;</span><span style=\"color: #586E75; font-weight: bold\">?</span><span style=\"color: #657B83\">&gt;&gt; classes) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    val ret </span><span style=\"color: #859900\">=</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">      </span><span style=\"color: #268BD2\">classes</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">stream</span><span style=\"color: #657B83\">().</span><span style=\"color: #268BD2\">filter</span><span style=\"color: #657B83\">(d </span><span style=\"color: #586E75; font-weight: bold\">-&gt;</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">d</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">isAnnotationPresent</span><span style=\"color: #657B83\">(</span><span style=\"color: #268BD2\">Worker</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">class</span><span style=\"color: #657B83\">)).</span><span style=\"color: #268BD2\">collect</span><span style=\"color: #657B83\">(</span><span style=\"color: #268BD2\">Collectors</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">toSet</span><span style=\"color: #657B83\">());</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    </span><span style=\"color: #268BD2\">log</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">info</span><span style=\"color: #657B83\">(</span><span style=\"color: #268BD2\">Console</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">SCANNED</span><span style=\"color: #657B83\">, </span><span style=\"color: #2AA198\">&quot;Worker&quot;</span><span style=\"color: #657B83\">, </span><span style=\"color: #268BD2\">ret</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">size</span><span style=\"color: #657B83\">());</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    </span><span style=\"color: #859900\">return</span><span style=\"color: #657B83\"> ret;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  &#125;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">&#125;</span></span></code></pre></div><h3 id=\"测试-1\"><a href=\"#测试-1\" class=\"headerlink\" title=\"测试\"></a>测试</h3><h2 id=\"在IScannerTest-java中追加一例测试-java-public-class-IScannerTest-Worker-public-static-class-TestWorker-Test-public-void-testWorker-val-classes-Packages-scan-val-scanner-Trunk-singleton-WorkerScanner-class-val-ret-scanner-scan-classes-Assert-assertThat-ret-CoreMatchers-hasItem-TestWorker-class-测试结果\"><a href=\"#在IScannerTest-java中追加一例测试-java-public-class-IScannerTest-Worker-public-static-class-TestWorker-Test-public-void-testWorker-val-classes-Packages-scan-val-scanner-Trunk-singleton-WorkerScanner-class-val-ret-scanner-scan-classes-Assert-assertThat-ret-CoreMatchers-hasItem-TestWorker-class-测试结果\" class=\"headerlink\" title=\"在IScannerTest.java中追加一例测试.java public class IScannerTest {   ...   @Worker   public static class TestWorker {   }   @Test   public void testWorker() {     val classes = Packages.scan();     val scanner = Trunk.&lt;WorkerScanner&gt;singleton(WorkerScanner.class);     val ret = scanner.scan(classes);     Assert.assertThat(ret, CoreMatchers.hasItem(TestWorker.class));   } } 测试结果\"></a>在<strong>IScannerTest.java</strong>中追加一例测试.<br><code>java public class IScannerTest &#123;   ...   @Worker   public static class TestWorker &#123;   &#125;   @Test   public void testWorker() &#123;     val classes = Packages.scan();     val scanner = Trunk.&lt;WorkerScanner&gt;singleton(WorkerScanner.class);     val ret = scanner.scan(classes);     Assert.assertThat(ret, CoreMatchers.hasItem(TestWorker.class));   &#125; &#125; </code><br>测试结果<br><img src=\"/images/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%92%B8%E6%A1%86%E6%9E%B6/3/testret2.png\" alt=\"运行结果\"></h2><h2 id=\"Vert-x消息扫描器\"><a href=\"#Vert-x消息扫描器\" class=\"headerlink\" title=\"Vert.x消息扫描器\"></a>Vert.x消息扫描器</h2><p>在<a href=\"https://vertx.io/\">Vert.x</a>官网示例中,我们可以看到它<em>Eventloop</em>与<em>Worker</em>交互是通过vertx.eventBus()来实现的.<br>因此我们把交互消息也定义成一个类,把它也从类集合中独立出来.</p>\n<h3 id=\"辅助类-2\"><a href=\"#辅助类-2\" class=\"headerlink\" title=\"辅助类\"></a>辅助类</h3><p><strong>Receipt.java</strong></p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki solarized-light\" style=\"background-color: #FDF6E3\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #859900\">package</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">org.btr.ygo.core.scan</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">lombok.AccessLevel</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">lombok.Data</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">lombok.experimental.Accessors</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">lombok.experimental.FieldDefaults</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">java.lang.reflect.Method</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #93A1A1; font-style: italic\">/**</span></span>\n<span class=\"line\"><span style=\"color: #93A1A1; font-style: italic\"> * </span><span style=\"color: #859900; font-style: italic\">@author</span><span style=\"color: #93A1A1; font-style: italic\"> &lt;a href=&quot;mailto:1159930219@qq.com&quot;&gt;BornToRain&lt;/a&gt;</span></span>\n<span class=\"line\"><span style=\"color: #93A1A1; font-style: italic\"> */</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">@</span><span style=\"color: #586E75; font-weight: bold\">Data</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">@</span><span style=\"color: #586E75; font-weight: bold\">Accessors</span><span style=\"color: #657B83\">(</span><span style=\"color: #CB4B16\">chain</span><span style=\"color: #657B83\"> </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #B58900\">true</span><span style=\"color: #657B83\">)</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">@</span><span style=\"color: #586E75; font-weight: bold\">FieldDefaults</span><span style=\"color: #657B83\">(</span><span style=\"color: #CB4B16\">level</span><span style=\"color: #657B83\"> </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">AccessLevel</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">PRIVATE</span><span style=\"color: #657B83\">)</span></span>\n<span class=\"line\"><span style=\"color: #586E75; font-weight: bold\">public</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">class</span><span style=\"color: #657B83\"> </span><span style=\"color: #CB4B16\">Receipt</span><span style=\"color: #657B83\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  </span><span style=\"color: #93A1A1; font-style: italic\">// 承载消息的类.</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  </span><span style=\"color: #586E75; font-weight: bold\">Object</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">proxy</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  </span><span style=\"color: #93A1A1; font-style: italic\">// 发布在Vert.x上的消息地址.</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  </span><span style=\"color: #586E75; font-weight: bold\">String</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">addr</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  </span><span style=\"color: #93A1A1; font-style: italic\">// 具体执行的方法.</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  </span><span style=\"color: #586E75; font-weight: bold\">Method</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">method</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">&#125;</span></span></code></pre></div><p>分别定义<em>EventBus</em>和<em>Addr</em>两个注解,用来标识类是否要处于Vert.x的消息队列中和类在队列上的地址.<br><strong>EventBus.java</strong></p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki solarized-light\" style=\"background-color: #FDF6E3\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #859900\">package</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">org.btr.ygo.core.annotations</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">java.lang.annotation.Documented</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">java.lang.annotation.ElementType</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">java.lang.annotation.Inherited</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">java.lang.annotation.Retention</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">java.lang.annotation.RetentionPolicy</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">java.lang.annotation.Target</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #93A1A1; font-style: italic\">/**</span></span>\n<span class=\"line\"><span style=\"color: #93A1A1; font-style: italic\"> * </span><span style=\"color: #859900; font-style: italic\">@author</span><span style=\"color: #93A1A1; font-style: italic\"> &lt;a href=&quot;mailto:1159930219@qq.com&quot;&gt;BornToRain&lt;/a&gt;</span></span>\n<span class=\"line\"><span style=\"color: #93A1A1; font-style: italic\"> */</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">@</span><span style=\"color: #586E75; font-weight: bold\">Inherited</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">@</span><span style=\"color: #586E75; font-weight: bold\">Documented</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">@</span><span style=\"color: #586E75; font-weight: bold\">Retention</span><span style=\"color: #657B83\">(</span><span style=\"color: #268BD2\">RetentionPolicy</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">RUNTIME</span><span style=\"color: #657B83\">)</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">@</span><span style=\"color: #586E75; font-weight: bold\">Target</span><span style=\"color: #657B83\">(&#123;</span><span style=\"color: #268BD2\">ElementType</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">TYPE</span><span style=\"color: #657B83\">,</span><span style=\"color: #268BD2\">ElementType</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">ANNOTATION_TYPE</span><span style=\"color: #657B83\">&#125;)</span></span>\n<span class=\"line\"><span style=\"color: #586E75; font-weight: bold\">public</span><span style=\"color: #657B83\"> @</span><span style=\"color: #586E75; font-weight: bold\">interface</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">EventBus</span><span style=\"color: #657B83\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">&#125;</span></span></code></pre></div><p><strong>Addr.java</strong></p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki solarized-light\" style=\"background-color: #FDF6E3\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #859900\">package</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">org.btr.ygo.core.annotations</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">java.lang.annotation.Documented</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">java.lang.annotation.ElementType</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">java.lang.annotation.Inherited</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">java.lang.annotation.Retention</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">java.lang.annotation.RetentionPolicy</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">java.lang.annotation.Target</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #93A1A1; font-style: italic\">/**</span></span>\n<span class=\"line\"><span style=\"color: #93A1A1; font-style: italic\"> * </span><span style=\"color: #859900; font-style: italic\">@author</span><span style=\"color: #93A1A1; font-style: italic\"> &lt;a href=&quot;mailto:1159930219@qq.com&quot;&gt;BornToRain&lt;/a&gt;</span></span>\n<span class=\"line\"><span style=\"color: #93A1A1; font-style: italic\"> */</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">@</span><span style=\"color: #586E75; font-weight: bold\">Inherited</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">@</span><span style=\"color: #586E75; font-weight: bold\">Documented</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">@</span><span style=\"color: #586E75; font-weight: bold\">Retention</span><span style=\"color: #657B83\">(</span><span style=\"color: #268BD2\">RetentionPolicy</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">RUNTIME</span><span style=\"color: #657B83\">)</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">@</span><span style=\"color: #586E75; font-weight: bold\">Target</span><span style=\"color: #657B83\">(&#123;</span><span style=\"color: #268BD2\">ElementType</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">METHOD</span><span style=\"color: #657B83\">,</span><span style=\"color: #268BD2\">ElementType</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">ANNOTATION_TYPE</span><span style=\"color: #657B83\">&#125;)</span></span>\n<span class=\"line\"><span style=\"color: #586E75; font-weight: bold\">public</span><span style=\"color: #657B83\"> @</span><span style=\"color: #586E75; font-weight: bold\">interface</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">Addr</span><span style=\"color: #657B83\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  </span><span style=\"color: #586E75; font-weight: bold\">String</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">value</span><span style=\"color: #657B83\">();</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">&#125;</span></span></code></pre></div><p>我们在之前的<em>Trunk.java</em>工厂类中添加新的方法,分别实现获取实现类和代理类的功能.<br><strong>Trunk.java</strong></p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki solarized-light\" style=\"background-color: #FDF6E3\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #586E75; font-weight: bold\">public</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">final</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">class</span><span style=\"color: #657B83\"> </span><span style=\"color: #CB4B16\">Trunk</span><span style=\"color: #657B83\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  ...</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  </span><span style=\"color: #586E75; font-weight: bold\">public</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">static</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">Class</span><span style=\"color: #657B83\">&lt;</span><span style=\"color: #586E75; font-weight: bold\">?</span><span style=\"color: #657B83\">&gt; </span><span style=\"color: #268BD2\">getImpl</span><span style=\"color: #657B83\">(</span><span style=\"color: #586E75; font-weight: bold\">Class</span><span style=\"color: #657B83\">&lt;</span><span style=\"color: #586E75; font-weight: bold\">?</span><span style=\"color: #657B83\">&gt; cls) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    </span><span style=\"color: #859900\">return</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">Fn</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">ensureRun</span><span style=\"color: #657B83\">(() </span><span style=\"color: #586E75; font-weight: bold\">-&gt;</span><span style=\"color: #657B83\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">      </span><span style=\"color: #93A1A1; font-style: italic\">// 搜索全部包下的类得到所有cls实现的类,必须是单实现.</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">      val classes </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">Packages</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">scan</span><span style=\"color: #657B83\">().</span><span style=\"color: #268BD2\">stream</span><span style=\"color: #657B83\">()</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">        </span><span style=\"color: #93A1A1; font-style: italic\">// 过滤掉自身以及子类</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">        .</span><span style=\"color: #268BD2\">filter</span><span style=\"color: #657B83\">(d </span><span style=\"color: #586E75; font-weight: bold\">-&gt;</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">cls</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">isAssignableFrom</span><span style=\"color: #657B83\">(d) </span><span style=\"color: #859900\">&amp;&amp;</span><span style=\"color: #657B83\"> d </span><span style=\"color: #859900\">!=</span><span style=\"color: #657B83\"> cls)</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">        .</span><span style=\"color: #268BD2\">collect</span><span style=\"color: #657B83\">(</span><span style=\"color: #268BD2\">Collectors</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">toList</span><span style=\"color: #657B83\">());</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">      </span><span style=\"color: #859900\">return</span><span style=\"color: #657B83\"> </span><span style=\"color: #D33682\">1</span><span style=\"color: #657B83\"> </span><span style=\"color: #859900\">==</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">classes</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">size</span><span style=\"color: #657B83\">() </span><span style=\"color: #859900\">?</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">classes</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">get</span><span style=\"color: #657B83\">(</span><span style=\"color: #D33682\">0</span><span style=\"color: #657B83\">) </span><span style=\"color: #859900\">:</span><span style=\"color: #657B83\"> </span><span style=\"color: #B58900\">null</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    &#125;, cls);</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  &#125;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  </span><span style=\"color: #586E75; font-weight: bold\">public</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">static</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">Object</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">getProxy</span><span style=\"color: #657B83\">(</span><span style=\"color: #586E75; font-weight: bold\">Class</span><span style=\"color: #657B83\">&lt;</span><span style=\"color: #586E75; font-weight: bold\">?</span><span style=\"color: #657B83\">&gt; cls) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    </span><span style=\"color: #859900\">return</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">Fn</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">ensureRun</span><span style=\"color: #657B83\">(</span><span style=\"color: #859900\">!</span><span style=\"color: #268BD2\">cls</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">isInterface</span><span style=\"color: #657B83\">(),</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">      </span><span style=\"color: #93A1A1; font-style: italic\">// 非接口直接单例对象</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">      () </span><span style=\"color: #586E75; font-weight: bold\">-&gt;</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">Trunk</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">singleton</span><span style=\"color: #657B83\">(cls),</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">      () </span><span style=\"color: #586E75; font-weight: bold\">-&gt;</span><span style=\"color: #657B83\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">        </span><span style=\"color: #93A1A1; font-style: italic\">// 接口获取其实现类</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">        val implCls </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">Trunk</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">getImpl</span><span style=\"color: #657B83\">(cls);</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">        </span><span style=\"color: #93A1A1; font-style: italic\">// 实现类不为空获取其单例对象</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">        </span><span style=\"color: #859900\">return</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">Fn</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">ensureRun</span><span style=\"color: #657B83\">(() </span><span style=\"color: #586E75; font-weight: bold\">-&gt;</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">Trunk</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">singleton</span><span style=\"color: #657B83\">(implCls), implCls);</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">      &#125;);</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  &#125;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">&#125;</span></span></code></pre></div><h3 id=\"本体-2\"><a href=\"#本体-2\" class=\"headerlink\" title=\"本体\"></a>本体</h3><p><strong>ReceiptScanner.java</strong></p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki solarized-light\" style=\"background-color: #FDF6E3\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #859900\">package</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">org.btr.ygo.core.scan</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">lombok.extern.log4j.Log4j2</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">lombok.val</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">org.btr.ygo.core.annotations.Addr</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">org.btr.ygo.core.annotations.EventBus</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">org.btr.ygo.core.constant.Console</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">org.btr.ygo.core.kit.Methods</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">org.btr.ygo.core.kit.Trunk</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">java.lang.reflect.Method</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">java.util.Arrays</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">java.util.Set</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">java.util.stream.Collectors</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #93A1A1; font-style: italic\">/**</span></span>\n<span class=\"line\"><span style=\"color: #93A1A1; font-style: italic\"> * </span><span style=\"color: #859900; font-style: italic\">@author</span><span style=\"color: #93A1A1; font-style: italic\"> &lt;a href=&quot;mailto:1159930219@qq.com&quot;&gt;BornToRain&lt;/a&gt;</span></span>\n<span class=\"line\"><span style=\"color: #93A1A1; font-style: italic\"> */</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">@</span><span style=\"color: #586E75; font-weight: bold\">Log4j2</span></span>\n<span class=\"line\"><span style=\"color: #586E75; font-weight: bold\">public</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">final</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">class</span><span style=\"color: #657B83\"> </span><span style=\"color: #CB4B16\">ReceiptScanner</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">implements</span><span style=\"color: #657B83\"> </span><span style=\"color: #6C71C4\">IScanner</span><span style=\"color: #657B83\">&lt;</span><span style=\"color: #586E75; font-weight: bold\">Set</span><span style=\"color: #657B83\">&lt;</span><span style=\"color: #586E75; font-weight: bold\">Receipt</span><span style=\"color: #657B83\">&gt;&gt; &#123;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  @</span><span style=\"color: #586E75; font-weight: bold\">Override</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  </span><span style=\"color: #586E75; font-weight: bold\">public</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">Set</span><span style=\"color: #657B83\">&lt;</span><span style=\"color: #586E75; font-weight: bold\">Receipt</span><span style=\"color: #657B83\">&gt; </span><span style=\"color: #268BD2\">scan</span><span style=\"color: #657B83\">(</span><span style=\"color: #586E75; font-weight: bold\">Set</span><span style=\"color: #657B83\">&lt;</span><span style=\"color: #586E75; font-weight: bold\">Class</span><span style=\"color: #657B83\">&lt;</span><span style=\"color: #586E75; font-weight: bold\">?</span><span style=\"color: #657B83\">&gt;&gt; classes) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    </span><span style=\"color: #93A1A1; font-style: italic\">// 所有@EventBus注解的类</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    val eventBuses </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">classes</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">stream</span><span style=\"color: #657B83\">().</span><span style=\"color: #268BD2\">filter</span><span style=\"color: #657B83\">(d </span><span style=\"color: #586E75; font-weight: bold\">-&gt;</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">d</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">isAnnotationPresent</span><span style=\"color: #657B83\">(</span><span style=\"color: #268BD2\">EventBus</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">class</span><span style=\"color: #657B83\">))</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">      .</span><span style=\"color: #268BD2\">collect</span><span style=\"color: #657B83\">(</span><span style=\"color: #268BD2\">Collectors</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">toSet</span><span style=\"color: #657B83\">());</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    </span><span style=\"color: #268BD2\">log</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">info</span><span style=\"color: #657B83\">(</span><span style=\"color: #268BD2\">Console</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">SCANNED</span><span style=\"color: #657B83\">, </span><span style=\"color: #2AA198\">&quot;EventBus&quot;</span><span style=\"color: #657B83\">, </span><span style=\"color: #268BD2\">eventBuses</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">size</span><span style=\"color: #657B83\">());</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    val receipts </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">eventBuses</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">stream</span><span style=\"color: #657B83\">()</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">      </span><span style=\"color: #93A1A1; font-style: italic\">// 根据类下所有的方法,将其转成为Receipt对象.</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">      .</span><span style=\"color: #268BD2\">flatMap</span><span style=\"color: #657B83\">(d </span><span style=\"color: #586E75; font-weight: bold\">-&gt;</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">Arrays</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">stream</span><span style=\"color: #657B83\">(</span><span style=\"color: #268BD2\">d</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">getDeclaredMethods</span><span style=\"color: #657B83\">()).</span><span style=\"color: #268BD2\">filter</span><span style=\"color: #657B83\">(Methods</span><span style=\"color: #859900\">::</span><span style=\"color: #657B83\">validateMethod))</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">      .</span><span style=\"color: #268BD2\">map</span><span style=\"color: #657B83\">(</span><span style=\"color: #268BD2\">this</span><span style=\"color: #859900\">::</span><span style=\"color: #657B83\">scan).</span><span style=\"color: #268BD2\">collect</span><span style=\"color: #657B83\">(</span><span style=\"color: #268BD2\">Collectors</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">toSet</span><span style=\"color: #657B83\">());</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    </span><span style=\"color: #268BD2\">log</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">info</span><span style=\"color: #657B83\">(</span><span style=\"color: #268BD2\">Console</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">SCANNED</span><span style=\"color: #657B83\">, </span><span style=\"color: #2AA198\">&quot;Address&quot;</span><span style=\"color: #657B83\">, </span><span style=\"color: #268BD2\">receipts</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">size</span><span style=\"color: #657B83\">());</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    </span><span style=\"color: #859900\">return</span><span style=\"color: #657B83\"> receipts;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  &#125;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  </span><span style=\"color: #586E75; font-weight: bold\">private</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">Receipt</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">scan</span><span style=\"color: #657B83\">(</span><span style=\"color: #586E75; font-weight: bold\">Method</span><span style=\"color: #657B83\"> method) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    val cls </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">method</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">getDeclaringClass</span><span style=\"color: #657B83\">();</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    val proxy </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">Trunk</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">getProxy</span><span style=\"color: #657B83\">(cls);</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    val addr </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">method</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">getAnnotation</span><span style=\"color: #657B83\">(</span><span style=\"color: #268BD2\">Addr</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">class</span><span style=\"color: #657B83\">).</span><span style=\"color: #268BD2\">value</span><span style=\"color: #657B83\">();</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    val data </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #859900\">new</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">Receipt</span><span style=\"color: #657B83\">().</span><span style=\"color: #268BD2\">setAddr</span><span style=\"color: #657B83\">(addr).</span><span style=\"color: #268BD2\">setMethod</span><span style=\"color: #657B83\">(method)</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">      .</span><span style=\"color: #268BD2\">setProxy</span><span style=\"color: #657B83\">(proxy);</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    </span><span style=\"color: #268BD2\">log</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">info</span><span style=\"color: #657B83\">(</span><span style=\"color: #2AA198\">&quot;Address: &#123;&#125;&quot;</span><span style=\"color: #657B83\">, addr);</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    </span><span style=\"color: #859900\">return</span><span style=\"color: #657B83\"> data;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  &#125;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">&#125;</span></span></code></pre></div><h3 id=\"测试-2\"><a href=\"#测试-2\" class=\"headerlink\" title=\"测试\"></a>测试</h3><p>继续在<strong>IScannerTest.java</strong>追加测试</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki solarized-light\" style=\"background-color: #FDF6E3\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #586E75; font-weight: bold\">public</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">class</span><span style=\"color: #657B83\"> </span><span style=\"color: #CB4B16\">IScannerTest</span><span style=\"color: #657B83\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  ...</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  @</span><span style=\"color: #586E75; font-weight: bold\">EventBus</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  </span><span style=\"color: #586E75; font-weight: bold\">public</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">static</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">class</span><span style=\"color: #657B83\"> </span><span style=\"color: #CB4B16\">TestEventBus</span><span style=\"color: #657B83\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    @</span><span style=\"color: #586E75; font-weight: bold\">Addr</span><span style=\"color: #657B83\">(</span><span style=\"color: #2AA198\">&quot;test&quot;</span><span style=\"color: #657B83\">)</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    </span><span style=\"color: #586E75; font-weight: bold\">public</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">void</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">test</span><span style=\"color: #657B83\">() &#123;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  &#125;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  @</span><span style=\"color: #586E75; font-weight: bold\">Test</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  </span><span style=\"color: #586E75; font-weight: bold\">public</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">void</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">testReceipt</span><span style=\"color: #657B83\">() &#123;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    val classes </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">Packages</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">scan</span><span style=\"color: #657B83\">();</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    val scanner </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> Trunk.</span><span style=\"color: #859900\">&lt;</span><span style=\"color: #657B83\">ReceiptScanner</span><span style=\"color: #859900\">&gt;</span><span style=\"color: #268BD2\">singleton</span><span style=\"color: #657B83\">(</span><span style=\"color: #268BD2\">ReceiptScanner</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">class</span><span style=\"color: #657B83\">);</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    val data </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #859900\">new</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">Receipt</span><span style=\"color: #657B83\">().</span><span style=\"color: #268BD2\">setAddr</span><span style=\"color: #657B83\">(</span><span style=\"color: #2AA198\">&quot;test&quot;</span><span style=\"color: #657B83\">);</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    val xs </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">scanner</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">scan</span><span style=\"color: #657B83\">(classes);</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    val ret </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">xs</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">stream</span><span style=\"color: #657B83\">().</span><span style=\"color: #268BD2\">filter</span><span style=\"color: #657B83\">(d </span><span style=\"color: #586E75; font-weight: bold\">-&gt;</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">data</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">getAddr</span><span style=\"color: #657B83\">().</span><span style=\"color: #268BD2\">equals</span><span style=\"color: #657B83\">(</span><span style=\"color: #268BD2\">d</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">getAddr</span><span style=\"color: #657B83\">())).</span><span style=\"color: #268BD2\">findAny</span><span style=\"color: #657B83\">();</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    </span><span style=\"color: #268BD2\">Assert</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">assertTrue</span><span style=\"color: #657B83\">(</span><span style=\"color: #268BD2\">ret</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">isPresent</span><span style=\"color: #657B83\">());</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  &#125;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">&#125;</span></span></code></pre></div><p>测试结果<br><img src=\"/images/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%92%B8%E6%A1%86%E6%9E%B6/3/testret3.png\" alt=\"运行结果\"></p>\n<hr>\n<h2 id=\"依赖注入-Dependency-Injection-扫描器\"><a href=\"#依赖注入-Dependency-Injection-扫描器\" class=\"headerlink\" title=\"依赖注入(Dependency Injection)扫描器\"></a>依赖注入(Dependency Injection)扫描器</h2><p>用过spring的都知道 <em>@Resource</em> 、 <em>@Autowire</em> 注入,其中前者是jsr250的,后者是spring封装的.</p>\n<p>这里我们也可以封装一套类似于Spring的,也可以基于现有的注解开发,在这我选择基于jsr330注解开发.</p>\n<p>在core模块<strong>build.gradle</strong>中追加</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki solarized-light\" style=\"background-color: #FDF6E3\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #657B83\">dependencies &#123;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  ...</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  // jsr330</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  compile &quot;javax.inject:javax.inject:1&quot;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  ...</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">&#125;</span></span></code></pre></div><h3 id=\"辅助类-3\"><a href=\"#辅助类-3\" class=\"headerlink\" title=\"辅助类\"></a>辅助类</h3><p>在<strong>Trunk.java</strong>追加一个新的方法</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki solarized-light\" style=\"background-color: #FDF6E3\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #586E75; font-weight: bold\">public</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">final</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">class</span><span style=\"color: #657B83\"> </span><span style=\"color: #CB4B16\">Trunk</span><span style=\"color: #657B83\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  ...</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  </span><span style=\"color: #93A1A1; font-style: italic\">// 递归查询是否有实现类</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  </span><span style=\"color: #586E75; font-weight: bold\">public</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">static</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">boolean</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">hasMatchImpl</span><span style=\"color: #657B83\">(</span><span style=\"color: #586E75; font-weight: bold\">Class</span><span style=\"color: #657B83\">&lt;</span><span style=\"color: #586E75; font-weight: bold\">?</span><span style=\"color: #657B83\">&gt; cls, </span><span style=\"color: #586E75; font-weight: bold\">Class</span><span style=\"color: #657B83\">&lt;</span><span style=\"color: #586E75; font-weight: bold\">?</span><span style=\"color: #657B83\">&gt; interfaceCls) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    </span><span style=\"color: #586E75; font-weight: bold\">var</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">b</span><span style=\"color: #657B83\"> </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">Arrays</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">asList</span><span style=\"color: #657B83\">(</span><span style=\"color: #268BD2\">cls</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">getInterfaces</span><span style=\"color: #657B83\">()).</span><span style=\"color: #268BD2\">contains</span><span style=\"color: #657B83\">(interfaceCls);</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    </span><span style=\"color: #859900\">if</span><span style=\"color: #657B83\"> (</span><span style=\"color: #859900\">!</span><span style=\"color: #657B83\">b </span><span style=\"color: #859900\">&amp;&amp;</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">Objects</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">nonNull</span><span style=\"color: #657B83\">(</span><span style=\"color: #268BD2\">cls</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">getSuperclass</span><span style=\"color: #657B83\">()))</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">      b </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">hasMatchImpl</span><span style=\"color: #657B83\">(</span><span style=\"color: #268BD2\">cls</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">getSuperclass</span><span style=\"color: #657B83\">(), interfaceCls);</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    </span><span style=\"color: #859900\">return</span><span style=\"color: #657B83\"> b;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  &#125;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">&#125;</span></span></code></pre></div><p>这里和Package扫描一样,类比较多,我们一个类创建一个线程来加快注入的扫描.<br><strong>DiThread.java</strong></p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki solarized-light\" style=\"background-color: #FDF6E3\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #859900\">package</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">org.btr.ygo.core.scan</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">io.netty.util.internal.StringUtil</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">lombok.AccessLevel</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">lombok.experimental.FieldDefaults</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">lombok.extern.log4j.Log4j2</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">lombok.val</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">org.btr.ygo.core.constant.Console</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">org.btr.ygo.core.kit.Trunk</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">javax.inject.Inject</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">javax.inject.Named</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">java.lang.reflect.Field</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">java.util.Arrays</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">java.util.HashMap</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">java.util.List</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">java.util.Map</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">java.util.Set</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">java.util.function.Supplier</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">java.util.stream.Collectors</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #93A1A1; font-style: italic\">/**</span></span>\n<span class=\"line\"><span style=\"color: #93A1A1; font-style: italic\"> * </span><span style=\"color: #859900; font-style: italic\">@author</span><span style=\"color: #93A1A1; font-style: italic\"> &lt;a href=&quot;mailto:1159930219@qq.com&quot;&gt;BornToRain&lt;/a&gt;</span></span>\n<span class=\"line\"><span style=\"color: #93A1A1; font-style: italic\"> */</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">@</span><span style=\"color: #586E75; font-weight: bold\">Log4j2</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">@</span><span style=\"color: #586E75; font-weight: bold\">FieldDefaults</span><span style=\"color: #657B83\">(</span><span style=\"color: #CB4B16\">level</span><span style=\"color: #657B83\"> </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">AccessLevel</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">PUBLIC</span><span style=\"color: #657B83\">, </span><span style=\"color: #CB4B16\">makeFinal</span><span style=\"color: #657B83\"> </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #B58900\">true</span><span style=\"color: #657B83\">)</span></span>\n<span class=\"line\"><span style=\"color: #586E75; font-weight: bold\">public</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">final</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">class</span><span style=\"color: #657B83\"> </span><span style=\"color: #CB4B16\">DiThread</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">extends</span><span style=\"color: #657B83\"> </span><span style=\"color: #6C71C4\">Thread</span><span style=\"color: #657B83\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  </span><span style=\"color: #93A1A1; font-style: italic\">// 当前类</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  </span><span style=\"color: #586E75; font-weight: bold\">Class</span><span style=\"color: #657B83\">&lt;</span><span style=\"color: #586E75; font-weight: bold\">?</span><span style=\"color: #657B83\">&gt; </span><span style=\"color: #268BD2\">cls</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  </span><span style=\"color: #93A1A1; font-style: italic\">// 所有类,需要在这里面找到当前类所有字段类型实现来注入.</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  </span><span style=\"color: #586E75; font-weight: bold\">Set</span><span style=\"color: #657B83\">&lt;</span><span style=\"color: #586E75; font-weight: bold\">Class</span><span style=\"color: #657B83\">&lt;</span><span style=\"color: #586E75; font-weight: bold\">?</span><span style=\"color: #657B83\">&gt;&gt; </span><span style=\"color: #268BD2\">classes</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  </span><span style=\"color: #93A1A1; font-style: italic\">// 当前类所有字段的对应类型</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  </span><span style=\"color: #586E75; font-weight: bold\">Map</span><span style=\"color: #657B83\">&lt;</span><span style=\"color: #586E75; font-weight: bold\">String</span><span style=\"color: #657B83\">, </span><span style=\"color: #586E75; font-weight: bold\">Class</span><span style=\"color: #657B83\">&lt;</span><span style=\"color: #586E75; font-weight: bold\">?</span><span style=\"color: #657B83\">&gt;&gt; </span><span style=\"color: #268BD2\">FIELD_INJECTS</span><span style=\"color: #657B83\"> </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #859900\">new</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">HashMap</span><span style=\"color: #657B83\">&lt;&gt;();</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  </span><span style=\"color: #586E75; font-weight: bold\">public</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">DiThread</span><span style=\"color: #657B83\">(</span><span style=\"color: #586E75; font-weight: bold\">Class</span><span style=\"color: #657B83\">&lt;</span><span style=\"color: #586E75; font-weight: bold\">?</span><span style=\"color: #657B83\">&gt; cls, </span><span style=\"color: #586E75; font-weight: bold\">Set</span><span style=\"color: #657B83\">&lt;</span><span style=\"color: #586E75; font-weight: bold\">Class</span><span style=\"color: #657B83\">&lt;</span><span style=\"color: #586E75; font-weight: bold\">?</span><span style=\"color: #657B83\">&gt;&gt; classes) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    </span><span style=\"color: #268BD2\">setName</span><span style=\"color: #657B83\">(</span><span style=\"color: #2AA198\">&quot;ygo-di-scanner-&quot;</span><span style=\"color: #657B83\"> </span><span style=\"color: #859900\">+</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">getId</span><span style=\"color: #657B83\">());</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    </span><span style=\"color: #268BD2\">this</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">cls</span><span style=\"color: #657B83\"> </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> cls;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    </span><span style=\"color: #268BD2\">this</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">classes</span><span style=\"color: #657B83\"> </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> classes;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  &#125;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  @</span><span style=\"color: #586E75; font-weight: bold\">Override</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  </span><span style=\"color: #586E75; font-weight: bold\">public</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">void</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">run</span><span style=\"color: #657B83\">() &#123;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    </span><span style=\"color: #93A1A1; font-style: italic\">// 类转换成类字段数组</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    val fields </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">Arrays</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">stream</span><span style=\"color: #657B83\">(</span><span style=\"color: #268BD2\">cls</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">getDeclaredFields</span><span style=\"color: #657B83\">())</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">      </span><span style=\"color: #93A1A1; font-style: italic\">// 过滤掉没有@Inject注解的字段</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">      .</span><span style=\"color: #268BD2\">filter</span><span style=\"color: #657B83\">(field </span><span style=\"color: #586E75; font-weight: bold\">-&gt;</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">field</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">isAnnotationPresent</span><span style=\"color: #657B83\">(</span><span style=\"color: #268BD2\">Inject</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">class</span><span style=\"color: #657B83\">))</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">      </span><span style=\"color: #93A1A1; font-style: italic\">// 转成 key -&gt; 类字段名 value -&gt; 字段类型的map格式 </span></span>\n<span class=\"line\"><span style=\"color: #657B83\">      .</span><span style=\"color: #268BD2\">collect</span><span style=\"color: #657B83\">((</span><span style=\"color: #586E75; font-weight: bold\">Supplier</span><span style=\"color: #859900\">&lt;</span><span style=\"color: #586E75; font-weight: bold\">HashMap</span><span style=\"color: #859900\">&lt;</span><span style=\"color: #657B83\">String, </span><span style=\"color: #586E75; font-weight: bold\">Class</span><span style=\"color: #859900\">&lt;?&gt;&gt;&gt;</span><span style=\"color: #657B83\">) HashMap</span><span style=\"color: #859900\">::new</span><span style=\"color: #657B83\">,</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">        (map, field) </span><span style=\"color: #586E75; font-weight: bold\">-&gt;</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">map</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">put</span><span style=\"color: #657B83\">(</span><span style=\"color: #268BD2\">field</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">getName</span><span style=\"color: #657B83\">(), </span><span style=\"color: #268BD2\">standard</span><span style=\"color: #657B83\">(field)), HashMap</span><span style=\"color: #859900\">::</span><span style=\"color: #657B83\">putAll);</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    </span><span style=\"color: #268BD2\">FIELD_INJECTS</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">putAll</span><span style=\"color: #657B83\">(fields);</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  &#125;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  </span><span style=\"color: #93A1A1; font-style: italic\">// 标准注入</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  </span><span style=\"color: #586E75; font-weight: bold\">private</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">Class</span><span style=\"color: #657B83\">&lt;</span><span style=\"color: #586E75; font-weight: bold\">?</span><span style=\"color: #657B83\">&gt; </span><span style=\"color: #268BD2\">standard</span><span style=\"color: #657B83\">(</span><span style=\"color: #586E75; font-weight: bold\">Field</span><span style=\"color: #657B83\"> field) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    val type </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">field</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">getType</span><span style=\"color: #657B83\">();</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    </span><span style=\"color: #859900\">if</span><span style=\"color: #657B83\"> (</span><span style=\"color: #859900\">!</span><span style=\"color: #268BD2\">type</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">isInterface</span><span style=\"color: #657B83\">()) </span><span style=\"color: #859900\">return</span><span style=\"color: #657B83\"> type;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    val name </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">field</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">getName</span><span style=\"color: #657B83\">();</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    </span><span style=\"color: #93A1A1; font-style: italic\">// 字段的实现列表</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    val impls </span><span style=\"color: #859900\">=</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">      </span><span style=\"color: #268BD2\">classes</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">stream</span><span style=\"color: #657B83\">().</span><span style=\"color: #268BD2\">filter</span><span style=\"color: #657B83\">(cls </span><span style=\"color: #586E75; font-weight: bold\">-&gt;</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">Trunk</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">hasMatchImpl</span><span style=\"color: #657B83\">(cls, type)).</span><span style=\"color: #268BD2\">collect</span><span style=\"color: #657B83\">(</span><span style=\"color: #268BD2\">Collectors</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">toList</span><span style=\"color: #657B83\">());</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    </span><span style=\"color: #93A1A1; font-style: italic\">// 空实现</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    </span><span style=\"color: #859900\">if</span><span style=\"color: #657B83\"> (</span><span style=\"color: #268BD2\">impls</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">isEmpty</span><span style=\"color: #657B83\">()) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">      val typeName </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">field</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">getDeclaringClass</span><span style=\"color: #657B83\">().</span><span style=\"color: #268BD2\">getName</span><span style=\"color: #657B83\">();</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">      </span><span style=\"color: #268BD2\">log</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">error</span><span style=\"color: #657B83\">(</span><span style=\"color: #268BD2\">Console</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">JSR330</span><span style=\"color: #657B83\">, typeName, name, </span><span style=\"color: #268BD2\">type</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">getName</span><span style=\"color: #657B83\">());</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">      </span><span style=\"color: #859900\">throw</span><span style=\"color: #657B83\"> </span><span style=\"color: #859900\">new</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">IllegalArgumentException</span><span style=\"color: #657B83\">();</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    </span><span style=\"color: #859900\">else</span><span style=\"color: #657B83\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">      val size </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">impls</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">size</span><span style=\"color: #657B83\">();</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">      </span><span style=\"color: #93A1A1; font-style: italic\">// 多实现</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">      </span><span style=\"color: #859900\">if</span><span style=\"color: #657B83\"> (</span><span style=\"color: #D33682\">1</span><span style=\"color: #657B83\"> </span><span style=\"color: #859900\">!=</span><span style=\"color: #657B83\"> size) </span><span style=\"color: #859900\">return</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">qualifier</span><span style=\"color: #657B83\">(field, impls);</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">        </span><span style=\"color: #93A1A1; font-style: italic\">// 只有一个实现</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">      </span><span style=\"color: #859900\">else</span><span style=\"color: #657B83\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">        val implCls </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">impls</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">get</span><span style=\"color: #657B83\">(</span><span style=\"color: #D33682\">0</span><span style=\"color: #657B83\">);</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">        </span><span style=\"color: #268BD2\">log</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">info</span><span style=\"color: #657B83\">(</span><span style=\"color: #268BD2\">Console</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">DI</span><span style=\"color: #657B83\">, cls, name, </span><span style=\"color: #268BD2\">implCls</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">getName</span><span style=\"color: #657B83\">(), </span><span style=\"color: #268BD2\">Inject</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">class</span><span style=\"color: #657B83\">);</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">        </span><span style=\"color: #859900\">return</span><span style=\"color: #657B83\"> implCls;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">      &#125;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  &#125;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  </span><span style=\"color: #93A1A1; font-style: italic\">// 多实现,通过value指定实例.</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  </span><span style=\"color: #586E75; font-weight: bold\">private</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">Class</span><span style=\"color: #657B83\">&lt;</span><span style=\"color: #586E75; font-weight: bold\">?</span><span style=\"color: #657B83\">&gt; </span><span style=\"color: #268BD2\">qualifier</span><span style=\"color: #657B83\">(</span><span style=\"color: #586E75; font-weight: bold\">Field</span><span style=\"color: #657B83\"> field, </span><span style=\"color: #586E75; font-weight: bold\">List</span><span style=\"color: #657B83\">&lt;</span><span style=\"color: #586E75; font-weight: bold\">Class</span><span style=\"color: #657B83\">&lt;</span><span style=\"color: #586E75; font-weight: bold\">?</span><span style=\"color: #657B83\">&gt;&gt; implClasses) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    val names </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">implClasses</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">stream</span><span style=\"color: #657B83\">().</span><span style=\"color: #268BD2\">map</span><span style=\"color: #657B83\">(Class</span><span style=\"color: #859900\">::</span><span style=\"color: #657B83\">getName).</span><span style=\"color: #268BD2\">collect</span><span style=\"color: #657B83\">(</span><span style=\"color: #268BD2\">Collectors</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">toList</span><span style=\"color: #657B83\">());</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    </span><span style=\"color: #268BD2\">log</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">info</span><span style=\"color: #657B83\">(</span><span style=\"color: #268BD2\">Console</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">SCANNED</span><span style=\"color: #657B83\">, </span><span style=\"color: #2AA198\">&quot;Instance&quot;</span><span style=\"color: #657B83\">, </span><span style=\"color: #268BD2\">String</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">join</span><span style=\"color: #657B83\">(</span><span style=\"color: #2AA198\">&quot;,&quot;</span><span style=\"color: #657B83\">, names));</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    val qualifier </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">field</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">getAnnotation</span><span style=\"color: #657B83\">(</span><span style=\"color: #268BD2\">Named</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">class</span><span style=\"color: #657B83\">).</span><span style=\"color: #268BD2\">value</span><span style=\"color: #657B83\">();</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    val cls </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">implClasses</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">stream</span><span style=\"color: #657B83\">()</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">      .</span><span style=\"color: #268BD2\">filter</span><span style=\"color: #657B83\">(item </span><span style=\"color: #586E75; font-weight: bold\">-&gt;</span><span style=\"color: #657B83\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">        val named </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">item</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">getAnnotation</span><span style=\"color: #657B83\">(</span><span style=\"color: #268BD2\">Named</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">class</span><span style=\"color: #657B83\">).</span><span style=\"color: #268BD2\">value</span><span style=\"color: #657B83\">();</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">        </span><span style=\"color: #859900\">return</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">qualifier</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">equals</span><span style=\"color: #657B83\">(named) </span><span style=\"color: #859900\">&amp;&amp;</span><span style=\"color: #657B83\"> </span><span style=\"color: #859900\">!</span><span style=\"color: #268BD2\">StringUtil</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">isNullOrEmpty</span><span style=\"color: #657B83\">(named);</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">      &#125;).</span><span style=\"color: #268BD2\">findAny</span><span style=\"color: #657B83\">();</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    </span><span style=\"color: #859900\">return</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">cls</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">get</span><span style=\"color: #657B83\">();</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  &#125;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">&#125;</span></span></code></pre></div><h3 id=\"本体-3\"><a href=\"#本体-3\" class=\"headerlink\" title=\"本体\"></a>本体</h3><p><strong>DiScanner.java</strong></p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki solarized-light\" style=\"background-color: #FDF6E3\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #859900\">package</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">org.btr.ygo.core.scan</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">lombok.extern.log4j.Log4j2</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">lombok.val</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">org.btr.ygo.core.constant.Console</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">javax.inject.Inject</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">java.util.Arrays</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">java.util.HashMap</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">java.util.Map</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">java.util.Set</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #859900\">import</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">java.util.stream.Collectors</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #93A1A1; font-style: italic\">/**</span></span>\n<span class=\"line\"><span style=\"color: #93A1A1; font-style: italic\"> * </span><span style=\"color: #859900; font-style: italic\">@author</span><span style=\"color: #93A1A1; font-style: italic\"> &lt;a href=&quot;mailto:1159930219@qq.com&quot;&gt;BornToRain&lt;/a&gt;</span></span>\n<span class=\"line\"><span style=\"color: #93A1A1; font-style: italic\"> */</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">@</span><span style=\"color: #586E75; font-weight: bold\">Log4j2</span></span>\n<span class=\"line\"><span style=\"color: #586E75; font-weight: bold\">public</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">final</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">class</span><span style=\"color: #657B83\"> </span><span style=\"color: #CB4B16\">DiScanner</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">implements</span><span style=\"color: #657B83\"> </span><span style=\"color: #6C71C4\">IScanner</span><span style=\"color: #657B83\">&lt;</span><span style=\"color: #586E75; font-weight: bold\">Map</span><span style=\"color: #657B83\">&lt;</span><span style=\"color: #586E75; font-weight: bold\">Class</span><span style=\"color: #657B83\">&lt;</span><span style=\"color: #586E75; font-weight: bold\">?</span><span style=\"color: #657B83\">&gt;, </span><span style=\"color: #586E75; font-weight: bold\">Map</span><span style=\"color: #657B83\">&lt;</span><span style=\"color: #586E75; font-weight: bold\">String</span><span style=\"color: #657B83\">, </span><span style=\"color: #586E75; font-weight: bold\">Class</span><span style=\"color: #657B83\">&lt;</span><span style=\"color: #586E75; font-weight: bold\">?</span><span style=\"color: #657B83\">&gt;&gt;&gt;&gt; &#123;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  @</span><span style=\"color: #586E75; font-weight: bold\">Override</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  </span><span style=\"color: #586E75; font-weight: bold\">public</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">Map</span><span style=\"color: #657B83\">&lt;</span><span style=\"color: #586E75; font-weight: bold\">Class</span><span style=\"color: #657B83\">&lt;</span><span style=\"color: #586E75; font-weight: bold\">?</span><span style=\"color: #657B83\">&gt;, </span><span style=\"color: #586E75; font-weight: bold\">Map</span><span style=\"color: #657B83\">&lt;</span><span style=\"color: #586E75; font-weight: bold\">String</span><span style=\"color: #657B83\">, </span><span style=\"color: #586E75; font-weight: bold\">Class</span><span style=\"color: #657B83\">&lt;</span><span style=\"color: #586E75; font-weight: bold\">?</span><span style=\"color: #657B83\">&gt;&gt;&gt; </span><span style=\"color: #268BD2\">scan</span><span style=\"color: #657B83\">(</span><span style=\"color: #586E75; font-weight: bold\">Set</span><span style=\"color: #657B83\">&lt;</span><span style=\"color: #586E75; font-weight: bold\">Class</span><span style=\"color: #657B83\">&lt;</span><span style=\"color: #586E75; font-weight: bold\">?</span><span style=\"color: #657B83\">&gt;&gt; classes) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    </span><span style=\"color: #93A1A1; font-style: italic\">// 所有包含@Inject注解字段的类</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    val xs </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">classes</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">stream</span><span style=\"color: #657B83\">().</span><span style=\"color: #268BD2\">filter</span><span style=\"color: #657B83\">(cls </span><span style=\"color: #586E75; font-weight: bold\">-&gt;</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">Arrays</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">stream</span><span style=\"color: #657B83\">(</span><span style=\"color: #268BD2\">cls</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">getDeclaredFields</span><span style=\"color: #657B83\">())</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">      .</span><span style=\"color: #268BD2\">anyMatch</span><span style=\"color: #657B83\">(field </span><span style=\"color: #586E75; font-weight: bold\">-&gt;</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">field</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">isAnnotationPresent</span><span style=\"color: #657B83\">(</span><span style=\"color: #268BD2\">Inject</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">class</span><span style=\"color: #657B83\">)))</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">      .</span><span style=\"color: #268BD2\">collect</span><span style=\"color: #657B83\">(</span><span style=\"color: #268BD2\">Collectors</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">toSet</span><span style=\"color: #657B83\">());</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    </span><span style=\"color: #93A1A1; font-style: italic\">// 一个类一个线程</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    val threads </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">xs</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">stream</span><span style=\"color: #657B83\">().</span><span style=\"color: #268BD2\">map</span><span style=\"color: #657B83\">(cls </span><span style=\"color: #586E75; font-weight: bold\">-&gt;</span><span style=\"color: #657B83\"> </span><span style=\"color: #859900\">new</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">DiThread</span><span style=\"color: #657B83\">(cls, classes))</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">      .</span><span style=\"color: #268BD2\">collect</span><span style=\"color: #657B83\">(</span><span style=\"color: #268BD2\">Collectors</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">toSet</span><span style=\"color: #657B83\">());</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    </span><span style=\"color: #93A1A1; font-style: italic\">// 线程启动</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    </span><span style=\"color: #268BD2\">threads</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">forEach</span><span style=\"color: #657B83\">(Thread</span><span style=\"color: #859900\">::</span><span style=\"color: #657B83\">start);</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    </span><span style=\"color: #93A1A1; font-style: italic\">// 最终返回数据结构 key -&gt; 类类型, value -&gt; (key -&gt; 字段名, value -&gt; 字段类型).</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    val ret </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #859900\">new</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">HashMap</span><span style=\"color: #657B83\">&lt;</span><span style=\"color: #586E75; font-weight: bold\">Class</span><span style=\"color: #657B83\">&lt;</span><span style=\"color: #586E75; font-weight: bold\">?</span><span style=\"color: #657B83\">&gt;, </span><span style=\"color: #586E75; font-weight: bold\">Map</span><span style=\"color: #657B83\">&lt;</span><span style=\"color: #586E75; font-weight: bold\">String</span><span style=\"color: #657B83\">, </span><span style=\"color: #586E75; font-weight: bold\">Class</span><span style=\"color: #657B83\">&lt;</span><span style=\"color: #586E75; font-weight: bold\">?</span><span style=\"color: #657B83\">&gt;&gt;&gt;();</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    </span><span style=\"color: #859900\">try</span><span style=\"color: #657B83\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">      </span><span style=\"color: #93A1A1; font-style: italic\">// 主线程等待子线程全部扫描完毕</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">      </span><span style=\"color: #859900\">for</span><span style=\"color: #657B83\"> (</span><span style=\"color: #586E75; font-weight: bold\">DiThread</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">thread</span><span style=\"color: #657B83\"> </span><span style=\"color: #859900\">:</span><span style=\"color: #657B83\"> threads) </span><span style=\"color: #268BD2\">thread</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">join</span><span style=\"color: #657B83\">();</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">      </span><span style=\"color: #859900\">for</span><span style=\"color: #657B83\"> (</span><span style=\"color: #586E75; font-weight: bold\">DiThread</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">thread</span><span style=\"color: #657B83\"> </span><span style=\"color: #859900\">:</span><span style=\"color: #657B83\"> threads) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">        val key </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">thread</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">cls</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">        val value </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">thread</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">FIELD_INJECTS</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">        </span><span style=\"color: #268BD2\">ret</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">put</span><span style=\"color: #657B83\">(key, value);</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">        </span><span style=\"color: #268BD2\">log</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">info</span><span style=\"color: #657B83\">(</span><span style=\"color: #268BD2\">Console</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">INJECT</span><span style=\"color: #657B83\">, </span><span style=\"color: #268BD2\">key</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">getName</span><span style=\"color: #657B83\">(), </span><span style=\"color: #268BD2\">value</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">size</span><span style=\"color: #657B83\">());</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">      &#125;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    &#125; </span><span style=\"color: #859900\">catch</span><span style=\"color: #657B83\"> (</span><span style=\"color: #586E75; font-weight: bold\">Exception</span><span style=\"color: #657B83\"> ex) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">      </span><span style=\"color: #268BD2\">ex</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">printStackTrace</span><span style=\"color: #657B83\">();</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    </span><span style=\"color: #859900\">return</span><span style=\"color: #657B83\"> ret;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  &#125;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">&#125;</span></span></code></pre></div><h3 id=\"测试-3\"><a href=\"#测试-3\" class=\"headerlink\" title=\"测试\"></a>测试</h3><p><strong>IScannerTest.java</strong>追加</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki solarized-light\" style=\"background-color: #FDF6E3\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #586E75; font-weight: bold\">public</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">class</span><span style=\"color: #657B83\"> </span><span style=\"color: #CB4B16\">IScannerTest</span><span style=\"color: #657B83\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  ...</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  </span><span style=\"color: #586E75; font-weight: bold\">public</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">interface</span><span style=\"color: #657B83\"> </span><span style=\"color: #CB4B16\">TestQualifier</span><span style=\"color: #657B83\"> &#123;&#125;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  @</span><span style=\"color: #586E75; font-weight: bold\">Named</span><span style=\"color: #657B83\">(</span><span style=\"color: #2AA198\">&quot;testQualifierA&quot;</span><span style=\"color: #657B83\">)</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  </span><span style=\"color: #586E75; font-weight: bold\">public</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">static</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">class</span><span style=\"color: #657B83\"> </span><span style=\"color: #CB4B16\">TestQualifierA</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">implements</span><span style=\"color: #657B83\"> </span><span style=\"color: #6C71C4\">TestQualifier</span><span style=\"color: #657B83\"> &#123;&#125;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  @</span><span style=\"color: #586E75; font-weight: bold\">Named</span><span style=\"color: #657B83\">(</span><span style=\"color: #2AA198\">&quot;testQualifierB&quot;</span><span style=\"color: #657B83\">)</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  </span><span style=\"color: #586E75; font-weight: bold\">public</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">static</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">class</span><span style=\"color: #657B83\"> </span><span style=\"color: #CB4B16\">TestQualifierB</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">implements</span><span style=\"color: #657B83\"> </span><span style=\"color: #6C71C4\">TestQualifier</span><span style=\"color: #657B83\"> &#123;&#125;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  </span><span style=\"color: #586E75; font-weight: bold\">public</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">static</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">class</span><span style=\"color: #657B83\"> </span><span style=\"color: #CB4B16\">TestDi</span><span style=\"color: #657B83\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    @</span><span style=\"color: #586E75; font-weight: bold\">Inject</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    </span><span style=\"color: #586E75; font-weight: bold\">private</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">TestEventBus</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">testEventBus</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    @</span><span style=\"color: #586E75; font-weight: bold\">Inject</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    @</span><span style=\"color: #586E75; font-weight: bold\">Named</span><span style=\"color: #657B83\">(</span><span style=\"color: #2AA198\">&quot;testQualifierB&quot;</span><span style=\"color: #657B83\">)</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    </span><span style=\"color: #586E75; font-weight: bold\">private</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">TestQualifier</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">testQualifier</span><span style=\"color: #657B83\">;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  &#125;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  @</span><span style=\"color: #586E75; font-weight: bold\">Test</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  </span><span style=\"color: #586E75; font-weight: bold\">public</span><span style=\"color: #657B83\"> </span><span style=\"color: #586E75; font-weight: bold\">void</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">testDi</span><span style=\"color: #657B83\">() &#123;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    val classes </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">Packages</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">scan</span><span style=\"color: #657B83\">();</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    val scanner </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> Trunk.</span><span style=\"color: #859900\">&lt;</span><span style=\"color: #657B83\">DiScanner</span><span style=\"color: #859900\">&gt;</span><span style=\"color: #268BD2\">singleton</span><span style=\"color: #657B83\">(</span><span style=\"color: #268BD2\">DiScanner</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">class</span><span style=\"color: #657B83\">);</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    val ret </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">scanner</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">scan</span><span style=\"color: #657B83\">(classes);</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    val data </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">ret</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">get</span><span style=\"color: #657B83\">(</span><span style=\"color: #268BD2\">TestDi</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">class</span><span style=\"color: #657B83\">);</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    val type1 </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">data</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">get</span><span style=\"color: #657B83\">(</span><span style=\"color: #2AA198\">&quot;testEventBus&quot;</span><span style=\"color: #657B83\">);</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    </span><span style=\"color: #268BD2\">Assert</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">assertEquals</span><span style=\"color: #657B83\">(type1, </span><span style=\"color: #268BD2\">TestEventBus</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">class</span><span style=\"color: #657B83\">);</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    val type2 </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\">data</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">get</span><span style=\"color: #657B83\">(</span><span style=\"color: #2AA198\">&quot;testQualifier&quot;</span><span style=\"color: #657B83\">);</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    </span><span style=\"color: #268BD2\">Assert</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">assertNotEquals</span><span style=\"color: #657B83\">(type2, </span><span style=\"color: #268BD2\">TestQualifierA</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">class</span><span style=\"color: #657B83\">);</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">    </span><span style=\"color: #268BD2\">Assert</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">assertEquals</span><span style=\"color: #657B83\">(type2, </span><span style=\"color: #268BD2\">TestQualifierB</span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\">class</span><span style=\"color: #657B83\">);</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">  &#125;</span></span>\n<span class=\"line\"><span style=\"color: #657B83\">&#125;</span></span></code></pre></div><p>测试结果<br><img src=\"/images/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%92%B8%E6%A1%86%E6%9E%B6/3/testret4.png\" alt=\"运行结果\"></p>\n<hr>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>这一章我们基于一个扫描基类实现了各个核心组件的解耦扫描,以后有新的组件只需要自行扩展实现<em>IScanner.java</em>即可.</p>\n<p>在往后几章我们肯定还会基于这个基类继续扩展功能实现.</p>\n","text":"上一章我们已经把每个包中的类都统一加载到一个Set中了,以后凡是需要用到类的场景我们都可以从Set集合中取出,但是光这样还不够好.往后所有操作都依赖于这一个集合...","permalink":"/post/从零开始撸框架(3)-类扫描器","photos":[],"count_time":{"symbolsCount":"17k","symbolsTime":"15 mins."},"categories":[{"name":"从零开始","slug":"从零开始","count":8,"path":"api/categories/从零开始.json"}],"tags":[{"name":"Vert.x","slug":"Vert-x","count":8,"path":"api/tags/Vert-x.json"},{"name":"Actor","slug":"Actor","count":8,"path":"api/tags/Actor.json"},{"name":"设计模式","slug":"设计模式","count":8,"path":"api/tags/设计模式.json"},{"name":"Java","slug":"Java","count":9,"path":"api/tags/Java.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%89%AB%E6%8F%8F%E5%9F%BA%E7%B1%BB\"><span class=\"toc-text\">扫描基类</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF%E7%BA%BF%E7%A8%8B-Eventloop-%E6%89%AB%E6%8F%8F%E5%99%A8\"><span class=\"toc-text\">事件循环线程(Eventloop)扫描器</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%BE%85%E5%8A%A9%E7%B1%BB\"><span class=\"toc-text\">辅助类</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9C%AC%E4%BD%93\"><span class=\"toc-text\">本体</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B5%8B%E8%AF%95\"><span class=\"toc-text\">测试</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%B5%8B%E8%AF%95%E7%BB%93%E6%9E%9C\"><span class=\"toc-text\">测试结果</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%B7%A5%E4%BD%9C%E7%BA%BF%E7%A8%8B-Worker-%E6%89%AB%E6%8F%8F%E5%99%A8\"><span class=\"toc-text\">工作线程(Worker)扫描器</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%BE%85%E5%8A%A9%E7%B1%BB-1\"><span class=\"toc-text\">辅助类</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9C%AC%E4%BD%93-1\"><span class=\"toc-text\">本体</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B5%8B%E8%AF%95-1\"><span class=\"toc-text\">测试</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9C%A8IScannerTest-java%E4%B8%AD%E8%BF%BD%E5%8A%A0%E4%B8%80%E4%BE%8B%E6%B5%8B%E8%AF%95-java-public-class-IScannerTest-Worker-public-static-class-TestWorker-Test-public-void-testWorker-val-classes-Packages-scan-val-scanner-Trunk-singleton-WorkerScanner-class-val-ret-scanner-scan-classes-Assert-assertThat-ret-CoreMatchers-hasItem-TestWorker-class-%E6%B5%8B%E8%AF%95%E7%BB%93%E6%9E%9C\"><span class=\"toc-text\">在IScannerTest.java中追加一例测试.java public class IScannerTest {   ...   @Worker   public static class TestWorker {   }   @Test   public void testWorker() {     val classes &#x3D; Packages.scan();     val scanner &#x3D; Trunk.&lt;WorkerScanner&gt;singleton(WorkerScanner.class);     val ret &#x3D; scanner.scan(classes);     Assert.assertThat(ret, CoreMatchers.hasItem(TestWorker.class));   } } 测试结果</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Vert-x%E6%B6%88%E6%81%AF%E6%89%AB%E6%8F%8F%E5%99%A8\"><span class=\"toc-text\">Vert.x消息扫描器</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%BE%85%E5%8A%A9%E7%B1%BB-2\"><span class=\"toc-text\">辅助类</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9C%AC%E4%BD%93-2\"><span class=\"toc-text\">本体</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B5%8B%E8%AF%95-2\"><span class=\"toc-text\">测试</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5-Dependency-Injection-%E6%89%AB%E6%8F%8F%E5%99%A8\"><span class=\"toc-text\">依赖注入(Dependency Injection)扫描器</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%BE%85%E5%8A%A9%E7%B1%BB-3\"><span class=\"toc-text\">辅助类</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9C%AC%E4%BD%93-3\"><span class=\"toc-text\">本体</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B5%8B%E8%AF%95-3\"><span class=\"toc-text\">测试</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">总结</span></a></li></ol>","author":{"name":"因雨而生","slug":"blog-author","avatar":"/images/avatar.jpg","link":"/","description":"一直没脱离低级趣味的Coder","socials":{"github":"https://github.com/BornToRain","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"从零开始撸框架(4)-配置读取器","uid":"45dcae5ccfe9e8f63cc7cbe584bb9d7a","slug":"从零开始撸框架(4)-配置读取器","date":"2021-05-01T22:43:37.000Z","updated":"2021-05-07T01:21:36.962Z","comments":true,"path":"api/articles/从零开始撸框架(4)-配置读取器.json","keywords":["Coder","Scalaer","Javaer"],"cover":"/images/vertxlogo.png","text":"到目前为止,框架已经支持了 工厂 、 Bean分组 、 依赖注入 ,这一章我们来实现框架配置的读取. 配置读取基类老样子,我们还是先定义一个读取基类,方便后续子...","permalink":"/post/从零开始撸框架(4)-配置读取器","photos":[],"count_time":{"symbolsCount":"7.9k","symbolsTime":"7 mins."},"categories":[{"name":"从零开始","slug":"从零开始","count":8,"path":"api/categories/从零开始.json"}],"tags":[{"name":"Vert.x","slug":"Vert-x","count":8,"path":"api/tags/Vert-x.json"},{"name":"Actor","slug":"Actor","count":8,"path":"api/tags/Actor.json"},{"name":"设计模式","slug":"设计模式","count":8,"path":"api/tags/设计模式.json"},{"name":"Java","slug":"Java","count":9,"path":"api/tags/Java.json"}],"author":{"name":"因雨而生","slug":"blog-author","avatar":"/images/avatar.jpg","link":"/","description":"一直没脱离低级趣味的Coder","socials":{"github":"https://github.com/BornToRain","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"从零开始撸框架(2)-项目龙骨","uid":"1f961444d2b8322d4f975faeb98fbea1","slug":"从零开始撸框架(2)-项目龙骨","date":"2021-04-29T02:03:09.000Z","updated":"2021-06-21T14:00:35.153Z","comments":true,"path":"api/articles/从零开始撸框架(2)-项目龙骨.json","keywords":["Coder","Scalaer","Javaer"],"cover":"/images/vertxlogo.png","text":"项目结构上文说到框架包含Ioc、Di、Orm、Cache等功能,其中只有前两者为核心功能.那么结构上可以采用分包结构开发,即分为核心、组件等功能包,如下. or...","permalink":"/post/从零开始撸框架(2)-项目龙骨","photos":[],"count_time":{"symbolsCount":"14k","symbolsTime":"13 mins."},"categories":[{"name":"从零开始","slug":"从零开始","count":8,"path":"api/categories/从零开始.json"}],"tags":[{"name":"Vert.x","slug":"Vert-x","count":8,"path":"api/tags/Vert-x.json"},{"name":"Actor","slug":"Actor","count":8,"path":"api/tags/Actor.json"},{"name":"设计模式","slug":"设计模式","count":8,"path":"api/tags/设计模式.json"},{"name":"Java","slug":"Java","count":9,"path":"api/tags/Java.json"}],"author":{"name":"因雨而生","slug":"blog-author","avatar":"/images/avatar.jpg","link":"/","description":"一直没脱离低级趣味的Coder","socials":{"github":"https://github.com/BornToRain","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}