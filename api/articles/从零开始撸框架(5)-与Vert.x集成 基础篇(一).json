{"title":"从零开始撸框架(5)-与Vert.x集成 基础篇(一)","uid":"6b0291adc1983f086f545c1304c40edc","slug":"从零开始撸框架(5)-与Vert.x集成 基础篇(一)","date":"2021-05-07T00:27:12.000Z","updated":"2021-06-08T08:04:54.998Z","comments":true,"path":"api/articles/从零开始撸框架(5)-与Vert.x集成 基础篇(一).json","keywords":["Coder","Scalaer","Javaer"],"cover":"/images/vertxlogo.png","content":"<p>前两章我们分别讲完了类、配置,让框架有了骨架.接下来几章我们要实现类、配置与Vert.x集成,让框架跑在Vert.x中.</p>\n<p>由于接下来会设计到对外提供web服务了,篇幅会比较长.这里我决定分篇,第一篇先把大体的讲完,剩下几篇再讲web方面的细节.</p>\n<h2 id=\"Vert-x原始使用方式\"><a href=\"#Vert-x原始使用方式\" class=\"headerlink\" title=\"Vert.x原始使用方式\"></a>Vert.x原始使用方式</h2><p>样例来自于<a href=\"https://vertx.io/\">Vert.x官网</a></p>\n<h3 id=\"编写Verticle\"><a href=\"#编写Verticle\" class=\"headerlink\" title=\"编写Verticle\"></a>编写Verticle</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> io.vertx.core.AbstractVerticle;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Server</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">AbstractVerticle</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">start</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    vertx.createHttpServer().requestHandler(req -&gt; &#123;</span><br><span class=\"line\">      req.response()</span><br><span class=\"line\">        .putHeader(<span class=\"string\">&quot;content-type&quot;</span>, <span class=\"string\">&quot;text/plain&quot;</span>)</span><br><span class=\"line\">        .end(<span class=\"string\">&quot;Hello from Vert.x!&quot;</span>);</span><br><span class=\"line\">    &#125;).listen(<span class=\"number\">8080</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>这里贴出来方便参考,下面开始与Vert.x的集成.</p>\n<hr>\n<h2 id=\"Vert-x集成基类\"><a href=\"#Vert-x集成基类\" class=\"headerlink\" title=\"Vert.x集成基类\"></a>Vert.x集成基类</h2><h3 id=\"辅助类\"><a href=\"#辅助类\" class=\"headerlink\" title=\"辅助类\"></a>辅助类</h3><h4 id=\"工具\"><a href=\"#工具\" class=\"headerlink\" title=\"工具\"></a>工具</h4><p>集成中,不管是 <em>Eventloop</em> 还是 <em>Worker</em> 都会用到一些重复的方法,只是部分参数不同,我们把它做成工具类.<br><strong>Verticles.java</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> org.btr.ygo.core.kit;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> io.vertx.core.DeploymentOptions;</span><br><span class=\"line\"><span class=\"keyword\">import</span> io.vertx.core.Vertx;</span><br><span class=\"line\"><span class=\"keyword\">import</span> io.vertx.core.eventbus.DeliveryOptions;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.extern.log4j.Log4j2;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.val;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.core.constant.Console;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.core.constant.Const;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.HashMap;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Map;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Objects;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Vert.x Vertcile部署</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> &lt;a href=&quot;mailto:1159930219@qq.com&quot;&gt;BornToRain&lt;/a&gt;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Log4j2</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Verticles</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// value - verticle id</span></span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> Map&lt;Class&lt;?&gt;, String&gt; VERTICLES = <span class=\"keyword\">new</span> <span class=\"title class_\">HashMap</span>&lt;&gt;();</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> String <span class=\"title function_\">flag</span><span class=\"params\">(<span class=\"type\">boolean</span> isWorker)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> isWorker ? Const.WORKER : Const.EVENTLOOP;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">deploy</span><span class=\"params\">(Vertx vertx, DeploymentOptions options, Class&lt;?&gt; cls)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">val</span> <span class=\"variable\">name</span> <span class=\"operator\">=</span> cls.getName();</span><br><span class=\"line\">    <span class=\"type\">val</span> <span class=\"variable\">flag</span> <span class=\"operator\">=</span> flag(options.isWorker());</span><br><span class=\"line\">    vertx.deployVerticle(cls.getName(), options, ar -&gt; &#123;</span><br><span class=\"line\">      <span class=\"type\">val</span> <span class=\"variable\">id</span> <span class=\"operator\">=</span> ar.result();</span><br><span class=\"line\">      <span class=\"type\">val</span> <span class=\"variable\">instances</span> <span class=\"operator\">=</span> options.getInstances();</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (ar.succeeded()) &#123;</span><br><span class=\"line\">        log.info(Console.DEPLOYED_S, flag, name, instances, id);</span><br><span class=\"line\">        VERTICLES.put(cls, id);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">val</span> <span class=\"variable\">cause</span> <span class=\"operator\">=</span> ar.cause();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (Objects.nonNull(cause)) cause.printStackTrace();</span><br><span class=\"line\">        <span class=\"type\">val</span> <span class=\"variable\">msg</span> <span class=\"operator\">=</span> Objects.isNull(cause) ? <span class=\"literal\">null</span> : cause.getMessage();</span><br><span class=\"line\">        log.warn(Console.DEPLOYED_F, flag, name, id, instances, msg);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">undeploy</span><span class=\"params\">(Vertx vertx, Class&lt;?&gt; cls, String flag)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">val</span> <span class=\"variable\">id</span> <span class=\"operator\">=</span> VERTICLES.get(cls);</span><br><span class=\"line\">    <span class=\"type\">val</span> <span class=\"variable\">name</span> <span class=\"operator\">=</span> cls.getName();</span><br><span class=\"line\">    vertx.undeploy(id, ar -&gt; &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (ar.succeeded()) log.info(Console.UNDEPLOYED_S, flag, name, id);</span><br><span class=\"line\">      <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">val</span> <span class=\"variable\">cause</span> <span class=\"operator\">=</span> ar.cause();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (Objects.nonNull(cause)) cause.printStackTrace();</span><br><span class=\"line\">        <span class=\"type\">val</span> <span class=\"variable\">msg</span> <span class=\"operator\">=</span> Objects.isNull(cause) ? <span class=\"literal\">null</span> : cause.getMessage();</span><br><span class=\"line\">        log.warn(Console.UNDEPLOYED_F, flag, name, id, msg);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> DeliveryOptions <span class=\"title function_\">delivery</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">DeliveryOptions</span>();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"类、配置\"><a href=\"#类、配置\" class=\"headerlink\" title=\"类、配置\"></a>类、配置</h4><p>当然也会用到我们之前加载好的类、配置.<br><strong>Trunk.java</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Trunk</span> &#123;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">  <span class=\"comment\">// 所有@Eventloop类</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> Set&lt;Class&lt;?&gt;&gt; EVENTLOOPS = <span class=\"keyword\">new</span> <span class=\"title class_\">HashSet</span>&lt;&gt;();</span><br><span class=\"line\">  <span class=\"comment\">// 所有@Worker类</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> Set&lt;Class&lt;?&gt;&gt; WORKERS = <span class=\"keyword\">new</span> <span class=\"title class_\">HashSet</span>&lt;&gt;();</span><br><span class=\"line\">  <span class=\"comment\">// 所有Vert.x EventBus上的对象</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> Set&lt;Receipt&gt; RECEIPTS = <span class=\"keyword\">new</span> <span class=\"title class_\">HashSet</span>&lt;&gt;();</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>Deck.java</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Deck</span> &#123;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">  <span class=\"comment\">// 所有http服务配置</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> Map&lt;Integer, Server&gt; HTTP_SERVERS = <span class=\"keyword\">new</span> <span class=\"title class_\">HashMap</span>&lt;&gt;();</span><br><span class=\"line\">  <span class=\"comment\">// 所有tcp服务配置</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> Map&lt;Integer, Server&gt; NET_SERVERS = <span class=\"keyword\">new</span> <span class=\"title class_\">HashMap</span>&lt;&gt;();</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>Reflect.java</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Reflect</span> &#123;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> Map&lt;Class&lt;?&gt;, MethodAccess&gt; METHODS = <span class=\"keyword\">new</span> <span class=\"title class_\">HashMap</span>&lt;&gt;();</span><br><span class=\"line\">  <span class=\"comment\">// 反射执行对应的方法</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> &lt;T&gt; T <span class=\"title function_\">invokeMethod</span><span class=\"params\">(Object instance, String name, Object... args)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> Fn.ensureRun(() -&gt; &#123;</span><br><span class=\"line\">      <span class=\"type\">val</span> <span class=\"variable\">instanceCls</span> <span class=\"operator\">=</span> instance.getClass();</span><br><span class=\"line\">      <span class=\"type\">val</span> <span class=\"variable\">access</span> <span class=\"operator\">=</span> Fn.pool(METHODS, instanceCls, () -&gt; MethodAccess.get(instanceCls));</span><br><span class=\"line\">      <span class=\"keyword\">return</span> (T) access.invoke(instance, name, args);</span><br><span class=\"line\">    &#125;, instance, name);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"本体\"><a href=\"#本体\" class=\"headerlink\" title=\"本体\"></a>本体</h3><p>IActor是框架与Vert.x的连接桥梁,子类继承该类就可以获得Vert.x框架中的Vert.x对象.</p>\n<p><strong>IActor.java</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> org.btr.ygo.core.actor;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> io.vertx.core.Vertx;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> &lt;a href=&quot;mailto:1159930219@qq.com&quot;&gt;BornToRain&lt;/a&gt;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">IActor</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">void</span> <span class=\"title function_\">integration</span><span class=\"params\">(Vertx vertx)</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>Vert.x中最小工作单位Verticle为一个类,它的配置参数<em>io.vertx.core.DeploymentOptions</em>就是根据该类获取的,这里我们可以得出一个Verticle配置参数提取基类.</p>\n<p><strong>IExtractor.java</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> org.btr.ygo.core.actor;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> io.vertx.core.DeploymentOptions;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 根据类名获取相应的配置</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> &lt;a href=&quot;mailto:1159930219@qq.com&quot;&gt;BornToRain&lt;/a&gt;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">IExtractor</span> &#123;</span><br><span class=\"line\">  DeploymentOptions <span class=\"title function_\">extract</span><span class=\"params\">(Class&lt;?&gt; cls)</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>Vert.x通信是通过eventbus交互的,这里我们也抽象出一个基类,后续可以实现异步(Future)、同步(Sync)、响应式(Rx)应答,当前我们仅实现Future.</p>\n<p><strong>IReplier.java</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> org.btr.ygo.core.actor;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> io.vertx.core.Future;</span><br><span class=\"line\"><span class=\"keyword\">import</span> io.vertx.core.eventbus.Message;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.core.kit.Trunk;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Method;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.HashMap;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Map;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> &lt;a href=&quot;mailto:1159930219@qq.com&quot;&gt;BornToRain&lt;/a&gt;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">IReplier</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 定义一个map,用于表驱动选取对应的应答模式,默认是Future.</span></span><br><span class=\"line\">  Map&lt;Class&lt;?&gt;, IReplier&gt; MAP = <span class=\"keyword\">new</span> <span class=\"title class_\">HashMap</span>&lt;&gt;() &#123;&#123;</span><br><span class=\"line\">    put(Future.class, Trunk.singleton(FutureReplier.class));</span><br><span class=\"line\">  &#125;&#125;;</span><br><span class=\"line\">  <span class=\"keyword\">static</span> IReplier <span class=\"title function_\">get</span><span class=\"params\">(Class&lt;?&gt; key)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> MAP.getOrDefault(key, Trunk.singleton(FutureReplier.class));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">void</span> <span class=\"title function_\">reply</span><span class=\"params\">(Object proxy, Method method, Message&lt;Object&gt; message)</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>FutureReplier.java</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> org.btr.ygo.core.actor;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> io.vertx.core.Future;</span><br><span class=\"line\"><span class=\"keyword\">import</span> io.vertx.core.eventbus.Message;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.extern.log4j.Log4j2;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.val;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.core.constant.Console;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.core.kit.Reflect;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.core.kit.Verticles;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Method;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> &lt;a href=&quot;mailto:1159930219@qq.com&quot;&gt;BornToRain&lt;/a&gt;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Log4j2</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"keyword\">class</span> <span class=\"title class_\">FutureReplier</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">IReplier</span> &#123;</span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">reply</span><span class=\"params\">(Object proxy, Method method, Message&lt;Object&gt; message)</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 因为是Future响应,返回值的形式是Future&lt;?&gt;,光靠method.getReturnType()是拿不到具体泛型的.</span></span><br><span class=\"line\">    <span class=\"type\">val</span> <span class=\"variable\">retType</span> <span class=\"operator\">=</span> method.getGenericReturnType();</span><br><span class=\"line\">    log.info(Console.REPLY, getClass(), retType, <span class=\"literal\">false</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 反射执行方法</span></span><br><span class=\"line\">    Reflect.&lt;Future&lt;?&gt;&gt;invokeMethod(proxy, method.getName(), message)</span><br><span class=\"line\">      <span class=\"comment\">// 执行完成,开始应答.</span></span><br><span class=\"line\">      .onComplete(ar -&gt; message.reply(ar.result(), Verticles.delivery()));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"Eventloop集成\"><a href=\"#Eventloop集成\" class=\"headerlink\" title=\"Eventloop集成\"></a>Eventloop集成</h2><h3 id=\"本体-1\"><a href=\"#本体-1\" class=\"headerlink\" title=\"本体\"></a>本体</h3><p><strong>EventloopExtractor.java</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> org.btr.ygo.core.actor;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> io.vertx.core.DeploymentOptions;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.extern.log4j.Log4j2;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.val;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.core.annotations.Eventloop;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.core.constant.Console;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.core.constant.Const;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.core.kit.Fn;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.HashMap;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Map;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Eventloop类的Verticle参数提取</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> &lt;a href=&quot;mailto:1159930219@qq.com&quot;&gt;BornToRain&lt;/a&gt;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Log4j2</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"keyword\">class</span> <span class=\"title class_\">EventloopExtractor</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">IExtractor</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> Map&lt;Class&lt;?&gt;, DeploymentOptions&gt; OPTIONS = <span class=\"keyword\">new</span> <span class=\"title class_\">HashMap</span>&lt;&gt;();</span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> DeploymentOptions <span class=\"title function_\">extract</span><span class=\"params\">(Class&lt;?&gt; cls)</span> &#123;</span><br><span class=\"line\">    log.info(Console.DEPLOY, Const.EVENTLOOP, cls.getName());</span><br><span class=\"line\">    <span class=\"keyword\">return</span> Fn.pool(OPTIONS, cls, () -&gt; extractValue(cls));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> DeploymentOptions <span class=\"title function_\">extractValue</span><span class=\"params\">(Class&lt;?&gt; cls)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">val</span> <span class=\"variable\">anno</span> <span class=\"operator\">=</span> cls.getAnnotation(Eventloop.class);</span><br><span class=\"line\">    <span class=\"type\">val</span> <span class=\"variable\">options</span> <span class=\"operator\">=</span></span><br><span class=\"line\">      <span class=\"keyword\">new</span> <span class=\"title class_\">DeploymentOptions</span>().setHa(anno.ha()).setInstances(anno.instances()).setWorker(<span class=\"literal\">false</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!OPTIONS.isEmpty()) &#123;</span><br><span class=\"line\">      <span class=\"type\">val</span> <span class=\"variable\">latest</span> <span class=\"operator\">=</span> OPTIONS.getOrDefault(cls, <span class=\"keyword\">new</span> <span class=\"title class_\">DeploymentOptions</span>());</span><br><span class=\"line\">      <span class=\"type\">val</span> <span class=\"variable\">oldest</span> <span class=\"operator\">=</span> options.toJson();</span><br><span class=\"line\">      oldest.mergeIn(latest.toJson(), <span class=\"literal\">true</span>);</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">DeploymentOptions</span>(oldest);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    log.info(Console.DEPLOYED, Const.EVENTLOOP, options.getInstances(), options.isHa(),</span><br><span class=\"line\">      options.toJson());</span><br><span class=\"line\">    <span class=\"keyword\">return</span> options;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>EventloopActor.java</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> org.btr.ygo.core.actor;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> io.vertx.core.Vertx;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.extern.log4j.Log4j2;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.val;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.core.constant.Const;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.core.constant.EventloopType;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.core.kit.Trunk;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.core.kit.Verticles;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.HashMap;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Map;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * eventloop集合与Vert.x集成</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> &lt;a href=&quot;mailto:1159930219@qq.com&quot;&gt;BornToRain&lt;/a&gt;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Log4j2</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"keyword\">class</span> <span class=\"title class_\">EventloopActor</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">IActor</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 这里定义一个集合,因为eventloop目前总共有三类, http、tcp、sock.</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> Map&lt;EventloopType, Class&lt;?&gt;&gt; EVENTLOOPS = <span class=\"keyword\">new</span> <span class=\"title class_\">HashMap</span>&lt;&gt;();</span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">integration</span><span class=\"params\">(Vertx vertx)</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 配置提取器</span></span><br><span class=\"line\">    <span class=\"type\">val</span> <span class=\"variable\">extractor</span> <span class=\"operator\">=</span> Trunk.&lt;EventloopExtractor&gt;singleton(EventloopExtractor.class);</span><br><span class=\"line\">    <span class=\"comment\">// 循环作为Verticle部署到Vert.x中</span></span><br><span class=\"line\">    EVENTLOOPS.forEach((type, cls) -&gt; Verticles.deploy(vertx, extractor.extract(cls), cls));</span><br><span class=\"line\">    <span class=\"comment\">// 钩子,优雅从Vert.x中卸载对应的Verticle.</span></span><br><span class=\"line\">    Runtime.getRuntime().addShutdownHook(<span class=\"keyword\">new</span> <span class=\"title class_\">Thread</span>(</span><br><span class=\"line\">      () -&gt; EVENTLOOPS.forEach((type, cls) -&gt; Verticles.undeploy(vertx, cls, Const.EVENTLOOP))));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><em>Eventloop</em>类型分为<em>http</em>、<em>tcp</em>、<em>sock</em>分类,这里我们实现一个<em>http</em>.</p>\n<h3 id=\"http实现\"><a href=\"#http实现\" class=\"headerlink\" title=\"http实现\"></a>http实现</h3><p>http我们只实现任务调度部分.</p>\n<p>http非<em>vertx-core</em>内容,这里我们新建一个<em>web</em>模块,接下来web方面内容都在该模块下写.</p>\n<p><strong>build.gradle(web模块下)</strong></p>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">dependencies</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 依赖核心组件</span></span><br><span class=\"line\">  <span class=\"keyword\">compile</span> <span class=\"keyword\">project</span>(<span class=\"string\">&quot;:core&quot;</span>)</span><br><span class=\"line\">  <span class=\"comment\">// 追加vertx-web</span></span><br><span class=\"line\">  <span class=\"keyword\">compile</span> <span class=\"string\">&quot;io.vertx:vertx-web:$vertxVersion&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"http配置\"><a href=\"#http配置\" class=\"headerlink\" title=\"http配置\"></a>http配置</h4><p>新建两个Java文件,一个是配置对象,一个是继承自前两章的<em>IConfig</em>接口来实现配置读取.</p>\n<h5 id=\"配置对象\"><a href=\"#配置对象\" class=\"headerlink\" title=\"配置对象\"></a>配置对象</h5><p><strong>Server.java</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> org.btr.ygo.web.config;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> io.vertx.core.json.JsonObject;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.AccessLevel;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.Data;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.experimental.Accessors;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.experimental.FieldDefaults;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> &lt;a href=&quot;mailto:1159930219@qq.com&quot;&gt;BornToRain&lt;/a&gt;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"meta\">@Accessors(chain = true)</span></span><br><span class=\"line\"><span class=\"meta\">@FieldDefaults(level = AccessLevel.PRIVATE)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Server</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// HttpServerOptions NetServerOptions</span></span><br><span class=\"line\">  JsonObject options;</span><br><span class=\"line\">  String type;</span><br><span class=\"line\">  String name;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"配置读取\"><a href=\"#配置读取\" class=\"headerlink\" title=\"配置读取\"></a>配置读取</h5><p><strong>ServerConfig.java</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> org.btr.ygo.web.config;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> io.vertx.core.json.JsonArray;</span><br><span class=\"line\"><span class=\"keyword\">import</span> io.vertx.core.json.JsonObject;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.extern.log4j.Log4j2;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.val;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.core.config.IConfig;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.core.config.YgoConfig;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.core.constant.Const;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.core.kit.Trunk;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.HashMap;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Map;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 从配置文件中读取Web服务配置</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> &lt;a href=&quot;mailto:1159930219@qq.com&quot;&gt;BornToRain&lt;/a&gt;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Log4j2</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ServerConfig</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">IConfig</span>&lt;Map&lt;Integer, Server&gt;&gt; &#123;</span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> Map&lt;Integer, Server&gt; <span class=\"title function_\">read</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">val</span> <span class=\"variable\">config</span> <span class=\"operator\">=</span> Trunk.&lt;YgoConfig&gt;singleton(YgoConfig.class).read();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> read(config.getJsonObject(Const.VERTX).getJsonArray(Const.SERVER));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// 根据端口分组</span></span><br><span class=\"line\">  <span class=\"keyword\">private</span> Map&lt;Integer, Server&gt; <span class=\"title function_\">read</span><span class=\"params\">(JsonArray xs)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">val</span> <span class=\"variable\">map</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">HashMap</span>&lt;Integer, Server&gt;();</span><br><span class=\"line\">    xs.forEach(d -&gt; &#123;</span><br><span class=\"line\">      <span class=\"type\">val</span> <span class=\"variable\">json</span> <span class=\"operator\">=</span> JsonObject.mapFrom(d);</span><br><span class=\"line\">      <span class=\"type\">val</span> <span class=\"variable\">options</span> <span class=\"operator\">=</span> json.getJsonObject(Const.OPTIONS);</span><br><span class=\"line\">      <span class=\"type\">val</span> <span class=\"variable\">port</span> <span class=\"operator\">=</span> options.getInteger(Const.PORT, <span class=\"number\">8080</span>);</span><br><span class=\"line\">      <span class=\"type\">val</span> <span class=\"variable\">value</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Server</span>().setName(json.getString(<span class=\"string\">&quot;name&quot;</span>)).setType(json.getString(<span class=\"string\">&quot;type&quot;</span>))</span><br><span class=\"line\">        .setOptions(options);</span><br><span class=\"line\">      map.put(port, value);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> map;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"配置示例\"><a href=\"#配置示例\" class=\"headerlink\" title=\"配置示例\"></a>配置示例</h5><p><strong>application.yaml</strong></p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#### 配置示例</span></span><br><span class=\"line\"><span class=\"attr\">ygo:</span></span><br><span class=\"line\">  <span class=\"attr\">profile:</span> <span class=\"string\">default</span></span><br><span class=\"line\">  <span class=\"attr\">vertx:</span></span><br><span class=\"line\">    <span class=\"attr\">name:</span> <span class=\"string\">vertx-ygo</span></span><br><span class=\"line\">    <span class=\"attr\">options:</span></span><br><span class=\"line\">      <span class=\"attr\">haEnabled:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">      <span class=\"attr\">preferNativeTransport:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"attr\">server:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">default-port</span></span><br><span class=\"line\">        <span class=\"attr\">type:</span> <span class=\"string\">http</span></span><br><span class=\"line\">        <span class=\"attr\">options:</span></span><br><span class=\"line\">          <span class=\"attr\">host:</span> <span class=\"number\">0.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span></span><br><span class=\"line\">          <span class=\"attr\">port:</span> <span class=\"number\">8080</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"http本体\"><a href=\"#http本体\" class=\"headerlink\" title=\"http本体\"></a>http本体</h4><p><strong>EventloopHttpActor.java</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> org.btr.ygo.web.actor;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> io.vertx.core.AbstractVerticle;</span><br><span class=\"line\"><span class=\"keyword\">import</span> io.vertx.core.http.HttpServerOptions;</span><br><span class=\"line\"><span class=\"keyword\">import</span> io.vertx.ext.web.Router;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.extern.log4j.Log4j2;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.val;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.core.annotations.Eventloop;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.core.constant.Const;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.web.config.Server;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.web.constant.Console;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.web.kit.Deck;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.web.kit.Network;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * eventloop的http实现</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> &lt;a href=&quot;mailto:1159930219@qq.com&quot;&gt;BornToRain&lt;/a&gt;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Log4j2</span></span><br><span class=\"line\"><span class=\"meta\">@Eventloop</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"keyword\">class</span> <span class=\"title class_\">EventloopHttpActor</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">AbstractVerticle</span> &#123;</span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">start</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">    <span class=\"comment\">// http服务集合</span></span><br><span class=\"line\">    Deck.HTTP_SERVERS.forEach((port, config) -&gt; &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 获取路由</span></span><br><span class=\"line\">      <span class=\"type\">val</span> <span class=\"variable\">router</span> <span class=\"operator\">=</span> Router.router(vertx);</span><br><span class=\"line\">      server(router, port, config);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// 发布http服务</span></span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">server</span><span class=\"params\">(Router router, Integer port, Server config)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">val</span> <span class=\"variable\">options</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">HttpServerOptions</span>(config.getOptions());</span><br><span class=\"line\">    vertx.createHttpServer(options).requestHandler(router).listen();</span><br><span class=\"line\">    <span class=\"comment\">// 发布api地址</span></span><br><span class=\"line\">    <span class=\"type\">val</span> <span class=\"variable\">path</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;http://&quot;</span> + Network.getIPv4() + Const.COLON + port + Const.SLASH;</span><br><span class=\"line\">    log.info(Console.SERVER, getClass().getSimpleName(), Const.HTTP, path);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"Worker集成\"><a href=\"#Worker集成\" class=\"headerlink\" title=\"Worker集成\"></a>Worker集成</h2><h3 id=\"本体-2\"><a href=\"#本体-2\" class=\"headerlink\" title=\"本体\"></a>本体</h3><p>这一块同<em>Eventloop</em>部分,不多赘述.</p>\n<p><strong>WorkerExtractor.java</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> org.btr.ygo.core.actor;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> io.vertx.core.DeploymentOptions;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.extern.log4j.Log4j2;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.val;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.core.annotations.Worker;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.core.constant.Console;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.core.constant.Const;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.core.kit.Fn;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.HashMap;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Map;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> &lt;a href=&quot;mailto:1159930219@qq.com&quot;&gt;BornToRain&lt;/a&gt;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Log4j2</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"keyword\">class</span> <span class=\"title class_\">WorkerExtractor</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">IExtractor</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> Map&lt;Class&lt;?&gt;, DeploymentOptions&gt; OPTIONS = <span class=\"keyword\">new</span> <span class=\"title class_\">HashMap</span>&lt;&gt;();</span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> DeploymentOptions <span class=\"title function_\">extract</span><span class=\"params\">(Class&lt;?&gt; cls)</span> &#123;</span><br><span class=\"line\">    log.info(Console.DEPLOY, Const.WORKER, cls.getName());</span><br><span class=\"line\">    <span class=\"keyword\">return</span> Fn.pool(OPTIONS, cls, () -&gt; extractValue(cls));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> DeploymentOptions <span class=\"title function_\">extractValue</span><span class=\"params\">(Class&lt;?&gt; cls)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">val</span> <span class=\"variable\">anno</span> <span class=\"operator\">=</span> cls.getAnnotation(Worker.class);</span><br><span class=\"line\">    <span class=\"type\">val</span> <span class=\"variable\">options</span> <span class=\"operator\">=</span></span><br><span class=\"line\">      <span class=\"keyword\">new</span> <span class=\"title class_\">DeploymentOptions</span>().setHa(anno.ha()).setInstances(anno.instances()).setWorker(<span class=\"literal\">true</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!OPTIONS.isEmpty()) &#123;</span><br><span class=\"line\">      <span class=\"type\">val</span> <span class=\"variable\">latest</span> <span class=\"operator\">=</span> OPTIONS.getOrDefault(cls, <span class=\"keyword\">new</span> <span class=\"title class_\">DeploymentOptions</span>());</span><br><span class=\"line\">      <span class=\"type\">val</span> <span class=\"variable\">oldest</span> <span class=\"operator\">=</span> options.toJson();</span><br><span class=\"line\">      oldest.mergeIn(latest.toJson(), <span class=\"literal\">true</span>);</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">DeploymentOptions</span>(oldest);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    log.info(Console.DEPLOYED, Const.WORKER, options.getInstances(), options.isHa(), options.toJson());</span><br><span class=\"line\">    <span class=\"keyword\">return</span> options;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>WorkerActor.java</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> org.btr.ygo.core.actor;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> io.vertx.core.Vertx;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.extern.log4j.Log4j2;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.val;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.core.constant.Const;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.core.kit.Trunk;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.core.kit.Verticles;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> &lt;a href=&quot;mailto:1159930219@qq.com&quot;&gt;BornToRain&lt;/a&gt;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Log4j2</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"keyword\">class</span> <span class=\"title class_\">WorkerActor</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">IActor</span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">integration</span><span class=\"params\">(Vertx vertx)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">val</span> <span class=\"variable\">extractor</span> <span class=\"operator\">=</span> Trunk.&lt;WorkerExtractor&gt;singleton(WorkerExtractor.class);</span><br><span class=\"line\">    Trunk.WORKERS.forEach(cls -&gt; Verticles.deploy(vertx, extractor.extract(cls), cls));</span><br><span class=\"line\">    Runtime.getRuntime().addShutdownHook(</span><br><span class=\"line\">      <span class=\"keyword\">new</span> <span class=\"title class_\">Thread</span>(() -&gt; Trunk.WORKERS.forEach(cls -&gt; Verticles.undeploy(vertx, cls, Const.WORKER))));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"http实现-1\"><a href=\"#http实现-1\" class=\"headerlink\" title=\"http实现\"></a>http实现</h3><p>http的请求调度<em>eventloop</em>已经实现,这里我们只需要实现http的请求处理.</p>\n<h4 id=\"http本体-1\"><a href=\"#http本体-1\" class=\"headerlink\" title=\"http本体\"></a>http本体</h4><p><strong>WorkerHttpActor.java</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> org.btr.ygo.web.actor;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> io.vertx.core.AbstractVerticle;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.extern.log4j.Log4j2;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.val;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.core.actor.IReplier;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.core.annotations.Worker;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.core.kit.Trunk;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> &lt;a href=&quot;mailto:1159930219@qq.com&quot;&gt;BornToRain&lt;/a&gt;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Log4j2</span></span><br><span class=\"line\"><span class=\"meta\">@Worker</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"keyword\">class</span> <span class=\"title class_\">WorkerHttpActor</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">AbstractVerticle</span> &#123;</span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">start</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 所有的Vert.x消息</span></span><br><span class=\"line\">    Trunk.RECEIPTS.forEach(data -&gt; &#123;</span><br><span class=\"line\">      <span class=\"type\">val</span> <span class=\"variable\">method</span> <span class=\"operator\">=</span> data.getMethod();</span><br><span class=\"line\">      <span class=\"comment\">// 根据返回值类型,Future Object决定应答模式.</span></span><br><span class=\"line\">      <span class=\"type\">val</span> <span class=\"variable\">replier</span> <span class=\"operator\">=</span> IReplier.get(method.getReturnType());</span><br><span class=\"line\">      <span class=\"comment\">// Vert.x EventBus上根据地址开始消费消息并响应.</span></span><br><span class=\"line\">      vertx.eventBus().consumer(data.getAddr(), msg -&gt; replier.reply(data.getProxy(), method, msg));</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>这一章我们大体上实现了<em>Eventloop</em>、<em>Worker</em>类、配置与Vert.x的集成,让这些玩意转成Vert.x能看懂的<em>Verticle</em>.</p>\n","text":"前两章我们分别讲完了类、配置,让框架有了骨架.接下来几章我们要实现类、配置与Vert.x集成,让框架跑在Vert.x中. 由于接下来会设计到对外提供web服务了...","permalink":"/post/从零开始撸框架(5)-与Vert.x集成 基础篇(一)","photos":[],"count_time":{"symbolsCount":"16k","symbolsTime":"15 mins."},"categories":[{"name":"从零开始","slug":"从零开始","count":8,"path":"api/categories/从零开始.json"}],"tags":[{"name":"Vert.x","slug":"Vert-x","count":8,"path":"api/tags/Vert-x.json"},{"name":"Actor","slug":"Actor","count":8,"path":"api/tags/Actor.json"},{"name":"设计模式","slug":"设计模式","count":8,"path":"api/tags/设计模式.json"},{"name":"Java","slug":"Java","count":9,"path":"api/tags/Java.json"},{"name":"代理模式","slug":"代理模式","count":4,"path":"api/tags/代理模式.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Vert-x%E5%8E%9F%E5%A7%8B%E4%BD%BF%E7%94%A8%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">Vert.x原始使用方式</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BC%96%E5%86%99Verticle\"><span class=\"toc-text\">编写Verticle</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Vert-x%E9%9B%86%E6%88%90%E5%9F%BA%E7%B1%BB\"><span class=\"toc-text\">Vert.x集成基类</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%BE%85%E5%8A%A9%E7%B1%BB\"><span class=\"toc-text\">辅助类</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%B7%A5%E5%85%B7\"><span class=\"toc-text\">工具</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%B1%BB%E3%80%81%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">类、配置</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9C%AC%E4%BD%93\"><span class=\"toc-text\">本体</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Eventloop%E9%9B%86%E6%88%90\"><span class=\"toc-text\">Eventloop集成</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9C%AC%E4%BD%93-1\"><span class=\"toc-text\">本体</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#http%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\">http实现</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#http%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">http配置</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E9%85%8D%E7%BD%AE%E5%AF%B9%E8%B1%A1\"><span class=\"toc-text\">配置对象</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E9%85%8D%E7%BD%AE%E8%AF%BB%E5%8F%96\"><span class=\"toc-text\">配置读取</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E9%85%8D%E7%BD%AE%E7%A4%BA%E4%BE%8B\"><span class=\"toc-text\">配置示例</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#http%E6%9C%AC%E4%BD%93\"><span class=\"toc-text\">http本体</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Worker%E9%9B%86%E6%88%90\"><span class=\"toc-text\">Worker集成</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9C%AC%E4%BD%93-2\"><span class=\"toc-text\">本体</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#http%E5%AE%9E%E7%8E%B0-1\"><span class=\"toc-text\">http实现</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#http%E6%9C%AC%E4%BD%93-1\"><span class=\"toc-text\">http本体</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">总结</span></a></li></ol>","author":{"name":"因雨而生","slug":"blog-author","avatar":"/images/avatar.jpg","link":"/","description":"一直没脱离低级趣味的Coder","socials":{"github":"https://github.com/BornToRain","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"从零开始撸框架(6)-与Vert.x集成 基础篇(二)","uid":"a0a429763c9944ec54d86de5e0e4f445","slug":"从零开始撸框架(6)-与Vert.x集成 基础篇(二)","date":"2021-05-07T03:54:00.000Z","updated":"2021-05-10T10:02:35.468Z","comments":true,"path":"api/articles/从零开始撸框架(6)-与Vert.x集成 基础篇(二).json","keywords":["Coder","Scalaer","Javaer"],"cover":"/images/vertxlogo.png","text":"这一章我们来将上一章中的 Verticle 在Vert.x中运行起来. Vert.x原始使用方式样例来自于Vert.x官网 部署Verticle并运行Vert....","permalink":"/post/从零开始撸框架(6)-与Vert.x集成 基础篇(二)","photos":[],"count_time":{"symbolsCount":"4.9k","symbolsTime":"4 mins."},"categories":[{"name":"从零开始","slug":"从零开始","count":8,"path":"api/categories/从零开始.json"}],"tags":[{"name":"Vert.x","slug":"Vert-x","count":8,"path":"api/tags/Vert-x.json"},{"name":"Actor","slug":"Actor","count":8,"path":"api/tags/Actor.json"},{"name":"设计模式","slug":"设计模式","count":8,"path":"api/tags/设计模式.json"},{"name":"Java","slug":"Java","count":9,"path":"api/tags/Java.json"},{"name":"代理模式","slug":"代理模式","count":4,"path":"api/tags/代理模式.json"}],"author":{"name":"因雨而生","slug":"blog-author","avatar":"/images/avatar.jpg","link":"/","description":"一直没脱离低级趣味的Coder","socials":{"github":"https://github.com/BornToRain","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"从零开始撸框架(4)-配置读取器","uid":"45dcae5ccfe9e8f63cc7cbe584bb9d7a","slug":"从零开始撸框架(4)-配置读取器","date":"2021-05-01T22:43:37.000Z","updated":"2021-05-07T01:21:36.962Z","comments":true,"path":"api/articles/从零开始撸框架(4)-配置读取器.json","keywords":["Coder","Scalaer","Javaer"],"cover":"/images/vertxlogo.png","text":"到目前为止,框架已经支持了 工厂 、 Bean分组 、 依赖注入 ,这一章我们来实现框架配置的读取. 配置读取基类老样子,我们还是先定义一个读取基类,方便后续子...","permalink":"/post/从零开始撸框架(4)-配置读取器","photos":[],"count_time":{"symbolsCount":"8k","symbolsTime":"7 mins."},"categories":[{"name":"从零开始","slug":"从零开始","count":8,"path":"api/categories/从零开始.json"}],"tags":[{"name":"Vert.x","slug":"Vert-x","count":8,"path":"api/tags/Vert-x.json"},{"name":"Actor","slug":"Actor","count":8,"path":"api/tags/Actor.json"},{"name":"设计模式","slug":"设计模式","count":8,"path":"api/tags/设计模式.json"},{"name":"Java","slug":"Java","count":9,"path":"api/tags/Java.json"}],"author":{"name":"因雨而生","slug":"blog-author","avatar":"/images/avatar.jpg","link":"/","description":"一直没脱离低级趣味的Coder","socials":{"github":"https://github.com/BornToRain","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}