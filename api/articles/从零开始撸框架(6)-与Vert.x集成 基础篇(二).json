{"title":"从零开始撸框架(6)-与Vert.x集成 基础篇(二)","uid":"a0a429763c9944ec54d86de5e0e4f445","slug":"从零开始撸框架(6)-与Vert.x集成 基础篇(二)","date":"2021-05-07T03:54:00.000Z","updated":"2021-05-10T10:02:35.468Z","comments":true,"path":"api/articles/从零开始撸框架(6)-与Vert.x集成 基础篇(二).json","keywords":["Coder","Scalaer","Javaer"],"cover":"/images/vertxlogo.png","content":"<p>这一章我们来将上一章中的 <em>Verticle</em> 在Vert.x中运行起来.</p>\n<h2 id=\"Vert-x原始使用方式\"><a href=\"#Vert-x原始使用方式\" class=\"headerlink\" title=\"Vert.x原始使用方式\"></a>Vert.x原始使用方式</h2><p>样例来自于<a href=\"https://vertx.io/\">Vert.x官网</a></p>\n<h3 id=\"部署Verticle并运行Vert-x\"><a href=\"#部署Verticle并运行Vert-x\" class=\"headerlink\" title=\"部署Verticle并运行Vert.x\"></a>部署Verticle并运行Vert.x</h3><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HelloWorld</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 单例</span>\n    <span class=\"token comment\">// Vertx vertx = Vertx.vertx();</span>\n    <span class=\"token comment\">// 集群</span>\n    <span class=\"token class-name\">Vertx</span><span class=\"token punctuation\">.</span><span class=\"token function\">clusteredVertx</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">,</span> ar <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span>\n      val vertx <span class=\"token operator\">=</span> ar<span class=\"token punctuation\">.</span><span class=\"token function\">result</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      vertx<span class=\"token punctuation\">.</span><span class=\"token function\">deployVerticle</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Server</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>这里贴出来方便参考,下面开始与Vert.x的集成.</p>\n<h2 id=\"Vert-x集成基类\"><a href=\"#Vert-x集成基类\" class=\"headerlink\" title=\"Vert.x集成基类\"></a>Vert.x集成基类</h2><h3 id=\"辅助类\"><a href=\"#辅助类\" class=\"headerlink\" title=\"辅助类\"></a>辅助类</h3><p>线程类,单纯为了打印线程名.可省略</p>\n<p><strong>Threads.java</strong></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>kit</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">lombok<span class=\"token punctuation\">.</span>val</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * @author &lt;a href=\"mailto:1159930219@qq.com\">BornToRain&lt;/a>\n */</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Threads</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Runnable</span> runnable<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    val thread <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span>runnable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    thread<span class=\"token punctuation\">.</span><span class=\"token function\">setName</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">+</span> <span class=\"token string\">\"-\"</span> <span class=\"token operator\">+</span> thread<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    thread<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<hr>\n<h3 id=\"本体\"><a href=\"#本体\" class=\"headerlink\" title=\"本体\"></a>本体</h3><p>框架启动入口类</p>\n<p><strong>ILauncher.java</strong></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>web</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">io<span class=\"token punctuation\">.</span>vertx<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Vertx</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>function<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Consumer</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * @author &lt;a href=\"mailto:1159930219@qq.com\">BornToRain&lt;/a>\n */</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">ILauncher</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">/**\n   * 这里为什么要采用Java8的Consumer为参数,而不是Vertx或者Supplier&lt;Vertx>呢.\n   * 1. 这里我们希望Vert.x是子类去创建(单例、集群)Vert.x,而不是外界创建好后传进来. start(Vertx vertx); (×)\n   * 2. 创建的Vert.x我们后续会用到,所以需要返回或者能使用到,\n   *    而单例、集群模式的Vert.x返回值一个Sync一个Future,用Supplier&lt;Vertx>不好操作. start(Supplier&lt;Vertx> fn); (×) \n   */</span>\n  <span class=\"token keyword\">void</span> <span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Consumer</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Vertx</span><span class=\"token punctuation\">></span></span> fn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>ActorLauncher.java</strong></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>web</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">io<span class=\"token punctuation\">.</span>netty<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>internal<span class=\"token punctuation\">.</span>logging<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">InternalLoggerFactory</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">io<span class=\"token punctuation\">.</span>netty<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>internal<span class=\"token punctuation\">.</span>logging<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Log4J2LoggerFactory</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">io<span class=\"token punctuation\">.</span>vertx<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Vertx</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">lombok<span class=\"token punctuation\">.</span>extern<span class=\"token punctuation\">.</span>log4j<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Log4j2</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">lombok<span class=\"token punctuation\">.</span>val</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">VertxConfig</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>kit<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Fn</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>kit<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Trunk</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>constant<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Console</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>function<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Consumer</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token keyword\">static</span> <span class=\"token namespace\">io<span class=\"token punctuation\">.</span>vertx<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>spi<span class=\"token punctuation\">.</span>resolver<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ResolverProvider</span><span class=\"token punctuation\">.</span>DISABLE_DNS_RESOLVER_PROP_NAME<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * @author &lt;a href=\"mailto:1159930219@qq.com\">BornToRain&lt;/a>\n */</span>\n<span class=\"token annotation punctuation\">@Log4j2</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ActorLauncher</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">ILauncher</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token annotation punctuation\">@Override</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Consumer</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Vertx</span><span class=\"token punctuation\">></span></span> fn<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 读取Vert.x相关配置</span>\n    val config <span class=\"token operator\">=</span> <span class=\"token class-name\">Trunk</span><span class=\"token punctuation\">.</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">VertxConfig</span><span class=\"token punctuation\">></span></span><span class=\"token function\">singleton</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">VertxConfig</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    val options <span class=\"token operator\">=</span> config<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 将Vert.x的日志换成Log4j2</span>\n    <span class=\"token class-name\">InternalLoggerFactory</span><span class=\"token punctuation\">.</span><span class=\"token function\">setDefaultFactory</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Log4J2LoggerFactory</span><span class=\"token punctuation\">.</span>INSTANCE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 墙,dns解析最好关掉.</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">getProperties</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setProperty</span><span class=\"token punctuation\">(</span>DISABLE_DNS_RESOLVER_PROP_NAME<span class=\"token punctuation\">,</span> <span class=\"token string\">\"true\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">Fn</span><span class=\"token punctuation\">.</span><span class=\"token function\">ensureExec</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>options<span class=\"token punctuation\">.</span><span class=\"token function\">isHAEnabled</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// 单例</span>\n      <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span>\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Console</span><span class=\"token punctuation\">.</span>SINGLE<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">.</span><span class=\"token function\">toJson</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">encodePrettily</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        fn<span class=\"token punctuation\">.</span><span class=\"token function\">accept</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Vertx</span><span class=\"token punctuation\">.</span><span class=\"token function\">vertx</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// 集群</span>\n      <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span>\n        val manager <span class=\"token operator\">=</span> options<span class=\"token punctuation\">.</span><span class=\"token function\">getClusterManager</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Console</span><span class=\"token punctuation\">.</span>LAUNCHER<span class=\"token punctuation\">,</span> manager<span class=\"token punctuation\">,</span> manager<span class=\"token punctuation\">.</span><span class=\"token function\">getNodeId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> manager<span class=\"token punctuation\">.</span><span class=\"token function\">isActive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Vertx</span><span class=\"token punctuation\">.</span><span class=\"token function\">clusteredVertx</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">,</span> ar <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span>\n          val vertx <span class=\"token operator\">=</span> ar<span class=\"token punctuation\">.</span><span class=\"token function\">result</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          fn<span class=\"token punctuation\">.</span><span class=\"token function\">accept</span><span class=\"token punctuation\">(</span>vertx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"启动入口\"><a href=\"#启动入口\" class=\"headerlink\" title=\"启动入口\"></a>启动入口</h3><p>模仿<em>Spring-boot</em> 的<em>SpringApplication.run</em>写一个.</p>\n<p><strong>VertxBootstrap.java</strong></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>web</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">lombok<span class=\"token punctuation\">.</span>extern<span class=\"token punctuation\">.</span>log4j<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Log4j2</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">lombok<span class=\"token punctuation\">.</span>val</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>actor<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">EventloopActor</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>actor<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">WorkerActor</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>kit<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Trunk</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>kit<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Threads</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * @author &lt;a href=\"mailto:1159930219@qq.com\">BornToRain&lt;/a>\n */</span>\n<span class=\"token annotation punctuation\">@Log4j2</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">VertxBootstrap</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">VertxBootstrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    val launcher <span class=\"token operator\">=</span> <span class=\"token class-name\">Trunk</span><span class=\"token punctuation\">.</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ActorLauncher</span><span class=\"token punctuation\">></span></span><span class=\"token function\">singleton</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ActorLauncher</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    launcher<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span>vertx <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token class-name\">Threads</span><span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span>\n        val master <span class=\"token operator\">=</span> <span class=\"token class-name\">Trunk</span><span class=\"token punctuation\">.</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">EventloopActor</span><span class=\"token punctuation\">></span></span><span class=\"token function\">singleton</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">EventloopActor</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        master<span class=\"token punctuation\">.</span><span class=\"token function\">integration</span><span class=\"token punctuation\">(</span>vertx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ygo-eventloop-thread\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token class-name\">Threads</span><span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span>\n        val worker <span class=\"token operator\">=</span> <span class=\"token class-name\">Trunk</span><span class=\"token punctuation\">.</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">WorkerActor</span><span class=\"token punctuation\">></span></span><span class=\"token function\">singleton</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">WorkerActor</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        worker<span class=\"token punctuation\">.</span><span class=\"token function\">integration</span><span class=\"token punctuation\">(</span>vertx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ygo-worker-thread\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h3><p>在 <em>/test/main/resources</em> 、 <em>/test/main/resources/ygo/</em> 目录下分别添加 <em>application.yaml</em> 文件.<br><strong>application.yaml</strong></p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">ygo</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> test\n  <span class=\"token key atrule\">profile</span><span class=\"token punctuation\">:</span> default\n  <span class=\"token key atrule\">vertx</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> vertx<span class=\"token punctuation\">-</span>ygo\n    <span class=\"token key atrule\">options</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">haEnabled</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n      <span class=\"token key atrule\">preferNativeTransport</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>启动测试类<br><strong>VertxBootstrapTest.java</strong></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>btr<span class=\"token punctuation\">.</span>ygo<span class=\"token punctuation\">.</span>web</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>junit<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Test</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * @author &lt;a href=\"mailto:1159930219@qq.com\">BornToRain&lt;/a>\n */</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">VertxBootstrapTest</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token annotation punctuation\">@Test</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">VertxBootstrap</span><span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>测试结果<br><img src=\"/images/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%92%B8%E6%A1%86%E6%9E%B6/6/testret1.png\" alt=\"运行结果\"></p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>到此框架与Vert.x基础集成完成了,现在框架中的类、配置已经被识别成<em>Verticle</em>并运行在Vert.x中了.</p>\n<p>下一篇我们就要开始集成Vert.x-web来实现框架Web部分的功能了.</p>\n","feature":null,"text":"这一章我们来将上一章中的 Verticle 在Vert.x中运行起来. Vert.x原始使用方式样例来自于Vert.x官网 部署Verticle并运行Vert.xpublic class HelloWorld &#123; public static void main() &#...","link":"","photos":[],"count_time":{"symbolsCount":"4.6k","symbolsTime":"4 mins."},"categories":[{"name":"从零开始","slug":"从零开始","count":8,"path":"api/categories/从零开始.json"}],"tags":[{"name":"Vert.x","slug":"Vert-x","count":8,"path":"api/tags/Vert-x.json"},{"name":"Actor","slug":"Actor","count":8,"path":"api/tags/Actor.json"},{"name":"设计模式","slug":"设计模式","count":8,"path":"api/tags/设计模式.json"},{"name":"Java","slug":"Java","count":9,"path":"api/tags/Java.json"},{"name":"代理模式","slug":"代理模式","count":4,"path":"api/tags/代理模式.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Vert-x%E5%8E%9F%E5%A7%8B%E4%BD%BF%E7%94%A8%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">Vert.x原始使用方式</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%83%A8%E7%BD%B2Verticle%E5%B9%B6%E8%BF%90%E8%A1%8CVert-x\"><span class=\"toc-text\">部署Verticle并运行Vert.x</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Vert-x%E9%9B%86%E6%88%90%E5%9F%BA%E7%B1%BB\"><span class=\"toc-text\">Vert.x集成基类</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%BE%85%E5%8A%A9%E7%B1%BB\"><span class=\"toc-text\">辅助类</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9C%AC%E4%BD%93\"><span class=\"toc-text\">本体</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%90%AF%E5%8A%A8%E5%85%A5%E5%8F%A3\"><span class=\"toc-text\">启动入口</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B5%8B%E8%AF%95\"><span class=\"toc-text\">测试</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">总结</span></a></li></ol>","author":{"name":"因雨而生","slug":"blog-author","avatar":"/images/avatar.jpg","link":"/","description":"一直没脱离低级趣味的Coder","socials":{"github":"https://github.com/BornToRain","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"从零开始撸框架(7)-与Vert.x集成 Web篇(一)","uid":"c38b17588d251cd9846139dacf4f50ed","slug":"从零开始撸框架(7)-与Vert.x集成 Web篇(一)","date":"2021-05-10T06:50:32.000Z","updated":"2021-06-09T08:46:02.182Z","comments":true,"path":"api/articles/从零开始撸框架(7)-与Vert.x集成 Web篇(一).json","keywords":["Coder","Scalaer","Javaer"],"cover":"/images/vertxlogo.png","text":"上一篇讲完了与Vert.x集成的整体情况,这一篇开始与vertx-web集成. 这些内容我们主要在web模块中进行开发. Web全局集成web组件下的build.gradlebuild.gradle dependencies &#123; &#x2F;&#x2F; 核心组件 co...","link":"","photos":[],"count_time":{"symbolsCount":"7.6k","symbolsTime":"7 mins."},"categories":[{"name":"从零开始","slug":"从零开始","count":8,"path":"api/categories/从零开始.json"}],"tags":[{"name":"Vert.x","slug":"Vert-x","count":8,"path":"api/tags/Vert-x.json"},{"name":"Actor","slug":"Actor","count":8,"path":"api/tags/Actor.json"},{"name":"设计模式","slug":"设计模式","count":8,"path":"api/tags/设计模式.json"},{"name":"Java","slug":"Java","count":9,"path":"api/tags/Java.json"},{"name":"代理模式","slug":"代理模式","count":4,"path":"api/tags/代理模式.json"}],"author":{"name":"因雨而生","slug":"blog-author","avatar":"/images/avatar.jpg","link":"/","description":"一直没脱离低级趣味的Coder","socials":{"github":"https://github.com/BornToRain","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"从零开始撸框架(5)-与Vert.x集成 基础篇(一)","uid":"6b0291adc1983f086f545c1304c40edc","slug":"从零开始撸框架(5)-与Vert.x集成 基础篇(一)","date":"2021-05-07T00:27:12.000Z","updated":"2021-06-08T08:04:54.998Z","comments":true,"path":"api/articles/从零开始撸框架(5)-与Vert.x集成 基础篇(一).json","keywords":["Coder","Scalaer","Javaer"],"cover":"/images/vertxlogo.png","text":"前两章我们分别讲完了类、配置,让框架有了骨架.接下来几章我们要实现类、配置与Vert.x集成,让框架跑在Vert.x中. 由于接下来会设计到对外提供web服务了,篇幅会比较长.这里我决定分篇,第一篇先把大体的讲完,剩下几篇再讲web方面的细节. Vert.x原始使用方式样例来自于...","link":"","photos":[],"count_time":{"symbolsCount":"16k","symbolsTime":"14 mins."},"categories":[{"name":"从零开始","slug":"从零开始","count":8,"path":"api/categories/从零开始.json"}],"tags":[{"name":"Vert.x","slug":"Vert-x","count":8,"path":"api/tags/Vert-x.json"},{"name":"Actor","slug":"Actor","count":8,"path":"api/tags/Actor.json"},{"name":"设计模式","slug":"设计模式","count":8,"path":"api/tags/设计模式.json"},{"name":"Java","slug":"Java","count":9,"path":"api/tags/Java.json"},{"name":"代理模式","slug":"代理模式","count":4,"path":"api/tags/代理模式.json"}],"author":{"name":"因雨而生","slug":"blog-author","avatar":"/images/avatar.jpg","link":"/","description":"一直没脱离低级趣味的Coder","socials":{"github":"https://github.com/BornToRain","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}