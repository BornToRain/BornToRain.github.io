{"title":"从零开始撸框架(8)-与Vert.x集成 Web篇(二)","uid":"31ebad76ece9cbfbb4b4be8543fa818d","slug":"从零开始撸框架(8)-与Vert.x集成 Web篇(二)","date":"2021-05-12T06:33:24.000Z","updated":"2021-06-28T09:51:53.342Z","comments":true,"path":"api/articles/从零开始撸框架(8)-与Vert.x集成 Web篇(二).json","keywords":["Coder","Scalaer","Javaer"],"cover":"/images/vertxlogo.png","content":"<p>上一篇讲完了全局配置,这一篇我们来讲每个路由的集成.</p>\n<h2 id=\"Vert-x原始使用方式\"><a href=\"#Vert-x原始使用方式\" class=\"headerlink\" title=\"Vert.x原始使用方式\"></a>Vert.x原始使用方式</h2><p>样例来自于<a href=\"https://vertx.io/\">Vert.x官网</a></p>\n<h3 id=\"Vert-x配置api接口\"><a href=\"#Vert-x配置api接口\" class=\"headerlink\" title=\"Vert.x配置api接口\"></a>Vert.x配置api接口</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TestVerticle</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">AbstractVerticle</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">start</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">    <span class=\"type\">Router</span> <span class=\"variable\">router</span> <span class=\"operator\">=</span> Router.router(vertx);</span><br><span class=\"line\">    route().method(GET).path(<span class=\"string\">&quot;/api1&quot;</span>).consumes(<span class=\"string\">&quot;app/json&quot;</span>).produces(<span class=\"string\">&quot;app/json&quot;</span>).handler().failureHandler();</span><br><span class=\"line\">    route().method(GET).path(<span class=\"string\">&quot;/api2&quot;</span>).consumes(<span class=\"string\">&quot;app/json&quot;</span>).produces(<span class=\"string\">&quot;app/json&quot;</span>).handler().failureHandler();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>原始使用方式链式编程写起来是很方便,但是全部路由都得写在一起集中管理,对于习惯了传统模式的人很不友好,下面我们来加以改造让它更符合我们更习惯的使用方式.</p>\n<p>改造的话分为以下几个方面:</p>\n<ol>\n<li>请求路径</li>\n<li>请求方式</li>\n<li>媒体类型</li>\n<li>响应状态</li>\n<li>请求参数</li>\n<li>http工作流</li>\n</ol>\n<p>其中1-4为静态解析,即代码编译期我们就能确定值.5-6为动态解析,每次请求它的参数,工作流都不相同,需要我们动态解析去确定.</p>\n<p>下面我们先完成静态解析部分.</p>\n<h2 id=\"静态解析\"><a href=\"#静态解析\" class=\"headerlink\" title=\"静态解析\"></a>静态解析</h2><h3 id=\"请求路径\"><a href=\"#请求路径\" class=\"headerlink\" title=\"请求路径\"></a>请求路径</h3><p>首先是第一步,api请求路径解析.</p>\n<p>上文说到了我们会用到jsr311注解,jsr311中是使用 <em>@Path</em>来获取路径的,这里我们写一个工具类来解析@Path注解.<br><strong>Paths.java</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> org.btr.ygo.web.kit;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.extern.log4j.Log4j2;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.val;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.core.kit.Fn;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.ws.rs.Path;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Objects;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 解析<span class=\"doctag\">@Path</span>获取请求路径</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> &lt;a href=&quot;mailto:1159930219@qq.com&quot;&gt;BornToRain&lt;/a&gt;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Log4j2</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Paths</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title function_\">resolve</span><span class=\"params\">(Path path)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> resolve(path, <span class=\"literal\">null</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title function_\">resolve</span><span class=\"params\">(Path path, String root)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> Fn.ensureRun(Objects.isNull(root),</span><br><span class=\"line\">      <span class=\"comment\">// 顶级路径</span></span><br><span class=\"line\">      () -&gt; adjust(path.value()),</span><br><span class=\"line\">      () -&gt; &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 先取上级路径</span></span><br><span class=\"line\">        <span class=\"type\">val</span> <span class=\"variable\">rootPath</span> <span class=\"operator\">=</span> adjust(root);</span><br><span class=\"line\">        <span class=\"comment\">// 当前路径</span></span><br><span class=\"line\">        <span class=\"type\">val</span> <span class=\"variable\">subPath</span> <span class=\"operator\">=</span> adjust(path.value());</span><br><span class=\"line\">        <span class=\"comment\">// 1 == /</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span> == rootPath.length() ? subPath : rootPath + subPath;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * uri必须是/开头无/结尾,无多//形式.</span></span><br><span class=\"line\"><span class=\"comment\">   * ex: / -&gt; /</span></span><br><span class=\"line\"><span class=\"comment\">   * ex: /hello -&gt; /hello</span></span><br><span class=\"line\"><span class=\"comment\">   * ex: /hello/ -&gt; /hello</span></span><br><span class=\"line\"><span class=\"comment\">   * ex: /hello// -&gt; /hello</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> String <span class=\"title function_\">adjust</span><span class=\"params\">(String path)</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 多//转单/</span></span><br><span class=\"line\">    <span class=\"type\">var</span> <span class=\"variable\">uri</span> <span class=\"operator\">=</span> path.replace(<span class=\"string\">&quot;\\\\/+&quot;</span>, <span class=\"string\">&quot;/&quot;</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 去尾斜杠</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (uri.endsWith(<span class=\"string\">&quot;/&quot;</span>)) uri = uri.substring(<span class=\"number\">0</span>, uri.lastIndexOf(<span class=\"string\">&quot;/&quot;</span>));</span><br><span class=\"line\">    <span class=\"comment\">// /开头</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span>  uri.charAt(<span class=\"number\">0</span>) == <span class=\"string\">&#x27;/&#x27;</span> ? uri : <span class=\"string\">&#x27;/&#x27;</span> + uri;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"请求方式\"><a href=\"#请求方式\" class=\"headerlink\" title=\"请求方式\"></a>请求方式</h3><p>解析完请求路径开始解析请求方式.jsr311请求方式注解:</p>\n<ul>\n<li>GET </li>\n<li>POST</li>\n<li>PUT</li>\n<li>DELTE</li>\n<li>..</li>\n</ul>\n<p>在<strong>Trunk.java</strong>中追加</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Trunk</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 存放的是每个请求方式对应的请求路径集合.</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> Map&lt;HttpMethod, Set&lt;String&gt;&gt; METHOD_URIS = Map.of(</span><br><span class=\"line\">    HttpMethod.GET, <span class=\"keyword\">new</span> <span class=\"title class_\">HashSet</span>&lt;&gt;(),</span><br><span class=\"line\">    HttpMethod.POST, <span class=\"keyword\">new</span> <span class=\"title class_\">HashSet</span>&lt;&gt;(),</span><br><span class=\"line\">    HttpMethod.PUT, <span class=\"keyword\">new</span> <span class=\"title class_\">HashSet</span>&lt;&gt;(),</span><br><span class=\"line\">    HttpMethod.DELETE, <span class=\"keyword\">new</span> <span class=\"title class_\">HashSet</span>&lt;&gt;(),</span><br><span class=\"line\">    HttpMethod.PATCH, <span class=\"keyword\">new</span> <span class=\"title class_\">HashSet</span>&lt;&gt;()</span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>HttpMehotds.java</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> org.btr.ygo.web.kit;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> io.vertx.core.http.HttpMethod;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.extern.log4j.Log4j2;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.val;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.core.kit.Fn;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.core.kit.Trunk;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.web.scan.Request;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.ws.rs.DELETE;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.ws.rs.GET;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.ws.rs.HEAD;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.ws.rs.OPTIONS;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.ws.rs.PATCH;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.ws.rs.POST;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.ws.rs.PUT;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.lang.annotation.Annotation;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Method;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Map;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 解析<span class=\"doctag\">@GET</span>..注解获取请求方式</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> &lt;a href=&quot;mailto:1159930219@qq.com&quot;&gt;BornToRain&lt;/a&gt;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Log4j2</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HttpMethods</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// jsr311与Vert.x映射关系</span></span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> Map&lt;Class&lt;?&gt;, HttpMethod&gt; METHODS = Map.of(</span><br><span class=\"line\">    GET.class, HttpMethod.GET,</span><br><span class=\"line\">    POST.class, HttpMethod.POST,</span><br><span class=\"line\">    PUT.class, HttpMethod.PUT,</span><br><span class=\"line\">    DELETE.class, HttpMethod.DELETE,</span><br><span class=\"line\">    OPTIONS.class, HttpMethod.OPTIONS,</span><br><span class=\"line\">    PATCH.class, HttpMethod.PATCH,</span><br><span class=\"line\">    HEAD.class, HttpMethod.HEAD</span><br><span class=\"line\">  );</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">resolve</span><span class=\"params\">(Request req)</span> &#123;</span><br><span class=\"line\">    Fn.ensureExec(() -&gt; &#123;</span><br><span class=\"line\">      <span class=\"type\">val</span> <span class=\"variable\">value</span> <span class=\"operator\">=</span> Trunk.METHOD_URIS.get(req.getHttpMethod());</span><br><span class=\"line\">      value.add(req.getPath());</span><br><span class=\"line\">    &#125;, req.getHttpMethod());</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> HttpMethod <span class=\"title function_\">resolve</span><span class=\"params\">(Method method)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">val</span> <span class=\"variable\">annos</span> <span class=\"operator\">=</span> method.getDeclaredAnnotations();</span><br><span class=\"line\">    <span class=\"type\">HttpMethod</span> <span class=\"variable\">ret</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (Annotation annotation : annos) &#123;</span><br><span class=\"line\">      <span class=\"type\">val</span> <span class=\"variable\">key</span> <span class=\"operator\">=</span> annotation.annotationType();</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (METHODS.containsKey(key)) &#123;</span><br><span class=\"line\">        ret = METHODS.get(key);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"媒体类型\"><a href=\"#媒体类型\" class=\"headerlink\" title=\"媒体类型\"></a>媒体类型</h3><p>媒体类型同理,jsr311中:</p>\n<ul>\n<li>@Consumes 指定请求内容类型(Content-Type). ex: application&#x2F;json;</li>\n<li>@Produces 指定响应内容类型(Accept),不过只有当请求头中Accept包含指定类型才返回.</li>\n</ul>\n<p><strong>MediaTypes.java</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> org.btr.ygo.web.kit;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.val;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.ws.rs.Consumes;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.ws.rs.Produces;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Method;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Arrays;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Objects;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Set;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.stream.Collectors;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> &lt;a href=&quot;mailto:1159930219@qq.com&quot;&gt;BornToRain&lt;/a&gt;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MediaTypes</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 默认类型 wildcard</span></span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> Set&lt;String&gt; DEFAULT = Set.of(<span class=\"string\">&quot;*/*&quot;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Set&lt;String&gt; <span class=\"title function_\">resolveConsumes</span><span class=\"params\">(Method method)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">val</span> <span class=\"variable\">anno</span> <span class=\"operator\">=</span> method.getAnnotation(Consumes.class);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> Fn.ensureRun(Objects.isNull(anno),</span><br><span class=\"line\">      () -&gt; DEFAULT,</span><br><span class=\"line\">      () -&gt; Arrays.stream(anno.value()).collect(Collectors.toSet()));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Set&lt;String&gt; <span class=\"title function_\">resolveProduces</span><span class=\"params\">(Method method)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">val</span> <span class=\"variable\">anno</span> <span class=\"operator\">=</span> method.getAnnotation(Produces.class);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> Fn.ensureRun(Objects.isNull(anno),</span><br><span class=\"line\">      () -&gt; DEFAULT,</span><br><span class=\"line\">      () -&gt; Arrays.stream(anno.value()).collect(Collectors.toSet()));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"响应状态\"><a href=\"#响应状态\" class=\"headerlink\" title=\"响应状态\"></a>响应状态</h3><p>响应状态解析于我们自定义注解<em>ResponstStatus.java</em>.</p>\n<p><strong>ResponstStatuses.java</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> org.btr.ygo.web.kit;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.val;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.core.kit.Fn;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.web.annotations.ResponseStatus;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.web.constant.HttpStatus;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Method;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Objects;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> &lt;a href=&quot;mailto:1159930219@qq.com&quot;&gt;BornToRain&lt;/a&gt;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ResponstStatuses</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 这里默认状态返回200 Ok</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> HttpStatus <span class=\"title function_\">resolveConsumes</span><span class=\"params\">(Method method)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">val</span> <span class=\"variable\">anno</span> <span class=\"operator\">=</span> method.getAnnotation(ResponseStatus.class);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> Fn.ensureRun(Objects.isNull(anno), () -&gt; HttpStatus.OK, () -&gt; anno.value());</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"扫描器\"><a href=\"#扫描器\" class=\"headerlink\" title=\"扫描器\"></a>扫描器</h3><p>继承前文<em>IScanner.java</em>实现以下功能.</p>\n<h4 id=\"接口扫描器\"><a href=\"#接口扫描器\" class=\"headerlink\" title=\"接口扫描器\"></a>接口扫描器</h4><p>扫描带 <em>@Api</em>的文件,将其标识为接口文件.</p>\n<p><strong>ApiScanner.java</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> org.btr.ygo.web.scan;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.extern.log4j.Log4j2;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.val;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.core.constant.Console;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.core.scan.IScanner;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.web.annotations.Api;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Set;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.stream.Collectors;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> &lt;a href=&quot;mailto:1159930219@qq.com&quot;&gt;BornToRain&lt;/a&gt;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Log4j2</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ApiScanner</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">IScanner</span>&lt;Set&lt;Class&lt;?&gt;&gt;&gt; &#123;</span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> Set&lt;Class&lt;?&gt;&gt; scan(Set&lt;Class&lt;?&gt;&gt; classes) &#123;</span><br><span class=\"line\">    <span class=\"type\">val</span> <span class=\"variable\">ret</span> <span class=\"operator\">=</span> classes.stream().filter(d -&gt; d.isAnnotationPresent(Api.class))</span><br><span class=\"line\">      .collect(Collectors.toSet());</span><br><span class=\"line\">    log.info(Console.SCANNED, <span class=\"string\">&quot;Api&quot;</span>, ret.size());</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"请求扫描器\"><a href=\"#请求扫描器\" class=\"headerlink\" title=\"请求扫描器\"></a>请求扫描器</h4><p>把上述的静态参数扫描,将其转换成<em>Request.java</em>实体类.</p>\n<p><strong>RequestScanner.java</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> org.btr.ygo.web.scan;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.extern.log4j.Log4j2;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.val;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.core.annotations.Addr;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.core.constant.Console;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.core.constant.Const;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.core.kit.Fn;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.core.kit.Methods;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.core.kit.Trunk;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.core.scan.IScanner;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.web.annotations.ResponseStatus;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.web.constant.HttpStatus;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.web.kit.HttpMethods;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.web.kit.MediaTypes;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.web.kit.Paths;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.ws.rs.Path;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Method;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Arrays;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Objects;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Set;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.stream.Collectors;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.stream.Stream;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> &lt;a href=&quot;mailto:1159930219@qq.com&quot;&gt;BornToRain&lt;/a&gt;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Log4j2</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"keyword\">class</span> <span class=\"title class_\">RequestScanner</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">IScanner</span>&lt;List&lt;Request&gt;&gt; &#123;</span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> List&lt;Request&gt; <span class=\"title function_\">scan</span><span class=\"params\">(Set&lt;Class&lt;?&gt;&gt; classes)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">val</span> <span class=\"variable\">ret</span> <span class=\"operator\">=</span> classes.stream().flatMap(d -&gt; Fn.ensureRun(!d.isAnnotationPresent(Path.class),</span><br><span class=\"line\">      <span class=\"comment\">// 顶级uri路径</span></span><br><span class=\"line\">      () -&gt; extract(d, <span class=\"literal\">null</span>),</span><br><span class=\"line\">      <span class=\"comment\">// 非顶级uri路径</span></span><br><span class=\"line\">      () -&gt; extract(d, Paths.resolve(d.getAnnotation(Path.class)))))</span><br><span class=\"line\">      .sorted(<span class=\"built_in\">this</span>::sort)</span><br><span class=\"line\">      .collect(Collectors.toList());</span><br><span class=\"line\">    log.info(Console.SCANNED, <span class=\"string\">&quot;Request&quot;</span>, ret.size());</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * vert.x路由顺序会影响到接口</span></span><br><span class=\"line\"><span class=\"comment\">   * 1. path参数放最后</span></span><br><span class=\"line\"><span class=\"comment\">   * 2. 长的放最前面</span></span><br><span class=\"line\"><span class=\"comment\">   * ex: /users/:id</span></span><br><span class=\"line\"><span class=\"comment\">   *     /users/abc</span></span><br><span class=\"line\"><span class=\"comment\">   *     /users</span></span><br><span class=\"line\"><span class=\"comment\">   * ret: /users/abc</span></span><br><span class=\"line\"><span class=\"comment\">   *      /users</span></span><br><span class=\"line\"><span class=\"comment\">   *      /users/:id</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"type\">int</span> <span class=\"title function_\">sort</span><span class=\"params\">(Request x, Request y)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">val</span> <span class=\"variable\">xPath</span> <span class=\"operator\">=</span> x.getPath();</span><br><span class=\"line\">    <span class=\"type\">val</span> <span class=\"variable\">yPath</span> <span class=\"operator\">=</span> y.getPath();</span><br><span class=\"line\">    <span class=\"type\">var</span> <span class=\"variable\">b</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (xPath.contains(Const.COLON)) b = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (xPath.length() &gt;= yPath.length()) b = -<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> b;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> Stream&lt;Request&gt; <span class=\"title function_\">extract</span><span class=\"params\">(Class&lt;?&gt; cls, String root)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> Arrays.stream(cls.getDeclaredMethods()).filter(Methods::validateMethod)</span><br><span class=\"line\">      .map(d -&gt; extract(d, root));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> Request <span class=\"title function_\">extract</span><span class=\"params\">(Method method, String root)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">val</span> <span class=\"variable\">data</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Request</span>().setMethod(method).setHttpMethod(HttpMethods.resolve(method))</span><br><span class=\"line\">      .setConsumes(MediaTypes.resolveConsumes(method))</span><br><span class=\"line\">      .setProduces(MediaTypes.resolveProduces(method));</span><br><span class=\"line\">    <span class=\"type\">val</span> <span class=\"variable\">anno</span> <span class=\"operator\">=</span> method.getAnnotation(Path.class);</span><br><span class=\"line\">    <span class=\"type\">val</span> <span class=\"variable\">path</span> <span class=\"operator\">=</span> Fn.ensureRun(Objects.isNull(anno),</span><br><span class=\"line\">      () -&gt; root,</span><br><span class=\"line\">      () -&gt; Paths.resolve(anno, root));</span><br><span class=\"line\">    data.setPath(path);</span><br><span class=\"line\">    data.setAddr(method.getAnnotation(Addr.class).value());</span><br><span class=\"line\">    data.setProxy(Trunk.getProxy(method.getDeclaringClass()));</span><br><span class=\"line\">    <span class=\"type\">val</span> <span class=\"variable\">httpStatus</span> <span class=\"operator\">=</span> method.getAnnotation(ResponseStatus.class);</span><br><span class=\"line\">    <span class=\"comment\">// () -&gt; httpStatus.value()不能缩写成httpStatus::value,这里必须lazy.</span></span><br><span class=\"line\">    data.setHttpStatus(</span><br><span class=\"line\">      Fn.ensureRun(Objects.isNull(httpStatus), () -&gt; HttpStatus.OK, () -&gt; httpStatus.value()));</span><br><span class=\"line\">    <span class=\"keyword\">return</span> data;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h3><p>把静态部分测试一下</p>\n<p><strong>IScannerTest.java</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> org.btr.ygo.web.scan;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> io.vertx.core.http.HttpMethod;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.val;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.core.annotations.Addr;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.core.kit.Packages;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.core.kit.Trunk;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.web.annotations.Api;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.web.annotations.ResponseStatus;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.web.constant.HttpStatus;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.hamcrest.CoreMatchers;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.junit.Assert;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.junit.Test;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.ws.rs.DELETE;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.ws.rs.GET;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.ws.rs.POST;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.ws.rs.PUT;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.ws.rs.Path;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Arrays;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> &lt;a href=&quot;mailto:1159930219@qq.com&quot;&gt;BornToRain&lt;/a&gt;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">IScannerTest</span> &#123;</span><br><span class=\"line\">  <span class=\"meta\">@Api</span></span><br><span class=\"line\">  <span class=\"meta\">@Path(&quot;/test&quot;)</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">TestEventloop</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@GET</span></span><br><span class=\"line\">    <span class=\"meta\">@Path(&quot;/hello/:id&quot;)</span></span><br><span class=\"line\">    <span class=\"meta\">@Addr(&quot;get&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">get</span><span class=\"params\">()</span>;</span><br><span class=\"line\">    <span class=\"meta\">@POST</span></span><br><span class=\"line\">    <span class=\"meta\">@Path(&quot;/hello&quot;)</span></span><br><span class=\"line\">    <span class=\"meta\">@Addr(&quot;post&quot;)</span></span><br><span class=\"line\">    <span class=\"meta\">@ResponseStatus(HttpStatus.CREATED)</span></span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">post</span><span class=\"params\">()</span>;</span><br><span class=\"line\">    <span class=\"meta\">@PUT</span></span><br><span class=\"line\">    <span class=\"meta\">@Path(&quot;/users/hello&quot;)</span></span><br><span class=\"line\">    <span class=\"meta\">@Addr(&quot;put&quot;)</span></span><br><span class=\"line\">    <span class=\"meta\">@ResponseStatus(HttpStatus.ACCEPTED)</span></span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">put</span><span class=\"params\">()</span>;</span><br><span class=\"line\">    <span class=\"meta\">@DELETE</span></span><br><span class=\"line\">    <span class=\"meta\">@Path(&quot;/hello/:id&quot;)</span></span><br><span class=\"line\">    <span class=\"meta\">@Addr(&quot;delete&quot;)</span></span><br><span class=\"line\">    <span class=\"meta\">@ResponseStatus(HttpStatus.NO_CONTENT)</span></span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">delete</span><span class=\"params\">()</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"meta\">@Test</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">testApi</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">val</span> <span class=\"variable\">classes</span> <span class=\"operator\">=</span> Packages.scan();</span><br><span class=\"line\">    <span class=\"type\">val</span> <span class=\"variable\">scanner</span> <span class=\"operator\">=</span> Trunk.&lt;ApiScanner&gt;singleton(ApiScanner.class);</span><br><span class=\"line\">    <span class=\"type\">val</span> <span class=\"variable\">ret</span> <span class=\"operator\">=</span> scanner.scan(classes);</span><br><span class=\"line\">    Assert.assertThat(ret, CoreMatchers.hasItem(TestEventloop.class));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"meta\">@Test</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">testRequest</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">val</span> <span class=\"variable\">classes</span> <span class=\"operator\">=</span> Packages.scan();</span><br><span class=\"line\">    <span class=\"type\">val</span> <span class=\"variable\">api</span> <span class=\"operator\">=</span> Trunk.&lt;ApiScanner&gt;singleton(ApiScanner.class);</span><br><span class=\"line\">    <span class=\"type\">val</span> <span class=\"variable\">scanner</span> <span class=\"operator\">=</span> Trunk.&lt;RequestScanner&gt;singleton(RequestScanner.class);</span><br><span class=\"line\">    <span class=\"type\">val</span> <span class=\"variable\">ret</span> <span class=\"operator\">=</span> scanner.scan(api.scan(classes));</span><br><span class=\"line\">    <span class=\"type\">val</span> <span class=\"variable\">get</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Request</span>().setAddr(<span class=\"string\">&quot;get&quot;</span>).setPath(<span class=\"string\">&quot;/test/hello/:id&quot;</span>).setHttpMethod(HttpMethod.GET)</span><br><span class=\"line\">      .setHttpStatus(HttpStatus.OK);</span><br><span class=\"line\">    <span class=\"type\">val</span> <span class=\"variable\">post</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Request</span>().setAddr(<span class=\"string\">&quot;post&quot;</span>).setPath(<span class=\"string\">&quot;/test/hello&quot;</span>).setHttpMethod(HttpMethod.POST)</span><br><span class=\"line\">      .setHttpStatus(HttpStatus.CREATED);</span><br><span class=\"line\">    <span class=\"type\">val</span> <span class=\"variable\">put</span> <span class=\"operator\">=</span></span><br><span class=\"line\">      <span class=\"keyword\">new</span> <span class=\"title class_\">Request</span>().setAddr(<span class=\"string\">&quot;put&quot;</span>).setPath(<span class=\"string\">&quot;/test/users/hello&quot;</span>).setHttpMethod(HttpMethod.PUT)</span><br><span class=\"line\">        .setHttpStatus(HttpStatus.ACCEPTED);</span><br><span class=\"line\">    <span class=\"type\">val</span> <span class=\"variable\">delete</span> <span class=\"operator\">=</span></span><br><span class=\"line\">      <span class=\"keyword\">new</span> <span class=\"title class_\">Request</span>().setAddr(<span class=\"string\">&quot;delete&quot;</span>).setPath(<span class=\"string\">&quot;/test/hello/:id&quot;</span>).setHttpMethod(HttpMethod.DELETE)</span><br><span class=\"line\">        .setHttpStatus(HttpStatus.NO_CONTENT);</span><br><span class=\"line\">    <span class=\"type\">val</span> <span class=\"variable\">xs</span> <span class=\"operator\">=</span> Arrays.asList(get, post, put, delete);</span><br><span class=\"line\">    <span class=\"type\">val</span> <span class=\"variable\">b</span> <span class=\"operator\">=</span> ret.stream().allMatch(x -&gt; xs.stream().anyMatch(y -&gt; compare(x, y)));</span><br><span class=\"line\">    Assert.assertTrue(b);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"type\">boolean</span> <span class=\"title function_\">compare</span><span class=\"params\">(Request x, Request y)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> x.getPath().equals(y.getPath()) &amp;&amp; x.getAddr().equals(y.getAddr()) &amp;&amp;</span><br><span class=\"line\">      x.getHttpMethod().equals(y.getHttpMethod()) &amp;&amp; x.getHttpStatus().equals(y.getHttpStatus());</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>测试结果<br><img src=\"/images/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%92%B8%E6%A1%86%E6%9E%B6/7/testret1.png\" alt=\"运行结果\"></p>\n<hr>\n<h2 id=\"动态解析\"><a href=\"#动态解析\" class=\"headerlink\" title=\"动态解析\"></a>动态解析</h2><h3 id=\"请求参数\"><a href=\"#请求参数\" class=\"headerlink\" title=\"请求参数\"></a>请求参数</h3><p>请求参数解析分为两步.</p>\n<ol>\n<li>注解解析: 根据注解决定调用何种解析方式,最典型的例子就是分别带有 <em>@PathParam</em>、*@BodyParam*注解的参数.</li>\n<li>类型解析: 根据类型决定调用何种类型转换方式.</li>\n</ol>\n<p>根据上面我们可以抽象出两个接口.</p>\n<h4 id=\"基类\"><a href=\"#基类\" class=\"headerlink\" title=\"基类\"></a>基类</h4><p><strong>IParamParser.java</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> org.btr.ygo.web.parse;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> io.vertx.ext.web.RoutingContext;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.core.kit.Trunk;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.web.annotations.BodyParam;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Parameter;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.HashMap;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Map;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> &lt;a href=&quot;mailto:1159930219@qq.com&quot;&gt;BornToRain&lt;/a&gt;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">IParamParser</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 表驱动模式</span></span><br><span class=\"line\">  Map&lt;Class&lt;?&gt;, IParamParser&gt; MAP = <span class=\"keyword\">new</span> <span class=\"title class_\">HashMap</span>&lt;&gt;() &#123;&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 根据请求参数上的注解选用对应的参数解析器</span></span><br><span class=\"line\">    put(BodyParam.class, Trunk.singleton(BodyParamParser.class));</span><br><span class=\"line\">  &#125;&#125;;</span><br><span class=\"line\">  <span class=\"keyword\">static</span> IParamParser <span class=\"title function_\">get</span><span class=\"params\">(Class&lt;?&gt; key)</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 找不到解析器默认采用Body解析器</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> MAP.getOrDefault(key, Trunk.singleton(BodyParamParser.class));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  Object <span class=\"title function_\">parse</span><span class=\"params\">(RoutingContext context, Parameter param)</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>IConvert.java</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> org.btr.ygo.web.convert;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> io.vertx.core.json.JsonObject;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.core.kit.Trunk;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.HashMap;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Map;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> &lt;a href=&quot;mailto:1159930219@qq.com&quot;&gt;BornToRain&lt;/a&gt;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">IConvert</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 表驱动模式</span></span><br><span class=\"line\">  Map&lt;Class&lt;?&gt;, IConvert&gt; MAP = <span class=\"keyword\">new</span> <span class=\"title class_\">HashMap</span>&lt;&gt;() &#123;&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 根据key选用对应的转换器实现</span></span><br><span class=\"line\">    put(<span class=\"type\">int</span>.class, Trunk.singleton(IntConvert.class));</span><br><span class=\"line\">    put(Integer.class, Trunk.singleton(IntConvert.class));</span><br><span class=\"line\">  &#125;&#125;;</span><br><span class=\"line\">  <span class=\"keyword\">static</span> IConvert <span class=\"title function_\">get</span><span class=\"params\">(Class&lt;?&gt; key)</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 找不到可用转换器,默认调用字符串转换器.</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> MAP.getOrDefault(key, Trunk.singleton(StringConvert.class));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  Object <span class=\"title function_\">convert</span><span class=\"params\">(String str)</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"具体实现\"><a href=\"#具体实现\" class=\"headerlink\" title=\"具体实现\"></a>具体实现</h4><p>挨个实现比较长,这里我仅以解析 <em>@BodyParam</em>注解和参数类型为<em>Int</em>的代码为例.</p>\n<p><strong>IntConvert.java</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> org.btr.ygo.web.convert;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.core.kit.Fn;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> &lt;a href=&quot;mailto:1159930219@qq.com&quot;&gt;BornToRain&lt;/a&gt;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"keyword\">class</span> <span class=\"title class_\">IntConvert</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">IConvert</span> &#123;</span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> Object <span class=\"title function_\">convert</span><span class=\"params\">(String str)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> Fn.ensureRun(() -&gt; Integer.parseInt(str), str);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>BodyParamParser.java</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> org.btr.ygo.web.parse;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> io.vertx.ext.web.RoutingContext;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.web.convert.IConvert;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Parameter;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> &lt;a href=&quot;mailto:1159930219@qq.com&quot;&gt;BornToRain&lt;/a&gt;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BodyParamParser</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">IParamParser</span> &#123;</span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> Object <span class=\"title function_\">parse</span><span class=\"params\">(RoutingContext context, Parameter param)</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 通过字段类型找到转换器开始转换请求参数值.</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> IConvert.get(param.getType()).convert(context.getBodyAsString());</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>多种注解以及类型解析只需挨个继承实现<em>IParamParser.java</em>和<em>IConvert.java</em>即可.</p>\n<h3 id=\"http工作流\"><a href=\"#http工作流\" class=\"headerlink\" title=\"http工作流\"></a>http工作流</h3><p>一次http请求响应过程如下:</p>\n<ol>\n<li>接收请求 </li>\n<li>解析请求路径、方式、媒体类型等…各个参数(静态解析部分)</li>\n<li>调用函数处理(Async、Sync、Rx…等反射调用)</li>\n<li>Reactor结构请求(Vert.x中用EventBus实现)</li>\n<li>根据请求头返回对应数据结构数据(Json、Xml、Text、二进制…不同响应策略)</li>\n</ol>\n<p>根据上述写出接口.</p>\n<h4 id=\"基类-1\"><a href=\"#基类-1\" class=\"headerlink\" title=\"基类\"></a>基类</h4><p>响应工具类.</p>\n<p><strong>Responds.java</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> org.btr.ygo.web.kit;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> io.vertx.core.http.HttpServerResponse;</span><br><span class=\"line\"><span class=\"keyword\">import</span> io.vertx.ext.web.RoutingContext;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.val;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.core.kit.Fn;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.web.constant.HttpStatus;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.web.scan.Request;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Objects;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> &lt;a href=&quot;mailto:1159930219@qq.com&quot;&gt;BornToRain&lt;/a&gt;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Responds</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">failed</span><span class=\"params\">(RoutingContext context, Throwable ex)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (Objects.nonNull(ex)) ex.printStackTrace();</span><br><span class=\"line\">    <span class=\"type\">val</span> <span class=\"variable\">rep</span> <span class=\"operator\">=</span> context.response();</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!rep.closed()) rep.setStatusCode(HttpStatus.INTERNAL_SERVER_ERROR.code)</span><br><span class=\"line\">      .setStatusMessage(HttpStatus.INTERNAL_SERVER_ERROR.msg);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> HttpServerResponse <span class=\"title function_\">succeed</span><span class=\"params\">(RoutingContext context, Request req)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">val</span> <span class=\"variable\">rep</span> <span class=\"operator\">=</span> context.response();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> Fn.ensureRun(rep.closed(),</span><br><span class=\"line\">      () -&gt; rep,</span><br><span class=\"line\">      () -&gt; &#123;</span><br><span class=\"line\">        <span class=\"type\">val</span> <span class=\"variable\">httpStatus</span> <span class=\"operator\">=</span> req.getHttpStatus();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> rep.setStatusCode(httpStatus.code).setStatusMessage(httpStatus.msg);</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>响应数据结构接口,根据不同结构实现不同子类.</p>\n<p><strong>IRepStruct.java</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> org.btr.ygo.web.struct;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> io.vertx.core.http.HttpServerResponse;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.core.kit.Trunk;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.ws.rs.core.MediaType;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.HashMap;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Map;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 响应数据结构</span></span><br><span class=\"line\"><span class=\"comment\"> * 1. Json</span></span><br><span class=\"line\"><span class=\"comment\"> * 2. Xml</span></span><br><span class=\"line\"><span class=\"comment\"> * 3. Text</span></span><br><span class=\"line\"><span class=\"comment\"> * 4. 二进制</span></span><br><span class=\"line\"><span class=\"comment\"> * ...</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> &lt;a href=&quot;mailto:1159930219@qq.com&quot;&gt;BornToRain&lt;/a&gt;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">RepStruct</span> &#123;</span><br><span class=\"line\">  Map&lt;String, RepStruct&gt; MAP = <span class=\"keyword\">new</span> <span class=\"title class_\">HashMap</span>&lt;&gt;() &#123;&#123;</span><br><span class=\"line\">    put(MediaType.APPLICATION_JSON, Trunk.singleton(JsonRepStruct.class));</span><br><span class=\"line\">    put(MediaType.TEXT_HTML, Trunk.singleton(TextRepStruct.class));</span><br><span class=\"line\">  &#125;&#125;;</span><br><span class=\"line\">  <span class=\"keyword\">static</span> RepStruct <span class=\"title function_\">get</span><span class=\"params\">(String key)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> MAP.getOrDefault(key, Trunk.singleton(JsonRepStruct.class));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">void</span> <span class=\"title function_\">respond</span><span class=\"params\">(HttpServerResponse rep, Object ret)</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>http流接口,子类实现不同http工作流程.</p>\n<p><strong>IHttpFlow.java</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> org.btr.ygo.web;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> io.vertx.core.Future;</span><br><span class=\"line\"><span class=\"keyword\">import</span> io.vertx.core.Handler;</span><br><span class=\"line\"><span class=\"keyword\">import</span> io.vertx.ext.web.RoutingContext;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.core.kit.Trunk;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.web.scan.Request;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.HashMap;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Map;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * http工作流</span></span><br><span class=\"line\"><span class=\"comment\"> * 1. 接收请求</span></span><br><span class=\"line\"><span class=\"comment\"> * 2. 解析请求路径、方式、媒体类型等...各个参数</span></span><br><span class=\"line\"><span class=\"comment\"> * 3. 调用函数处理(Async、Sync、Rx...)</span></span><br><span class=\"line\"><span class=\"comment\"> * 4. Reactor结构请求(Vert.x中用EventBus实现)</span></span><br><span class=\"line\"><span class=\"comment\"> * 5. 根据请求头返回对应数据结构数据(Json、Xml、Text、二进制...)</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> &lt;a href=&quot;mailto:1159930219@qq.com&quot;&gt;BornToRain&lt;/a&gt;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">IFlow</span> &#123;</span><br><span class=\"line\">  Map&lt;Class&lt;?&gt;, IFlow&gt; MAP = <span class=\"keyword\">new</span> <span class=\"title class_\">HashMap</span>&lt;&gt;() &#123;&#123;</span><br><span class=\"line\">    put(Future.class, Trunk.singleton(FutureFlow.class));</span><br><span class=\"line\">  &#125;&#125;;</span><br><span class=\"line\">  <span class=\"keyword\">static</span> IFlow <span class=\"title function_\">get</span><span class=\"params\">(Class&lt;?&gt; key)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> MAP.getOrDefault(key, Trunk.singleton(FutureFlow.class));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  Handler&lt;RoutingContext&gt; <span class=\"title function_\">handle</span><span class=\"params\">(Request req)</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"具体实现-1\"><a href=\"#具体实现-1\" class=\"headerlink\" title=\"具体实现\"></a>具体实现</h4><p>这里仅实现Vert.x中的Future响应流与Json数据结构.</p>\n<p><strong>JsonRepStruct.java</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> org.btr.ygo.web.struct;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> io.vertx.core.http.HttpServerResponse;</span><br><span class=\"line\"><span class=\"keyword\">import</span> io.vertx.core.json.Json;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.core.kit.Fn;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Objects;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> &lt;a href=&quot;mailto:1159930219@qq.com&quot;&gt;BornToRain&lt;/a&gt;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"keyword\">class</span> <span class=\"title class_\">JsonRepStruct</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">RepStruct</span> &#123;</span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">respond</span><span class=\"params\">(HttpServerResponse rep, Object ret)</span> &#123;</span><br><span class=\"line\">    Fn.ensureRun(Objects.nonNull(ret), () -&gt; rep.end(Json.encode(ret)), rep::end);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>FutureHttpFlow.java</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> org.btr.ygo.web.flow;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> io.vertx.core.Handler;</span><br><span class=\"line\"><span class=\"keyword\">import</span> io.vertx.ext.web.RoutingContext;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.extern.log4j.Log4j2;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.val;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.core.constant.Console;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.core.constant.Const;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.core.kit.Fn;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.core.kit.Reflect;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.core.kit.Verticles;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.web.kit.Responds;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.web.parse.IParamParser;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.web.scan.Request;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.web.struct.RepStruct;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> &lt;a href=&quot;mailto:1159930219@qq.com&quot;&gt;BornToRain&lt;/a&gt;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Log4j2</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"keyword\">class</span> <span class=\"title class_\">FutureFlow</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">IFlow</span> &#123;</span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> Handler&lt;RoutingContext&gt; <span class=\"title function_\">handle</span><span class=\"params\">(Request req)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> context -&gt; &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 1. 解析参数</span></span><br><span class=\"line\">      <span class=\"type\">val</span> <span class=\"variable\">args</span> <span class=\"operator\">=</span> IParamParser.parseArgs(context, req);</span><br><span class=\"line\">      <span class=\"comment\">// 2. 调用函数(Async,Sync,Rx...)</span></span><br><span class=\"line\">      <span class=\"type\">val</span> <span class=\"variable\">method</span> <span class=\"operator\">=</span> req.getMethod();</span><br><span class=\"line\">      <span class=\"type\">val</span> <span class=\"variable\">methodName</span> <span class=\"operator\">=</span> method.getName();</span><br><span class=\"line\">      <span class=\"type\">val</span> <span class=\"variable\">ret</span> <span class=\"operator\">=</span> Reflect.invokeMethod(req.getProxy(), methodName, args);</span><br><span class=\"line\">      log.info(Console.INVOKE, method.getDeclaringClass(), methodName, Fn.join(Const.COMMA, args));</span><br><span class=\"line\">      <span class=\"comment\">// 3. event-bus请求(reactor结构)</span></span><br><span class=\"line\">      <span class=\"type\">val</span> <span class=\"variable\">future</span> <span class=\"operator\">=</span> context.vertx().eventBus().request(req.getAddr(), ret, Verticles.delivery());</span><br><span class=\"line\">      future.onComplete(ar -&gt; &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (ar.failed()) Responds.failed(context, ar.cause());</span><br><span class=\"line\">        <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          <span class=\"comment\">// 4. 响应数据结构(Json,Xml,Text...)</span></span><br><span class=\"line\">          <span class=\"type\">val</span> <span class=\"variable\">struct</span> <span class=\"operator\">=</span> RepStruct.get(context.getAcceptableContentType());</span><br><span class=\"line\">          struct.respond(Responds.succeed(context, req), ar.result().body());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>重构前文的<em>EventloopHttpActor.java</em>,把动态参数解析加上.</p>\n<p><strong>EventloopHttpActor.java</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> org.btr.ygo.web.actor;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> io.vertx.core.AbstractVerticle;</span><br><span class=\"line\"><span class=\"keyword\">import</span> io.vertx.core.http.HttpMethod;</span><br><span class=\"line\"><span class=\"keyword\">import</span> io.vertx.core.http.HttpServerOptions;</span><br><span class=\"line\"><span class=\"keyword\">import</span> io.vertx.ext.web.Route;</span><br><span class=\"line\"><span class=\"keyword\">import</span> io.vertx.ext.web.Router;</span><br><span class=\"line\"><span class=\"keyword\">import</span> io.vertx.ext.web.handler.BodyHandler;</span><br><span class=\"line\"><span class=\"keyword\">import</span> io.vertx.ext.web.handler.CorsHandler;</span><br><span class=\"line\"><span class=\"keyword\">import</span> io.vertx.ext.web.handler.ResponseContentTypeHandler;</span><br><span class=\"line\"><span class=\"keyword\">import</span> io.vertx.ext.web.handler.SessionHandler;</span><br><span class=\"line\"><span class=\"keyword\">import</span> io.vertx.ext.web.handler.TimeoutHandler;</span><br><span class=\"line\"><span class=\"keyword\">import</span> io.vertx.ext.web.sstore.ClusteredSessionStore;</span><br><span class=\"line\"><span class=\"keyword\">import</span> io.vertx.ext.web.sstore.LocalSessionStore;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.extern.log4j.Log4j2;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.val;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.core.annotations.Eventloop;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.core.constant.Const;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.core.kit.Trunk;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.web.config.CorsConfig;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.web.config.Server;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.web.constant.Console;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.web.flow.IFlow;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.web.kit.Deck;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.web.kit.Network;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.btr.ygo.web.scan.Request;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Method;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Objects;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> &lt;a href=&quot;mailto:1159930219@qq.com&quot;&gt;BornToRain&lt;/a&gt;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Log4j2</span></span><br><span class=\"line\"><span class=\"meta\">@Eventloop</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"keyword\">class</span> <span class=\"title class_\">EventloopHttpActor</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">AbstractVerticle</span> &#123;</span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">start</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">    Deck.HTTP_SERVERS.forEach((port, config) -&gt; &#123;</span><br><span class=\"line\">      <span class=\"type\">val</span> <span class=\"variable\">router</span> <span class=\"operator\">=</span> Router.router(vertx);</span><br><span class=\"line\">      configRouter(router);</span><br><span class=\"line\">      configRequest(router);</span><br><span class=\"line\">      server(router, port, config);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">configRouter</span><span class=\"params\">(Router router)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">val</span> <span class=\"variable\">store</span> <span class=\"operator\">=</span></span><br><span class=\"line\">      vertx.isClustered() ? ClusteredSessionStore.create(vertx) : LocalSessionStore.create(vertx);</span><br><span class=\"line\">    <span class=\"type\">val</span> <span class=\"variable\">cors</span> <span class=\"operator\">=</span> Trunk.&lt;CorsConfig&gt;singleton(CorsConfig.class).read();</span><br><span class=\"line\">    <span class=\"comment\">// POST|PUT请求才接收body,其他不接收解析更快.</span></span><br><span class=\"line\">    router.route().method(HttpMethod.POST).method(HttpMethod.PUT).handler(BodyHandler.create())</span><br><span class=\"line\">      <span class=\"comment\">// 全局默认超时: 5s</span></span><br><span class=\"line\">      .handler(TimeoutHandler.create())</span><br><span class=\"line\">      .handler(ResponseContentTypeHandler.create())</span><br><span class=\"line\">      .handler(SessionHandler.create(store))</span><br><span class=\"line\">      <span class=\"comment\">// 跨域</span></span><br><span class=\"line\">      .handler(CorsHandler.create(cors.getOrigin()).allowCredentials(cors.getAllowCredentials())</span><br><span class=\"line\">        .allowedHeaders(cors.getAllowedHeaders()).allowedMethods(cors.getAllowedMethods()));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">server</span><span class=\"params\">(Router router, Integer port, Server config)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">val</span> <span class=\"variable\">options</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">HttpServerOptions</span>(config.getOptions());</span><br><span class=\"line\">    vertx.createHttpServer(options).requestHandler(router).listen();</span><br><span class=\"line\">    <span class=\"comment\">// 发布api地址</span></span><br><span class=\"line\">    <span class=\"type\">val</span> <span class=\"variable\">path</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;http://&quot;</span> + Network.getIPv4() + Const.COLON + port + Const.SLASH;</span><br><span class=\"line\">    log.info(Console.SERVER, getClass().getSimpleName(), Const.HTTP, path);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">configRequest</span><span class=\"params\">(Router router)</span> &#123;</span><br><span class=\"line\">    Deck.REQUESTS.forEach(req -&gt; &#123;</span><br><span class=\"line\">      <span class=\"type\">val</span> <span class=\"variable\">route</span> <span class=\"operator\">=</span> router.route(req.getHttpMethod(), req.getPath());</span><br><span class=\"line\">      timeoutIf(req, route);</span><br><span class=\"line\">      mediaTypeIf(req, route);</span><br><span class=\"line\">      setHandler(req, route);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">timeoutIf</span><span class=\"params\">(Request req, Route route)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">val</span> <span class=\"variable\">timeout</span> <span class=\"operator\">=</span> req.getTimeout();</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (Objects.nonNull(timeout) &amp;&amp; timeout &gt; <span class=\"number\">0</span>) route.handler(TimeoutHandler.create(timeout));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">mediaTypeIf</span><span class=\"params\">(Request req, Route route)</span> &#123;</span><br><span class=\"line\">    req.getConsumes().forEach(route::consumes);</span><br><span class=\"line\">    req.getProduces().forEach(route::produces);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setHandler</span><span class=\"params\">(Request req, Route route)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">val</span> <span class=\"variable\">method</span> <span class=\"operator\">=</span> findReceipter(req);</span><br><span class=\"line\">    <span class=\"comment\">// TODO 目前只支持Async/Sync</span></span><br><span class=\"line\">    <span class=\"type\">val</span> <span class=\"variable\">handler</span> <span class=\"operator\">=</span> IFlow.get(method.getReturnType()).handle(req);</span><br><span class=\"line\">    route.handler(handler);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> Method <span class=\"title function_\">findReceipter</span><span class=\"params\">(Request req)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">val</span> <span class=\"variable\">addr</span> <span class=\"operator\">=</span> req.getAddr();</span><br><span class=\"line\">    <span class=\"type\">val</span> <span class=\"variable\">receipt</span> <span class=\"operator\">=</span></span><br><span class=\"line\">      Trunk.RECEIPTS.stream().filter(d -&gt; d.getAddr().equals(addr))</span><br><span class=\"line\">        .findAny().orElseThrow(() -&gt; <span class=\"keyword\">new</span> <span class=\"title class_\">NullPointerException</span>(</span><br><span class=\"line\">        <span class=\"string\">&quot;No method under the @EventBus class for the @Addr annotation value &quot;</span> + addr +</span><br><span class=\"line\">          <span class=\"string\">&quot; was found&quot;</span>));</span><br><span class=\"line\">    <span class=\"keyword\">return</span> receipt.getMethod();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>这一篇我们把Vert.x中路由使用改造成我们最熟悉的Spring注解式开发模式了,以后使用的话更加顺手习惯.</p>\n","text":"上一篇讲完了全局配置,这一篇我们来讲每个路由的集成. Vert.x原始使用方式样例来自于Vert.x官网 Vert.x配置api接口1234567public ...","permalink":"/post/从零开始撸框架(8)-与Vert.x集成 Web篇(二)","photos":[],"count_time":{"symbolsCount":"25k","symbolsTime":"23 mins."},"categories":[{"name":"从零开始","slug":"从零开始","count":8,"path":"api/categories/从零开始.json"}],"tags":[{"name":"Vert.x","slug":"Vert-x","count":8,"path":"api/tags/Vert-x.json"},{"name":"Actor","slug":"Actor","count":8,"path":"api/tags/Actor.json"},{"name":"设计模式","slug":"设计模式","count":8,"path":"api/tags/设计模式.json"},{"name":"Java","slug":"Java","count":9,"path":"api/tags/Java.json"},{"name":"代理模式","slug":"代理模式","count":4,"path":"api/tags/代理模式.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Vert-x%E5%8E%9F%E5%A7%8B%E4%BD%BF%E7%94%A8%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">Vert.x原始使用方式</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Vert-x%E9%85%8D%E7%BD%AEapi%E6%8E%A5%E5%8F%A3\"><span class=\"toc-text\">Vert.x配置api接口</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%9D%99%E6%80%81%E8%A7%A3%E6%9E%90\"><span class=\"toc-text\">静态解析</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%AF%B7%E6%B1%82%E8%B7%AF%E5%BE%84\"><span class=\"toc-text\">请求路径</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%AF%B7%E6%B1%82%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">请求方式</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AA%92%E4%BD%93%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">媒体类型</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%93%8D%E5%BA%94%E7%8A%B6%E6%80%81\"><span class=\"toc-text\">响应状态</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%89%AB%E6%8F%8F%E5%99%A8\"><span class=\"toc-text\">扫描器</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%8E%A5%E5%8F%A3%E6%89%AB%E6%8F%8F%E5%99%A8\"><span class=\"toc-text\">接口扫描器</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%AF%B7%E6%B1%82%E6%89%AB%E6%8F%8F%E5%99%A8\"><span class=\"toc-text\">请求扫描器</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B5%8B%E8%AF%95\"><span class=\"toc-text\">测试</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8A%A8%E6%80%81%E8%A7%A3%E6%9E%90\"><span class=\"toc-text\">动态解析</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%AF%B7%E6%B1%82%E5%8F%82%E6%95%B0\"><span class=\"toc-text\">请求参数</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E7%B1%BB\"><span class=\"toc-text\">基类</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%85%B7%E4%BD%93%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\">具体实现</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#http%E5%B7%A5%E4%BD%9C%E6%B5%81\"><span class=\"toc-text\">http工作流</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E7%B1%BB-1\"><span class=\"toc-text\">基类</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%85%B7%E4%BD%93%E5%AE%9E%E7%8E%B0-1\"><span class=\"toc-text\">具体实现</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">总结</span></a></li></ol>","author":{"name":"因雨而生","slug":"blog-author","avatar":"/images/avatar.jpg","link":"/","description":"一直没脱离低级趣味的Coder","socials":{"github":"https://github.com/BornToRain","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"Ros2点云开发(1)-环境搭建(Ubuntu)","uid":"05338416b83a2fce4839c3b86a9b81c3","slug":"Ros2点云开发(1)-环境搭建(Ubuntu)","date":"2024-03-28T05:40:23.000Z","updated":"2024-03-28T09:22:32.858Z","comments":true,"path":"api/articles/Ros2点云开发(1)-环境搭建(Ubuntu).json","keywords":["Coder","Scalaer","Javaer"],"cover":"/images/ros2logo.png","text":"前言记录下开发环境的搭建过程. 所需软件开发所需: Ubuntu 20.04(操作系统) Ros2 Foxy(Robot Operating System机器人...","permalink":"/post/Ros2点云开发(1)-环境搭建(Ubuntu)","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"点云","slug":"点云","count":2,"path":"api/categories/点云.json"}],"tags":[{"name":"Ubuntu","slug":"Ubuntu","count":1,"path":"api/tags/Ubuntu.json"},{"name":"Ros2","slug":"Ros2","count":2,"path":"api/tags/Ros2.json"},{"name":"PCL","slug":"PCL","count":2,"path":"api/tags/PCL.json"}],"author":{"name":"因雨而生","slug":"blog-author","avatar":"/images/avatar.jpg","link":"/","description":"一直没脱离低级趣味的Coder","socials":{"github":"https://github.com/BornToRain","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"从零开始撸框架(7)-与Vert.x集成 Web篇(一)","uid":"c38b17588d251cd9846139dacf4f50ed","slug":"从零开始撸框架(7)-与Vert.x集成 Web篇(一)","date":"2021-05-10T06:50:32.000Z","updated":"2021-06-09T08:46:02.182Z","comments":true,"path":"api/articles/从零开始撸框架(7)-与Vert.x集成 Web篇(一).json","keywords":["Coder","Scalaer","Javaer"],"cover":"/images/vertxlogo.png","text":"上一篇讲完了与Vert.x集成的整体情况,这一篇开始与vertx-web集成. 这些内容我们主要在web模块中进行开发. Web全局集成web组件下的build...","permalink":"/post/从零开始撸框架(7)-与Vert.x集成 Web篇(一)","photos":[],"count_time":{"symbolsCount":"8k","symbolsTime":"7 mins."},"categories":[{"name":"从零开始","slug":"从零开始","count":8,"path":"api/categories/从零开始.json"}],"tags":[{"name":"Vert.x","slug":"Vert-x","count":8,"path":"api/tags/Vert-x.json"},{"name":"Actor","slug":"Actor","count":8,"path":"api/tags/Actor.json"},{"name":"设计模式","slug":"设计模式","count":8,"path":"api/tags/设计模式.json"},{"name":"Java","slug":"Java","count":9,"path":"api/tags/Java.json"},{"name":"代理模式","slug":"代理模式","count":4,"path":"api/tags/代理模式.json"}],"author":{"name":"因雨而生","slug":"blog-author","avatar":"/images/avatar.jpg","link":"/","description":"一直没脱离低级趣味的Coder","socials":{"github":"https://github.com/BornToRain","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}