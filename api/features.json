[{"title":"从零开始撸框架(2)-项目龙骨","uid":"1f961444d2b8322d4f975faeb98fbea1","slug":"从零开始撸框架(2)-项目龙骨","date":"2021-04-29T02:03:09.000Z","updated":"2021-04-29T03:30:21.583Z","comments":true,"path":"api/articles/从零开始撸框架(2)-项目龙骨.json","cover":"/images/vertxlogo.png","text":"项目结构上文说到框架包含Ioc、Di、Orm、Cache等功能,其中只有前两者为核心功能.那么结构上可以采用分包结构开发,即分为核心、组件等功能包,如下. org.btr.ygo.core 核心包,包含了框架ioc、di功能,为其他组件提供支持. org.btr.ygo.tp t...","link":"","photos":[],"count_time":{"symbolsCount":"4.8k","symbolsTime":"4 mins."},"categories":[{"name":"从零开始","slug":"从零开始","count":2,"path":"api/categories/从零开始.json"}],"tags":[{"name":"Vert.x","slug":"Vert-x","count":2,"path":"api/tags/Vert-x.json"},{"name":"Actor","slug":"Actor","count":2,"path":"api/tags/Actor.json"},{"name":"设计模式","slug":"设计模式","count":2,"path":"api/tags/设计模式.json"},{"name":"Java","slug":"Java","count":3,"path":"api/tags/Java.json"}],"author":{"name":"因雨而生","slug":"blog-author","avatar":"/images/avatar.jpg","link":"/","description":"一直没脱离低级趣味的Coder","socials":{"github":"https://github.com/BornToRain","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"奇淫巧技(2)-Jvm篇","uid":"1da24bfae57d43586cc931d1d18b42d9","slug":"奇淫巧技(2)-Jvm篇","date":"2021-04-28T00:04:30.000Z","updated":"2021-04-29T02:04:35.988Z","comments":true,"path":"api/articles/奇淫巧技(2)-Jvm篇.json","cover":"/images/javalogo.png","text":"函数内联在讲函数内联之前还得讲一个Jvm经常遇到的异常StackOverFlowException,该异常一般翻译成堆栈溢出异常,其实正确或者说更严谨的翻译应该是栈溢出,栈溢出大部分发生在函数的循环或递归调用之中,极少数在对象循环创建中. 函数调用过程 Jvm栈内存会存储所有热度...","link":"","photos":[],"count_time":{"symbolsCount":995,"symbolsTime":"1 mins."},"categories":[{"name":"奇淫巧技","slug":"奇淫巧技","count":2,"path":"api/categories/奇淫巧技.json"}],"tags":[{"name":"Jvm","slug":"Jvm","count":1,"path":"api/tags/Jvm.json"}],"author":{"name":"因雨而生","slug":"blog-author","avatar":"/images/avatar.jpg","link":"/","description":"一直没脱离低级趣味的Coder","socials":{"github":"https://github.com/BornToRain","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"奇淫巧技(1)-Java篇","uid":"91972c9f8cfda280c91f3305c833ffbf","slug":"奇淫巧技(1)-Java篇 ","date":"2021-04-27T23:20:29.000Z","updated":"2021-04-28T02:08:14.834Z","comments":true,"path":"api/articles/奇淫巧技(1)-Java篇 .json","cover":"/images/javalogo.png","text":"编码习惯多使用值(val)而不是变量(var) 变量非线程安全,并发存在读写问题.而值因为其不可修改性天然线程安全无读写问题.多线程开发中值也不用锁,性能更优,程序猿也不用关心多线程下的并发读写锁问题,心智要求大大降低. 单线程性能也更高,如图.// 1 public stati...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"奇淫巧技","slug":"奇淫巧技","count":2,"path":"api/categories/奇淫巧技.json"}],"tags":[{"name":"Java","slug":"Java","count":3,"path":"api/tags/Java.json"},{"name":"面向函数(FP)","slug":"面向函数-FP","count":1,"path":"api/tags/面向函数-FP.json"}],"author":{"name":"因雨而生","slug":"blog-author","avatar":"/images/avatar.jpg","link":"/","description":"一直没脱离低级趣味的Coder","socials":{"github":"https://github.com/BornToRain","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}]